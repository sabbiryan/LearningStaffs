<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FamilySearch.API.SDK</name>
    </assembly>
    <members>
        <member name="T:FamilySearch.Api.DiscussionsState">
            <summary>
            The DiscussionsState exposes management functions for discussions.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.DiscussionsState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.DiscussionsState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.DiscussionsState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.DiscussionsState.ReadCollection(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the collection specified by this state instance.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.DiscussionsState.AddDiscussion(Gx.Fs.Discussions.Discussion,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a discussion to this discussions state instance.
            </summary>
            <param name="discussion">The discussion to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.DiscussionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="P:FamilySearch.Api.DiscussionsState.Discussions">
            <summary>
            Gets the current <see cref="P:FamilySearchPlatform.Discussions"/>.
            </summary>
            <value>
            The current <see cref="P:FamilySearchPlatform.Discussions"/>.
            </value>
        </member>
        <member name="T:FamilySearch.Api.DiscussionState">
            <summary>
            The DiscussionState exposes management functions for a discussion.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.DiscussionState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.DiscussionState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.DiscussionState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.DiscussionState.LoadEntity(RestSharp.IRestResponse)">
            <summary>
            Returns the <see cref="T:Gx.Fs.FamilySearchPlatform"/> from the REST API response.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>The <see cref="T:Gx.Fs.FamilySearchPlatform"/> from the REST API response.</returns>
        </member>
        <member name="M:FamilySearch.Api.DiscussionState.CreateEmptySelf">
            <summary>
            Instantiates a new <see cref="P:FamilySearch.Api.DiscussionState.Discussion"/> and only sets the <see cref="P:Discussion.Id"/> to the current discussion's ID.
            </summary>
            <returns>A new <see cref="P:FamilySearch.Api.DiscussionState.Discussion"/> with a matching discussion ID for the current discussion ID.</returns>
        </member>
        <member name="M:FamilySearch.Api.DiscussionState.LoadComments(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads the comments for the current discussion.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.DiscussionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.DiscussionState.CreateRequestForEmbeddedResource(System.String)">
            <summary>
            Creates a REST API request (with appropriate authentication headers).
            </summary>
            <param name="rel">This parameter is currently unused.</param>
            <returns>
            A REST API requeset (with appropriate authentication headers).
            </returns>
        </member>
        <member name="M:FamilySearch.Api.DiscussionState.Update(Gx.Fs.Discussions.Discussion,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified discussion.
            </summary>
            <param name="discussion">The discussion to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.DiscussionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.DiscussionState.AddComment(System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a comment to the current discussion.
            </summary>
            <param name="comment">The comment to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.DiscussionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.DiscussionState.AddComment(Gx.Fs.Discussions.Comment,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a comment to the current discussion.
            </summary>
            <param name="comment">The comment to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.DiscussionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.DiscussionState.AddComments(Gx.Fs.Discussions.Comment[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the specified comments to the current discussion.
            </summary>
            <param name="comments">The comments to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.DiscussionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.DiscussionState.UpdateComment(Gx.Fs.Discussions.Comment,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified comment on the current discussion.
            </summary>
            <param name="comment">The comment to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.DiscussionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.DiscussionState.UpdateComments(Gx.Fs.Discussions.Comment[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified comments on the current discussion.
            </summary>
            <param name="comments">The comments to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.DiscussionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.DiscussionState.UpdateComments(Gx.Fs.Discussions.Discussion,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the comments on the specified discussion.
            </summary>
            <param name="discussion">The discussion with comments to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.DiscussionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.DiscussionState.DeleteComment(Gx.Fs.Discussions.Comment,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the specified comment from the current discussion.
            </summary>
            <param name="comment">The comment to delete.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.DiscussionState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Comment cannot be deleted: missing link.</exception>
        </member>
        <member name="P:FamilySearch.Api.DiscussionState.MainDataElement">
            <summary>
            Gets the main data element represented by this state instance.
            </summary>
            <value>
            The main data element represented by this state instance.
            </value>
        </member>
        <member name="P:FamilySearch.Api.DiscussionState.Discussion">
            <summary>
            Gets the first <see cref="P:FamilySearch.Api.DiscussionState.Discussion"/> from <see cref="P:FamilySearchPlatform.Discussions"/>.
            </summary>
            <value>
            The first <see cref="P:FamilySearch.Api.DiscussionState.Discussion"/> from <see cref="P:FamilySearchPlatform.Discussions"/>.
            </value>
        </member>
        <member name="P:FamilySearch.Api.DiscussionState.LocalSelfId">
            <summary>
            Gets the current <see cref="P:Discussion.Id" />.
            </summary>
            <value>
            The current <see cref="P:Discussion.Id"/>
            </value>
        </member>
        <member name="T:FamilySearch.Api.FamilySearchCollectionState">
            <summary>
            The FamilySearchCollectionState is a collection of FamilySearch resources and exposes management of those resources.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchCollectionState.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.FamilySearchCollectionState"/> class.
            </summary>
            <param name="uri">The URI where the target collection resides.</param>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchCollectionState.#ctor(System.Uri,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.FamilySearchCollectionState"/> class.
            </summary>
            <param name="uri">The URI where the target resides.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchCollectionState.#ctor(System.Uri,Gx.Rs.Api.Util.IFilterableRestClient,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.FamilySearchCollectionState"/> class.
            </summary>
            <param name="uri">The URI where the target resides.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchCollectionState.#ctor(RestSharp.IRestRequest,Gx.Rs.Api.Util.IFilterableRestClient,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.FamilySearchCollectionState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchCollectionState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.FamilySearchCollectionState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchCollectionState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchCollectionState.NormalizeDate(System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Normalizes the specified date to a <see cref="T:Gx.Conclusion.DateInfo"/>.
            </summary>
            <param name="date">The date to be normalized.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns></returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchCollectionState.ReadCurrentUser(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the current tree user data.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.UserState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchCollectionState.SearchForPersonMatches(Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Searches for person matches based off the specified query.
            </summary>
            <param name="query">The query with search parameters to use.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonMatchResultsState"/> instance containing the REST API response.
            </returns>
            <remarks>
            The REST API may not produce results if the query is lacking in any way. When this occurs, use the <see cref="P:PersonMatchResults.Warnings"/>
            collection to determine possible causes. The most common issue is not supplying a sufficient number of search parameters, in which case too
            many search results could return.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchCollectionState.SearchForPersonMatches(System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Searches for person matches based off the specified query.
            </summary>
            <param name="query">The query with search parameters to use.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonMatchResultsState"/> instance containing the REST API response.
            </returns>
            <remarks>
            The REST API may not produce results if the query is lacking in any way. When this occurs, use the <see cref="P:PersonMatchResults.Warnings"/>
            collection to determine possible causes. The most common issue is not supplying a sufficient number of search parameters, in which case too
            many search results could return.
            
            The query string syntax is documented here: https://familysearch.org/developers/docs/api/tree/Person_Search_resource
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchCollectionState.ReadDiscussions(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the discussions on the current collection.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.DiscussionsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchCollectionState.AddDiscussion(Gx.Fs.Discussions.Discussion,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a discussion to the current collection.
            </summary>
            <param name="discussion">The discussion.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.DiscussionState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if a link to the required resource cannot be found.</exception>
        </member>
        <member name="T:FamilySearch.Api.FamilySearchPlaceDescriptionState">
            <summary>
            The FamilySearchPlaceDescriptionState exposes management functions for a FamilySearch place description.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaceDescriptionState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.FamilySearchPlaceDescriptionState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaceDescriptionState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaceDescriptionState.ReadPlace(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the place described by the current place description.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.FamilySearchPlaceState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="T:FamilySearch.Api.FamilySearchPlaces">
            <summary>
            The FamilySearchPlaces is a collection of FamilySearch places and exposes management of those places.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.FamilySearchPlaces.URI">
            <summary>
            The default production environment URI for this collection.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.FamilySearchPlaces.SANDBOX_URI">
            <summary>
            The default sandbox environment URI for this collection.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaces.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.FamilySearchPlaces"/> class using the production environment URI.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaces.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.FamilySearchPlaces"/> class.
            </summary>
            <param name="sandbox">If set to <c>true</c> this will use the sandbox environment URI; otherwise, it will use production.</param>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaces.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.FamilySearchPlaces"/> class.
            </summary>
            <param name="uri">The URI where the target collection resides.</param>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaces.#ctor(System.Uri,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.FamilySearchPlaces"/> class.
            </summary>
            <param name="uri">The URI where the target resides.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaces.#ctor(System.Uri,Gx.Rs.Api.Util.IFilterableRestClient,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.FamilySearchPlaces"/> class.
            </summary>
            <param name="uri">The URI where the target resides.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaces.#ctor(RestSharp.IRestRequest,Gx.Rs.Api.Util.IFilterableRestClient,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.FamilySearchPlaces"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaces.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.FamilySearchPlaces"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaces.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaces.AuthenticateViaUnauthenticatedAccess(System.String,System.String)">
            <summary>
            Creates a state instance without authentication. It will produce an access token, but only good for requests that do not need authentication.
            </summary>
            <param name="clientId">The client identifier.</param>
            <param name="ipAddress">The ip address.</param>
            <returns>A <see cref="T:FamilySearch.Api.FamilySearchPlaces"/> instance containing the REST API response.</returns>
            <remarks>See https://familysearch.org/developers/docs/guides/oauth2 for more information.</remarks>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaces.ReadPlaceTypeGroups(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the place type groups of the current collection.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.VocabElementListState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaces.ReadPlaceTypes(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the place types of the current collection.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.VocabElementListState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaces.ReadPlaceElementList(System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads place element list using a link with a rel equal to the path specified.
            </summary>
            <param name="path">The path to use in search of the resource link.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.VocabElementListState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaces.ReadPlaceTypeGroupById(System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the place type group by the ID specified.
            </summary>
            <param name="id">The place type group ID to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.VocabElementListState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaces.ReadPlaceTypeById(System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the place type by the ID specified.
            </summary>
            <param name="id">The place type ID to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.VocabElementState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaces.ReadPlaceGroupById(System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Read the place group by the ID specified.
            </summary>
            <param name="id">The place group ID to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PlaceGroupState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="T:FamilySearch.Api.FamilySearchPlaceState">
            <summary>
            The FamilySearchPlaceState exposes management functions for a FamilySearch place.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaceState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.FamilySearchPlaceState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchPlaceState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="P:FamilySearch.Api.FamilySearchPlaceState.SelfRel">
            <summary>
            Gets the rel name for the currrent state instance. This is expected to be overridden.
            </summary>
            <value>
            The rel name for the currrent state instance
            </value>
        </member>
        <member name="P:FamilySearch.Api.FamilySearchPlaceState.MainDataElement">
            <summary>
            Gets the main data element represented by this state instance.
            </summary>
            <value>
            The main data element represented by this state instance.
            </value>
        </member>
        <member name="P:FamilySearch.Api.FamilySearchPlaceState.Place">
            <summary>
            Gets the first place from <see cref="P:Gx.Gedcomx.Places"/> represented by the current state instance.
            </summary>
            <value>
            The first place from <see cref="P:Gx.Gedcomx.Places"/> represented by the current state instance.
            </value>
        </member>
        <member name="T:FamilySearch.Api.FamilySearchSourceDescriptionState">
            <summary>
            The FamilySearchSourceDescriptionState exposes management functions for a FamilySearch source description.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchSourceDescriptionState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.FamilySearchSourceDescriptionState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchSourceDescriptionState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchSourceDescriptionState.ReadComments(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the comments on the current source description.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.DiscussionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchSourceDescriptionState.MoveToCollection(Gx.Rs.Api.CollectionState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Moves the current source description to the specified collection.
            </summary>
            <param name="collection">The target collection to contain this source description.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.FamilySearchSourceDescriptionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="T:FamilySearch.Api.FamilySearchStateFactory">
            <summary>
            The state factory is responsible for instantiating state classes from REST API responses.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewDiscussionsState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new discussions state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.DiscussionsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewDiscussionState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new discussion state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.DiscussionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewUserState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new user state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.UserState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewPersonMergeState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new person merge state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonMergeState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewPersonMatchResultsState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new person match results state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonMatchResultsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewPlacesState(System.Uri)">
            <summary>
            Returns a new FamilySearch places state by invoking the specified URI.
            </summary>
            <param name="discoveryUri">The URI where the target resides.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.FamilySearchPlaces"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewPlacesState(System.Uri,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Returns a new FamilySearch places state by invoking the specified URI using the specified client.
            </summary>
            <param name="discoveryUri">The URI where the target resides.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.FamilySearchPlaces"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewPlacesState(System.Uri,Gx.Rs.Api.Util.IFilterableRestClient,RestSharp.Method)">
            <summary>
            Returns a new FamilySearch places state by invoking the specified URI using the specified client and forcing the specific HTTP verb.
            </summary>
            <param name="discoveryUri">The URI where the target resides.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="method">The HTTP verb to use for invoking the discovery URI.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.FamilySearchPlaces"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewPlacesState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new FamilySearch places state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.FamilySearchPlaces"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewCollectionState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new FamilySearch collection state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewCollectionStateInt(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new FamilySearch collection state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewSourceDescriptionState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new FamilySearch source description state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewSourceDescriptionStateInt(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new FamilySearch source description state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewPersonState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new person state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewPersonStateInt(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new person state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewPersonNonMatchesState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new person non-matches state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonNonMatchesState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewPlaceState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new FamilySearch place state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.FamilySearchPlaceState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.NewPlaceDescriptionState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new place description state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PlaceDescriptionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.LoadDefaultClient(System.Uri)">
            <summary>
            Loads the default client for executing REST API requests.
            </summary>
            <param name="uri">The base URI for all future REST API requests to use with this client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.IFilterableRestClient"/> with the default configuration and filters.
            </returns>
            <remarks>
            REST API request logging is disabled by default. To enable logging of REST API requests, set the environment variable
            "enableLog4NetLogging" to "True" within the scope of the execution context (or a greater scope). The environment variable will
            be evaluated only once and only during this method. After the client has been created using this method, the environment variable
            will not enable or disable client request logging.
            
            This specific overload enables the "birth-date-not-considered-death-declaration" feature for every client created.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.FamilySearchStateFactory.LoadDefaultClientInt(System.Uri)">
            <summary>
            Loads the default client for executing REST API requests.
            </summary>
            <param name="uri">The base URI for all future REST API requests to use with this client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.IFilterableRestClient"/> with the default configuration and filters.
            </returns>
            <remarks>
            REST API request logging is disabled by default. To enable logging of REST API requests, set the environment variable
            "enableLog4NetLogging" to "True" within the scope of the execution context (or a greater scope). The environment variable will
            be evaluated only once and only during this method. After the client has been created using this method, the environment variable
            will not enable or disable client request logging.
            
            This specific overload enables the "birth-date-not-considered-death-declaration" feature for every client created.
            </remarks>
        </member>
        <member name="T:FamilySearch.Api.Ft.ChangeHistoryState">
            <summary>
            The ChangeHistoryState exposes management functions for a change history.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChangeHistoryState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.Ft.FamilyTreeStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.ChangeHistoryState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChangeHistoryState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChangeHistoryState.RestoreChange(Gx.Atom.Entry,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Restores the specified change (if it had been reverted).
            </summary>
            <param name="change">The change to restore.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChangeHistoryState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if a link to the required resource cannot be found.</exception>
        </member>
        <member name="P:FamilySearch.Api.Ft.ChangeHistoryState.Page">
            <summary>
            Gets the change history page represented by the current state instance.
            </summary>
            <value>
            The change history page represented by the current state instance.
            </value>
        </member>
        <member name="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState">
            <summary>
            The ChildAndParentsRelationshipState exposes management and other FamilySearch specific functions for a children and parents.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.Ft.FamilyTreeStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.LoadEntityConditionally(RestSharp.IRestResponse)">
            <summary>
            Loads the entity from the REST API response if the response should have data.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>Conditional returns the entity from the REST API response if the response should have data.</returns>
            <remarks>The REST API response should have data if the invoking request was a GET and the response status is OK or GONE.</remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.ReadCollection(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the collection specified by this state instance.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.FamilySearchFamilyTree"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.CreateRequestForEmbeddedResource(System.String)">
            <summary>
            Creates a REST API request (with appropriate authentication headers).
            </summary>
            <param name="rel">This parameter is currently unused.</param>
            <returns>
            A REST API requeset (with appropriate authentication headers).
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.LoadEmbeddedResources(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads all embedded resources for which the current FamilySearchPlatform has links.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.LoadEmbeddedResources(System.String[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads the embedded resources for the specified links.
            </summary>
            <param name="rels">The array of link names for which the current Gedcomx will be queried, and loaded if the links are present.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.LoadConclusions(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads conclusions for the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.LoadSourceReferences(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads source references for the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.LoadMediaReferences(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads media references for the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.LoadEvidenceReferences(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads evidence references for the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.LoadNotes(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads notes for the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.CreateEmptySelf">
            <summary>
            Instantiates a new <see cref="T:Gx.Fs.Tree.ChildAndParentsRelationship"/> and only sets the <see cref="P:ChildAndParentsRelationship.Id"/> to the current relationship's ID.
            </summary>
            <returns>A new <see cref="T:Gx.Fs.Tree.ChildAndParentsRelationship"/> with a matching relationship ID for the current relationship ID.</returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.AddFatherFact(Gx.Conclusion.Fact,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a father fact to the current relationship.
            </summary>
            <param name="fact">The fact to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.AddFatherFacts(Gx.Conclusion.Fact[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Add the specified father facts to the current relationship.
            </summary>
            <param name="facts">The facts to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateFatherFact(Gx.Conclusion.Fact,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Update the specified father fact on the current relationship.
            </summary>
            <param name="fact">The fact to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateFatherFacts(Gx.Conclusion.Fact[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Update the specified father facts on the current relationship.
            </summary>
            <param name="facts">The facts to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.AddMotherFact(Gx.Conclusion.Fact,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a mother fact to the current relationship.
            </summary>
            <param name="fact">The fact to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.AddMotherFacts(Gx.Conclusion.Fact[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the specified mother facts to the current relationship.
            </summary>
            <param name="facts">The facts to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateMotherFact(Gx.Conclusion.Fact,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified mother fact on the relationship.
            </summary>
            <param name="fact">The fact to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateMotherFacts(Gx.Conclusion.Fact[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified mother facts on the current relationship.
            </summary>
            <param name="facts">The facts to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateConclusions(Gx.Fs.Tree.ChildAndParentsRelationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified conclusions on the current relationship.
            </summary>
            <param name="relationship">The relationship to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.DeleteFact(Gx.Conclusion.Fact,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the specified fact from the relationship.
            </summary>
            <param name="fact">The fact to delete.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this relationship does not have a link to the resource.</exception>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.AddSourceReference(Gx.Rs.Api.SourceDescriptionState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a source reference from the <see cref="T:Gx.Rs.Api.SourceDescriptionState"/> to the current relationship.
            </summary>
            <param name="source">The source reference to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.AddSourceReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a source reference to the current relationship.
            </summary>
            <param name="reference">The reference to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.AddSourceReferences(Gx.Source.SourceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the specified source references to the current relationship.
            </summary>
            <param name="refs">The source references to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateSourceReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified source reference on the relationship.
            </summary>
            <param name="reference">The source reference to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateSourceReferences(Gx.Source.SourceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified source references on the relationship.
            </summary>
            <param name="refs">The source references to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateSourceReferences(Gx.Fs.Tree.ChildAndParentsRelationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the source references on the specified relationship.
            </summary>
            <param name="relationship">The relationship with source references to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.DeleteSourceReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the specified source reference from the current relationship.
            </summary>
            <param name="reference">The source reference to delete.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if a link to the required resource cannot be found.</exception>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.AddMediaReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a media reference to the current relationship.
            </summary>
            <param name="reference">The <see cref="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.SourceReference"/> that is a media reference to be added.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.AddMediaReferences(Gx.Source.SourceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds media references to the current relationship.
            </summary>
            <param name="refs">The array of source references that are media references to be added.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateMediaReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the media reference for the current relationship.
            </summary>
            <param name="reference">The source reference to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateMediaReferences(Gx.Source.SourceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the media references for the current relationship.
            </summary>
            <param name="refs">The source references to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateMediaReferences(Gx.Fs.Tree.ChildAndParentsRelationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the media references of the specified relationship.
            </summary>
            <param name="relationship">The relationship with media references that will be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.DeleteMediaReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the specified media reference from the current relationship.
            </summary>
            <param name="reference">The source reference to be deleted.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if a link to the required resource cannot be found.</exception>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.AddEvidenceReference(Gx.Common.EvidenceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds an evidence reference to the current relationship.
            </summary>
            <param name="reference">The evidence reference to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.AddEvidenceReferences(Gx.Common.EvidenceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the evidence references to the current relationship.
            </summary>
            <param name="refs">The evidence references to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateEvidenceReference(Gx.Common.EvidenceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Update the evidence reference for the current relationship.
            </summary>
            <param name="reference">The evidence reference to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateEvidenceReferences(Gx.Common.EvidenceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the evidence references for the current relationship.
            </summary>
            <param name="refs">The evidence references to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateEvidenceReferences(Gx.Fs.Tree.ChildAndParentsRelationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the evidence references for the specified relationship.
            </summary>
            <param name="relationship">The relationship with evidence references to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.DeleteEvidenceReference(Gx.Common.EvidenceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the evidence reference from the current relationship.
            </summary>
            <param name="reference">The evidence reference to delete.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.ReadNote(Gx.Common.Note,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the specified note.
            </summary>
            <param name="note">The note to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if a link to the required resource cannot be found.</exception>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.AddNote(Gx.Common.Note,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a note to the current relationship.
            </summary>
            <param name="note">The note to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.AddNotes(Gx.Common.Note[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Add the notes to the current relationship.
            </summary>
            <param name="notes">The notes to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateNote(Gx.Common.Note,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified note for the current relationship.
            </summary>
            <param name="note">The note to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateNotes(Gx.Common.Note[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Update the specified notes for the current relationship.
            </summary>
            <param name="notes">The notes to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateNotes(Gx.Fs.Tree.ChildAndParentsRelationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Update the notes on the specified relationship.
            </summary>
            <param name="relationship">The relationship with the notes to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.DeleteNote(Gx.Common.Note,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Delete the specified note from the current relationship.
            </summary>
            <param name="note">The note to be deleted.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if a link to the required resource cannot be found.</exception>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.ReadChangeHistory(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the change history of the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChangeHistoryState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.ReadChild(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the child from the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.ReadFather(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the father from the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateFather(Gx.Rs.Api.PersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Sets the father of the current relationship to the father specified.
            </summary>
            <param name="father">The father to use in the current relationship.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateFather(System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Sets the father of the current relationship to the father specified.
            </summary>
            <param name="fatherId">The father URI to use in the current relationship.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.DeleteFather(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the current father from the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.ReadMother(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the mother from the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateMother(Gx.Rs.Api.PersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Sets the mother of the current relationship to the mother specified.
            </summary>
            <param name="mother">The mother to use in the current relationship.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.UpdateMother(System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Sets the mother of the current relationship to the mother specified.
            </summary>
            <param name="motherId">The mother URI to use in the current relationship.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.DeleteMother(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the current mother from the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Restore(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Restores the current relationship (if it is currently deleted).
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.SelfRel">
            <summary>
            Gets the rel name for the currrent state instance. This is expected to be overridden.
            </summary>
            <value>
            The rel name for the currrent state instance
            </value>
        </member>
        <member name="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.MainDataElement">
            <summary>
            Gets the main data element represented by this state instance.
            </summary>
            <value>
            The main data element represented by this state instance.
            </value>
        </member>
        <member name="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Relationship">
            <summary>
            Gets the first relationship from <see cref="P:FamilySearchPlatform.ChildAndParentsRelationships"/> of the current <see cref="T:Gx.Fs.FamilySearchPlatform"/>.
            </summary>
            <value>
            The first relationship from <see cref="P:FamilySearchPlatform.ChildAndParentsRelationships"/> of the current <see cref="T:Gx.Fs.FamilySearchPlatform"/>.
            </value>
        </member>
        <member name="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Conclusion">
            <summary>
            Gets the first conclusion for this relationship (see remarks).
            </summary>
            <value>
            The first conclusion for this relationship.
            </value>
            <remarks>The <see cref="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.FatherFact"/> is returned first if it is not null; otherwise, <see cref="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.MotherFact"/> is returned.</remarks>
        </member>
        <member name="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.FatherFact">
            <summary>
            Gets the first <see cref="P:Relationship.FatherFacts"/> from the current <see cref="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Relationship"/>.
            </summary>
            <value>
            The first <see cref="P:Relationship.FatherFacts"/> from the current <see cref="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Relationship"/>.
            </value>
        </member>
        <member name="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.MotherFact">
            <summary>
            Gets the first <see cref="P:Relationship.MotherFacts"/> from the current <see cref="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Relationship"/>.
            </summary>
            <value>
            The first <see cref="P:Relationship.MotherFacts"/> from the current <see cref="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Relationship"/>.
            </value>
        </member>
        <member name="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Note">
            <summary>
            Gets the first <see cref="P:Relationship.Notes"/> from the current <see cref="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Relationship"/>.
            </summary>
            <value>
            The first <see cref="P:Relationship.Notes"/> from the current <see cref="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Relationship"/>.
            </value>
        </member>
        <member name="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.SourceReference">
            <summary>
            Gets the first <see cref="P:Relationship.Sources"/> from the current <see cref="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Relationship"/>.
            </summary>
            <value>
            The first <see cref="P:Relationship.Sources"/> from the current <see cref="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Relationship"/>.
            </value>
        </member>
        <member name="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.EvidenceReference">
            <summary>
            Gets the first <see cref="P:Relationship.Evidence"/> from the current <see cref="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Relationship"/>.
            </summary>
            <value>
            The first <see cref="P:Relationship.Evidence"/> from the current <see cref="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Relationship"/>.
            </value>
        </member>
        <member name="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.MediaReference">
            <summary>
            Gets the first <see cref="P:Relationship.Media"/> from the current <see cref="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Relationship"/>.
            </summary>
            <value>
            The first <see cref="P:Relationship.Media"/> from the current <see cref="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.Relationship"/>.
            </value>
        </member>
        <member name="P:FamilySearch.Api.Ft.ChildAndParentsRelationshipState.LocalSelfId">
            <summary>
            Gets the current <see cref="P:ChildAndParentsRelationship.Id"/>.
            </summary>
            <value>
            The current <see cref="P:ChildAndParentsRelationship.Id"/>
            </value>
        </member>
        <member name="T:FamilySearch.Api.Ft.FamilySearchFamilyTree">
            <summary>
            The FamilySearchFamilyTree is a collection of FamilySearch records and exposes management of those records.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Ft.FamilySearchFamilyTree.URI">
            <summary>
            The default production environment URI for this collection.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Ft.FamilySearchFamilyTree.SANDBOX_URI">
            <summary>
            The default sandbox environment URI for this collection.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.FamilySearchFamilyTree"/> class using the production environment URI.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.FamilySearchFamilyTree"/> class.
            </summary>
            <param name="sandbox">If set to <c>true</c> this will use the sandbox environment URI; otherwise, it will use production.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.FamilySearchFamilyTree"/> class.
            </summary>
            <param name="uri">The URI where the target collection resides.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.#ctor(System.Uri,FamilySearch.Api.Ft.FamilyTreeStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.FamilySearchFamilyTree"/> class.
            </summary>
            <param name="uri">The URI where the target resides.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.#ctor(System.Uri,Gx.Rs.Api.Util.IFilterableRestClient,FamilySearch.Api.Ft.FamilyTreeStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.FamilySearchFamilyTree"/> class.
            </summary>
            <param name="uri">The URI where the target resides.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.#ctor(RestSharp.IRestRequest,Gx.Rs.Api.Util.IFilterableRestClient,FamilySearch.Api.Ft.FamilyTreeStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.FamilySearchFamilyTree"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.Ft.FamilyTreeStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.FamilySearchFamilyTree"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.AuthenticateViaUnauthenticatedAccess(System.String,System.String)">
            <summary>
            Creates a state instance without authentication. It will produce an access token, but only good for requests that do not need authentication.
            </summary>
            <param name="clientId">The client identifier.</param>
            <param name="ipAddress">The ip address.</param>
            <returns>A <see cref="T:FamilySearch.Api.Ft.FamilySearchFamilyTree"/> instance containing the REST API response.</returns>
            <remarks>See https://familysearch.org/developers/docs/guides/oauth2 for more information.</remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.AddRelationship(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds relationship to the collection.
            </summary>
            <param name="relationship">The relationship to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.AddRelationships(System.Collections.Generic.List{Gx.Conclusion.Relationship},Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the array of relationships to the collection.
            </summary>
            <param name="relationships">The relationships to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipsState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.AddChildAndParentsRelationship(Gx.Rs.Api.PersonState,Gx.Rs.Api.PersonState,Gx.Rs.Api.PersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a child and parents relationship to the collection.
            </summary>
            <param name="child">The child to add in the relationship.</param>
            <param name="father">The father to add in the relationship.</param>
            <param name="mother">The mother to add in the relationship.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.AddChildAndParentsRelationship(Gx.Fs.Tree.ChildAndParentsRelationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a child and parents relationship to the collection.
            </summary>
            <param name="chap">The child and parent relationship to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if a link to the required resource cannot be found.</exception>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.AddChildAndParentsRelationships(System.Collections.Generic.List{Gx.Fs.Tree.ChildAndParentsRelationship},Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the child and parents relationships to the collection.
            </summary>
            <param name="chaps">The child and parent relationships to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipsState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if a link to the required resource cannot be found.</exception>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.ReadPersonById(System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the person by the specified ID.
            </summary>
            <param name="id">The ID of the person to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.ReadPersonWithRelationshipsById(System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the person by the specified ID and includes relationship details in the response.
            </summary>
            <param name="id">The ID of the person to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.ReadPreferredSpouseRelationship(FamilySearch.Api.UserState,FamilySearch.Api.Ft.FamilyTreePersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the preferred spouse relationship for the specified person.
            </summary>
            <param name="user">The user for which the preference will be read. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="person">The person, represented by the FamilyTreePersonState, for which the preferred spouse relationship will be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>Tree users can have varying spouse relationship preferences; therefore, this method will only read what the specified user prefers to
            see for the specified relationship.</remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.ReadPreferredParentRelationship(FamilySearch.Api.UserState,FamilySearch.Api.Ft.FamilyTreePersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the preferred parent relationship for the specified person.
            </summary>
            <param name="user">The user for which the preference will be read. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="person">The person, represented by the FamilyTreePersonState, for which the preferred parent relationship will be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>Tree users can have varying parent relationship preferences; therefore, this method will only read what the specified user prefers to
            see for the specified relationship.</remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.ReadPreferredSpouseRelationship(System.String,FamilySearch.Api.Ft.FamilyTreePersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the preferred spouse relationship for the specified person.
            </summary>
            <param name="treeUserId">The <see cref="P:User.TreeUserId"/> for which the preference will be read. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="person">The person, represented by the FamilyTreePersonState, for which the preferred spouse relationship will be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>Tree users can have varying spouse relationship preferences; therefore, this method will only read what the specified user prefers to
            see for the specified relationship.</remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.ReadPreferredParentRelationship(System.String,FamilySearch.Api.Ft.FamilyTreePersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the preferred parent relationship for the specified person.
            </summary>
            <param name="treeUserId">The <see cref="P:User.TreeUserId"/> for which the preference will be read. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="person">The person, represented by the FamilyTreePersonState, for which the preferred parent relationship will be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>Tree users can have varying parent relationship preferences; therefore, this method will only read what the specified user prefers to
            see for the specified relationship.</remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.ReadPreferredSpouseRelationship(System.String,System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the preferred spouse relationship for the specified person.
            </summary>
            <param name="treeUserId">The <see cref="P:User.TreeUserId"/> for which the preference will be read. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="personId">The person ID for which the preferred spouse relationship will be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>Tree users can have varying spouse relationship preferences; therefore, this method will only read what the specified user prefers to
            see for the specified relationship.</remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.ReadPreferredParentRelationship(System.String,System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the preferred parent relationship for the specified person.
            </summary>
            <param name="treeUserId">The <see cref="P:User.TreeUserId"/> for which the preference will be read. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="personId">The person ID for which the preferred parent relationship will be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>Tree users can have varying parent relationship preferences; therefore, this method will only read what the specified user prefers to
            see for the specified relationship.</remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.ReadPreferredRelationship(System.String,System.String,System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the preferred relationship for the specified person.
            </summary>
            <param name="rel">The rel name of the link to use to perform this operation.</param>
            <param name="treeUserId">The <see cref="P:User.TreeUserId"/> for which the preference will be read. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="personId">The person ID for which the preferred relationship will be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>
            Tree users can have varying relationship preferences; therefore, this method will only read what the specified user prefers to
            see for the specified relationship.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.UpdatePreferredSpouseRelationship(FamilySearch.Api.UserState,FamilySearch.Api.Ft.FamilyTreePersonState,Gx.Rs.Api.PreferredRelationshipState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Sets the preferred spouse relationship for the specified person.
            </summary>
            <param name="user">The user for which the preference will be set. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="person">The person, represented by the FamilyTreePersonState, for which the preferred spouse relationship will be read.</param>
            <param name="relationshipState">The relationship state instance with the relationship to set as the preferred relationship.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>
            Tree users can have varying spouse relationship preferences; therefore, this method will only set what the specified user prefers to
            see for the specified relationship.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.UpdatePreferredParentRelationship(FamilySearch.Api.UserState,FamilySearch.Api.Ft.FamilyTreePersonState,Gx.Rs.Api.PreferredRelationshipState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Sets the preferred parent relationship for the specified person.
            </summary>
            <param name="user">The user for which the preference will be set. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="person">The person, represented by the FamilyTreePersonState, for which the preferred parent relationship will be read.</param>
            <param name="relationshipState">The relationship state instance with the relationship to set as the preferred relationship.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>
            Tree users can have varying parent relationship preferences; therefore, this method will only set what the specified user prefers to
            see for the specified relationship.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.UpdatePreferredSpouseRelationship(System.String,FamilySearch.Api.Ft.FamilyTreePersonState,Gx.Rs.Api.PreferredRelationshipState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Sets the preferred spouse relationship for the specified person.
            </summary>
            <param name="treeUserId">The <see cref="P:User.TreeUserId"/> for which the preference will be set. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="person">The person, represented by the FamilyTreePersonState, for which the preferred spouse relationship will be read.</param>
            <param name="relationshipState">The relationship state instance with the relationship to set as the preferred relationship.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>
            Tree users can have varying spouse relationship preferences; therefore, this method will only set what the specified user prefers to
            see for the specified relationship.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.UpdatePreferredParentRelationship(System.String,FamilySearch.Api.Ft.FamilyTreePersonState,Gx.Rs.Api.PreferredRelationshipState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Sets the preferred parent relationship for the specified person.
            </summary>
            <param name="treeUserId">The <see cref="P:User.TreeUserId"/> for which the preference will be set. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="person">The person, represented by the FamilyTreePersonState, for which the preferred parent relationship will be read.</param>
            <param name="relationshipState">The relationship state instance with the relationship to set as the preferred relationship.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>
            Tree users can have varying parent relationship preferences; therefore, this method will only set what the specified user prefers to
            see for the specified relationship.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.UpdatePreferredSpouseRelationship(System.String,System.String,Gx.Rs.Api.PreferredRelationshipState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Sets the preferred spouse relationship for the specified person.
            </summary>
            <param name="treeUserId">The <see cref="P:User.TreeUserId"/> for which the preference will be set. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="personId">The person ID for which the preferred spouse relationship will be read.</param>
            <param name="relationshipState">The relationship state instance with the relationship to set as the preferred relationship.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>
            Tree users can have varying spouse relationship preferences; therefore, this method will only set what the specified user prefers to
            see for the specified relationship.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.UpdatePreferredParentRelationship(System.String,System.String,Gx.Rs.Api.PreferredRelationshipState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Sets the preferred parent relationship for the specified person.
            </summary>
            <param name="treeUserId">The <see cref="P:User.TreeUserId"/> for which the preference will be set. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="personId">The person ID for which the preferred parent relationship will be read.</param>
            <param name="relationshipState">The relationship state instance with the relationship to set as the preferred relationship.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>
            Tree users can have varying parent relationship preferences; therefore, this method will only set what the specified user prefers to
            see for the specified relationship.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.UpdatePreferredRelationship(System.String,System.String,System.String,Gx.Rs.Api.PreferredRelationshipState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Sets the preferred relationship for the specified person.
            </summary>
            <param name="rel">The rel name of the link to use to perform this operation.</param>
            <param name="treeUserId">The <see cref="P:User.TreeUserId"/> for which the preference will be set. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="personId">The person ID for which the preferred relationship will be read.</param>
            <param name="relationshipState">The relationship state instance with the relationship to set as the preferred relationship.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>
            Tree users can have varying relationship preferences; therefore, this method will only set what the specified user prefers to
            see for the specified relationship.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.DeletePreferredSpouseRelationship(FamilySearch.Api.UserState,FamilySearch.Api.Ft.FamilyTreePersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the preferred spouse relationship for the specified person.
            </summary>
            <param name="user">The user for which the preference will be set. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="person">The person, represented by the FamilyTreePersonState, for which the preferred spouse relationship will be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>
            Tree users can have varying spouse relationship preferences; therefore, this method will only delete what the specified user prefers to
            see for the specified relationship.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.DeletePreferredParentRelationship(FamilySearch.Api.UserState,FamilySearch.Api.Ft.FamilyTreePersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the preferred parent relationship for the specified person.
            </summary>
            <param name="user">The user for which the preference will be set. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="person">The person, represented by the FamilyTreePersonState, for which the preferred parent relationship will be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>
            Tree users can have varying parent relationship preferences; therefore, this method will only delete what the specified user prefers to
            see for the specified relationship.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.DeletePreferredSpouseRelationship(System.String,FamilySearch.Api.Ft.FamilyTreePersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the preferred spouse relationship for the specified person.
            </summary>
            <param name="treeUserId">The <see cref="P:User.TreeUserId"/> for which the preference will be set. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="person">The person, represented by the FamilyTreePersonState, for which the preferred spouse relationship will be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>
            Tree users can have varying spouse relationship preferences; therefore, this method will only delete what the specified user prefers to
            see for the specified relationship.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.DeletePreferredParentRelationship(System.String,FamilySearch.Api.Ft.FamilyTreePersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the preferred parent relationship for the specified person.
            </summary>
            <param name="treeUserId">The <see cref="P:User.TreeUserId"/> for which the preference will be set. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="person">The person, represented by the FamilyTreePersonState, for which the preferred parent relationship will be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>
            Tree users can have varying parent relationship preferences; therefore, this method will only delete what the specified user prefers to
            see for the specified relationship.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.DeletePreferredSpouseRelationship(System.String,System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the preferred spouse relationship for the specified person.
            </summary>
            <param name="treeUserId">The <see cref="P:User.TreeUserId"/> for which the preference will be set. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="personId">The person ID for which the preferred spouse relationship will be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>
            Tree users can have varying spouse relationship preferences; therefore, this method will only delete what the specified user prefers to
            see for the specified relationship.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.DeletePreferredParentRelationship(System.String,System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the preferred parent relationship for the specified person.
            </summary>
            <param name="treeUserId">The <see cref="P:User.TreeUserId"/> for which the preference will be set. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="personId">The person ID for which the preferred parent relationship will be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>
            Tree users can have varying parent relationship preferences; therefore, this method will only delete what the specified user prefers to
            see for the specified relationship.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilySearchFamilyTree.DeletePreferredRelationship(System.String,System.String,System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the preferred relationship for the specified person.
            </summary>
            <param name="treeUserId">The <see cref="P:User.TreeUserId"/> for which the preference will be set. This is typically the current tree user. An API error may result if the user specified
            is someone other than the current tree user (due to a lack of permissions).</param>
            <param name="personId">The person ID for which the preferred relationship will be read.</param>
            <param name="rel">The rel name of the link to use to perform this operation.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PreferredRelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>
            Tree users can have varying relationship preferences; therefore, this method will only delete what the specified user prefers to
            see for the specified relationship.
            </remarks>
        </member>
        <member name="T:FamilySearch.Api.Ft.FamilyTreePersonChildrenState">
            <summary>
            The FamilyTreePersonChildrenState exposes management functions for person children.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonChildrenState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.Ft.FamilyTreeStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonChildrenState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonChildrenState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonChildrenState.LoadEntityConditionally(RestSharp.IRestResponse)">
            <summary>
            Loads the entity from the REST API response if the response should have data.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>Conditional returns the entity from the REST API response if the response should have data.</returns>
            <remarks>The REST API response should have data if the invoking request was a GET and the response status is OK or GONE.</remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonChildrenState.LoadEntity(RestSharp.IRestResponse)">
            <summary>
            Returns the <see cref="T:Gx.Gedcomx"/> from the REST API response.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>The <see cref="T:Gx.Gedcomx"/> from the REST API response.</returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonChildrenState.FindChildAndParentsRelationshipTo(Gx.Conclusion.Person)">
            <summary>
            Finds the child and parents relationship to the specified child. See remarks for more information.
            </summary>
            <param name="child">The child for which the relationship is sought.</param>
            <returns>
            The <see cref="T:Gx.Fs.Tree.ChildAndParentsRelationship"/> the child is in, or <c>null</c> if a relationship was not found.
            </returns>
            <remarks>
            This method iterates over the current <see cref="P:ChildAndParentsRelationship"/>, and each item is examined
            to determine if the child ID in the relationship matches the child ID for the specified child. If one is found,
            that relationship object containing that child ID is returned, and no other relationships are examined further.
            </remarks>
        </member>
        <member name="P:FamilySearch.Api.Ft.FamilyTreePersonChildrenState.ChildAndParentsRelationships">
            <summary>
            Gets the child and parents relationships represented by this state instance.
            </summary>
            <value>
            The child and parents relationships represented by this state instance.
            </value>
        </member>
        <member name="T:FamilySearch.Api.Ft.FamilyTreePersonParentsState">
            <summary>
            The FamilyTreePersonParentsState exposes management functions for family tree person parents.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonParentsState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.Ft.FamilyTreeStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonParentsState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonParentsState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonParentsState.LoadEntityConditionally(RestSharp.IRestResponse)">
            <summary>
            Loads the entity from the REST API response if the response should have data.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>Conditional returns the entity from the REST API response if the response should have data.</returns>
            <remarks>The REST API response should have data if the invoking request was a GET and the response status is OK or GONE.</remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonParentsState.LoadEntity(RestSharp.IRestResponse)">
            <summary>
            Returns the <see cref="T:Gx.Gedcomx"/> from the REST API response.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>The <see cref="T:Gx.Gedcomx"/> from the REST API response.</returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonParentsState.FindChildAndParentsRelationshipTo(Gx.Conclusion.Person)">
            <summary>
            Finds the child and parents relationship to the specified spouse. See remarks for more information.
            </summary>
            <param name="spouse">The spouse for which the relationship is sought.</param>
            <returns>
            The <see cref="T:Gx.Fs.Tree.ChildAndParentsRelationship"/> the spouse is in, or <c>null</c> if a relationship was not found.
            </returns>
            <remarks>
            This method iterates over the current <see cref="P:ChildAndParentsRelationship"/>, and each item is examined
            to determine if the spouse ID in the relationship matches the spouse ID for the specified child. If one is found,
            that relationship object containing that spouse ID is returned, and no other relationships are examined further.
            </remarks>
        </member>
        <member name="P:FamilySearch.Api.Ft.FamilyTreePersonParentsState.ChildAndParentsRelationships">
            <summary>
            Gets the child and parents relationships from the current <see cref="P:FamilySearchPlatform.ChildAndParentsRelationships"/> from <see cref="P:Entity"/>.
            </summary>
            <value>
            The child and parents relationships from the current <see cref="P:FamilySearchPlatform.ChildAndParentsRelationships"/> from <see cref="P:Entity"/>.
            </value>
        </member>
        <member name="T:FamilySearch.Api.Ft.FamilyTreePersonState">
            <summary>
            The FamilyTreePersonState exposes management and other FamilySearch specific functions for a person.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> class.
            </summary>
            <param name="uri">The URI of the person.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.#ctor(System.Uri,FamilySearch.Api.Ft.FamilyTreeStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> class.
            </summary>
            <param name="uri">The URI where the target resides.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.#ctor(System.Uri,Gx.Rs.Api.Util.IFilterableRestClient,FamilySearch.Api.Ft.FamilyTreeStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> class.
            </summary>
            <param name="uri">The URI where the target resides.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.#ctor(RestSharp.IRestRequest,Gx.Rs.Api.Util.IFilterableRestClient,FamilySearch.Api.Ft.FamilyTreeStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.Ft.FamilyTreeStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clone.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance, of type <see cref="T:Gx.Gedcomx"/>, containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.LoadEntityConditionally(RestSharp.IRestResponse)">
            <summary>
            Loads the entity from the REST API response if the response should have data.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>Conditional returns the entity from the REST API response if the response should have data.</returns>
            <remarks>The REST API response should have data if the invoking request was a GET and the response status is OK, GONE, or PRECONDITIONFAILED.</remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.LoadEntity(RestSharp.IRestResponse)">
            <summary>
            Returns the <see cref="T:Gx.Gedcomx"/> from the REST API response.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>The <see cref="T:Gx.Gedcomx"/> from the REST API response.</returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.CreateRequestForEmbeddedResource(System.String)">
            <summary>
            Creates a REST API request (with appropriate authentication headers).
            </summary>
            <param name="rel">If the value is equal to the discussion references link, the resulting request is built with accept and content-type headers of "application/x-fs-v1+json"; otherwise, "application/x-gedcomx-v1+json" is used.</param>
            <returns>
            A REST API requeset (with appropriate authentication headers).
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.LoadDiscussionReferences(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads all discussion references for the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.ReadPortraits(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the portraits of the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.ReadPortrait(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the portrait of the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns></returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.AddDiscussionReference(FamilySearch.Api.DiscussionState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a discussion reference to the current person.
            </summary>
            <param name="discussion">The discussion state with a discussion reference to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.AddDiscussionReference(Gx.Fs.Tree.DiscussionReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a discussion reference to the current person.
            </summary>
            <param name="reference">The discussion reference to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.AddDiscussionReference(Gx.Fs.Tree.DiscussionReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the specified discussion references to the current person.
            </summary>
            <param name="refs">The discussion references to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.UpdateDiscussionReference(Gx.Fs.Tree.DiscussionReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified discussion reference for the current person.
            </summary>
            <param name="reference">The discussion reference to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.UpdateDiscussionReference(Gx.Fs.Tree.DiscussionReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Update the discussion references for the current person.
            </summary>
            <param name="refs">The discussion references to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.UpdateDiscussionReference(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the discussion reference on the specified person.
            </summary>
            <param name="person">The person with a discussion reference to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.DeleteDiscussionReference(Gx.Fs.Tree.DiscussionReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the specified discussion reference from the current person.
            </summary>
            <param name="reference">The discussion reference to delete.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Discussion reference cannot be deleted: missing link.</exception>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.ReadChildAndParentsRelationship(Gx.Fs.Tree.ChildAndParentsRelationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the child and parents relationship of the current person.
            </summary>
            <param name="relationship">The relationship to be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.ReadChangeHistory(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the change history of the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChangeHistoryState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.ReadMatches(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads all matches of the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonMatchResultsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.Restore(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Restore the current person (if it is currently deleted).
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.ReadMergeOptions(FamilySearch.Api.Ft.FamilyTreePersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the merge options for merging the candidate with the current person.
            </summary>
            <param name="candidate">The candidate to be evaluated for merge options.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonMergeState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.ReadMergeAnalysis(FamilySearch.Api.Ft.FamilyTreePersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the merge analysis of the specified person, after already having been merged with the current person.
            </summary>
            <param name="candidate">The candidate that was merged with the current person.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonMergeState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.TransitionToPersonMerge(RestSharp.Method,FamilySearch.Api.Ft.FamilyTreePersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Prepares a merge state for the specified person and the current person.
            </summary>
            <param name="method">The HTTP method to use for the operation.</param>
            <param name="candidate">The person which will be merged with the current person.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonMergeState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:System.ArgumentException">
            The current <see cref="P:FamilyTreePersonState.Person"/> or <see cref="P:Person.Id"/> was null.
            or
            The specified candidate.Person or candidate.Person.Id was null.
            </exception>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.AddNonMatch(FamilySearch.Api.Ft.FamilyTreePersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Declares a possible duplicate of the current person as not a duplicate.
            </summary>
            <param name="person">The <see cref="T:FamilySearch.Api.Ft.FamilyTreePersonState"/> with a person that was possibly a duplicate of the current person.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonNonMatchesState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.AddNonMatch(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Declares a possible duplicate of the current person as not a duplicate.
            </summary>
            <param name="person">The person that was possibly a duplicate of the current person.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonNonMatchesState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreePersonState.ReadNonMatches(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads all declared non matches of the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonNonMatchesState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="P:FamilySearch.Api.Ft.FamilyTreePersonState.Persons">
            <summary>
            Gets the persons from the current entity. This is shorthand for getting <see cref="P:Gx.Gedcomx.Persons"/>.
            </summary>
            <value>
            The persons from the current entity.
            </value>
        </member>
        <member name="P:FamilySearch.Api.Ft.FamilyTreePersonState.ChildAndParentsRelationships">
            <summary>
            Gets the child and parents relationships.
            </summary>
            <value>
            The child and parents relationships.
            </value>
        </member>
        <member name="P:FamilySearch.Api.Ft.FamilyTreePersonState.ChildAndParentsRelationshipsToChildren">
            <summary>
            Gets the child and parents relationships to the children.
            </summary>
            <value>
            The child and parents relationships to the children.
            </value>
        </member>
        <member name="P:FamilySearch.Api.Ft.FamilyTreePersonState.ChildAndParentsRelationshipsToParents">
            <summary>
            Gets the child and parents relationships to the parents.
            </summary>
            <value>
            The child and parents relationships to the parents.
            </value>
        </member>
        <member name="T:FamilySearch.Api.Ft.FamilyTreeRelationshipsState">
            <summary>
            The FamilyTreeRelationshipsState exposes management functions for family tree relationships.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeRelationshipsState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.Ft.FamilyTreeStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.FamilyTreeRelationshipsState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeRelationshipsState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeRelationshipsState.LoadEntity(RestSharp.IRestResponse)">
            <summary>
            Returns the <see cref="T:Gx.Gedcomx"/> from the REST API response.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>The <see cref="T:Gx.Gedcomx"/> from the REST API response.</returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeRelationshipsState.AddRelationship(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the specified relationship to this collection of relationships.
            </summary>
            <param name="relationship">The relationship to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">
            Thrown if the relationship type is a <see cref="F:Gx.Types.RelationshipType.ParentChild"/> relationship, since this collection does not support adding those types
            of relationships. See remarks for more information.
            </exception>
            <remarks>
            To add a <see cref="F:Gx.Types.RelationshipType.ParentChild"/> relationship, use <see cref="O:AddChildAndParentsRelationship"/> instead.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeRelationshipsState.AddChildAndParentsRelationship(Gx.Rs.Api.PersonState,Gx.Rs.Api.PersonState,Gx.Rs.Api.PersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a child and parents relationship to the current relationships collection.
            </summary>
            <param name="child">The child in the relationship.</param>
            <param name="father">The father in the relationship.</param>
            <param name="mother">The mother in the relationship.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeRelationshipsState.AddChildAndParentsRelationship(Gx.Fs.Tree.ChildAndParentsRelationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a child and parents relationship to the current relationships collection.
            </summary>
            <param name="chap">The relationship to add to the current relationships collection, with the father, mother, and child set as desired.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="P:FamilySearch.Api.Ft.FamilyTreeRelationshipsState.ChildAndParentsRelationships">
            <summary>
            Gets the child and parents relationships of the current <see cref="P:FamilySearchPlatform.ChildAndParentsRelationships"/> from <see cref="P:Entity"/>.
            </summary>
            <value>
            The child and parents relationships of the current <see cref="P:FamilySearchPlatform.ChildAndParentsRelationships"/> from <see cref="P:Entity"/>.
            </value>
        </member>
        <member name="T:FamilySearch.Api.Ft.FamilyTreeRelationshipState">
            <summary>
            The FamilyTreeRelationshipState exposes management and other FamilySearch specific functions for a relationship.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeRelationshipState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.Ft.FamilyTreeStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Ft.FamilyTreeRelationshipState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeRelationshipState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeRelationshipState.LoadEntityConditionally(RestSharp.IRestResponse)">
            <summary>
            Loads the entity from the REST API response if the response should have data.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>Conditional returns the entity from the REST API response if the response should have data.</returns>
            <remarks>The REST API response should have data if the invoking request was a GET and the response status is OK, GONE, or PRECONDITIONFAILED.</remarks>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeRelationshipState.LoadEntity(RestSharp.IRestResponse)">
            <summary>
            Returns the <see cref="T:Gx.Gedcomx"/> from the REST API response.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>The <see cref="T:Gx.Gedcomx"/> from the REST API response.</returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeRelationshipState.CreateRequestForEmbeddedResource(System.String)">
            <summary>
            Creates a REST API request (with appropriate authentication headers).
            </summary>
            <param name="rel">If the value is equal to the discussion references link, the resulting request is built with accept and content-type headers of "application/x-fs-v1+json"; otherwise, "application/x-gedcomx-v1+json" is used.</param>
            <returns>
            A REST API requeset (with appropriate authentication headers).
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeRelationshipState.LoadDiscussionReferences(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads all discussion references for the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.FamilyTreeRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeRelationshipState.ReadChangeHistory(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the change history of the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChangeHistoryState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeRelationshipState.Restore(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Restore the current relationship (if it is currently deleted).
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.FamilyTreeRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="T:FamilySearch.Api.Ft.FamilyTreeStateFactory">
            <summary>
            The state factory is responsible for instantiating state classes from REST API responses.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeStateFactory.NewFamilyTreeState">
            <summary>
            Instantiates a new FamilySearchFamilyTree using the production environment URI.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeStateFactory.NewFamilyTreeState(System.Boolean)">
            <summary>
            Instantiates a new FamilySearchFamilyTree using the environment specified.
            </summary>
            <param name="production">If set to <c>true</c>, the resulting FamilySearchFamilyTree will use the production environment URI; otherwise, it will use the sandbox environment URI.</param>
            <returns></returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeStateFactory.NewFamilyTreeState(System.Uri)">
            <summary>
            Instantiates a new FamilySearchFamilyTree using the environment URI specified.
            </summary>
            <param name="discoveryUri">The URI where the target resides.</param>
            <returns></returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeStateFactory.NewChildAndParentsRelationshipState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new child and parents relationship state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChildAndParentsRelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeStateFactory.NewRelationshipsState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new relationships state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeStateFactory.NewRelationshipsStateInt(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new relationships state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeStateFactory.NewCollectionState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new collection state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeStateFactory.NewPersonState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new person state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeStateFactory.NewRelationshipState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new relationship state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeStateFactory.NewRelationshipStateInt(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new relationship state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeStateFactory.NewPersonParentsState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new person parents state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonParentsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeStateFactory.NewPersonChildrenState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new person children state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonChildrenState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeStateFactory.NewChangeHistoryState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new change history state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.Ft.ChangeHistoryState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Ft.FamilyTreeStateFactory.NewSourceDescriptionsStateInt(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new source descriptions state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="T:FamilySearch.Api.Memories.FamilySearchMemories">
            <summary>
            The FamilySearchMemories is a collection of FamilySearch memories and exposes management of those memories.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Memories.FamilySearchMemories.URI">
            <summary>
            The default production environment URI for this collection.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Memories.FamilySearchMemories.SANDBOX_URI">
            <summary>
            The default sandbox environment URI for this collection.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Memories.FamilySearchMemories.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Memories.FamilySearchMemories"/> class using the production environment URI.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Memories.FamilySearchMemories.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Memories.FamilySearchMemories"/> class.
            </summary>
            <param name="sandbox">If set to <c>true</c> this will use the sandbox environment URI; otherwise, it will use production.</param>
        </member>
        <member name="M:FamilySearch.Api.Memories.FamilySearchMemories.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Memories.FamilySearchMemories"/> class.
            </summary>
            <param name="uri">The URI where the target collection resides.</param>
        </member>
        <member name="M:FamilySearch.Api.Memories.FamilySearchMemories.#ctor(System.Uri,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Memories.FamilySearchMemories"/> class.
            </summary>
            <param name="uri">The URI where the target resides.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Memories.FamilySearchMemories.#ctor(System.Uri,Gx.Rs.Api.Util.IFilterableRestClient,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Memories.FamilySearchMemories"/> class.
            </summary>
            <param name="uri">The URI where the target resides.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Memories.FamilySearchMemories.#ctor(RestSharp.IRestRequest,Gx.Rs.Api.Util.IFilterableRestClient,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Memories.FamilySearchMemories"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Memories.FamilySearchMemories.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Memories.FamilySearchMemories"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.Memories.FamilySearchMemories.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.Memories.FamilySearchMemories.AuthenticateViaUnauthenticatedAccess(System.String,System.String)">
            <summary>
            Creates a state instance without authentication. It will produce an access token, but only good for requests that do not need authentication.
            </summary>
            <param name="clientId">The client identifier.</param>
            <param name="ipAddress">The ip address.</param>
            <returns>A <see cref="T:FamilySearch.Api.Memories.FamilySearchMemories"/> instance containing the REST API response.</returns>
            <remarks>See https://familysearch.org/developers/docs/guides/oauth2 for more information.</remarks>
        </member>
        <member name="T:FamilySearch.Api.PersonMatchResultsState">
            <summary>
            The PersonMatchResultsState exposes management functions for a person match results.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.PersonMatchResultsState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.PersonMatchResultsState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.PersonMatchResultsState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.PersonMatchResultsState.ReadPerson(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the current person for these potential match results.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.PersonMatchResultsState.ReadMergeOptions(Gx.Atom.Entry,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads merge options for the specified search result from <see cref="P:Results.Entries"/>.
            </summary>
            <param name="entry">A search result entry from <see cref="P:Results.Entries"/>.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonMergeState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.PersonMatchResultsState.ReadMergeAnalysis(Gx.Atom.Entry,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Creates a merge analysis for the current person and the potential duplicate person specified by the search result entry from <see cref="P:Results.Entries"/>.
            </summary>
            <param name="entry">The search result entry to perform the merge analysis upon.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonMergeState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.PersonMatchResultsState.AddNonMatch(Gx.Atom.Entry,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Declares the specified search result entry (from <see cref="P:Results.Entries"/>) as not a match for the current person.
            </summary>
            <param name="entry">The search result entry from <see cref="P:Results.Entries"/>.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonNonMatchesState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.PersonMatchResultsState.UpdateMatchStatus(Gx.Atom.Entry,Gx.Fs.Tree.MatchStatus,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Declares the match status for the current person the specified search result entry from <see cref="P:Results.Entries"/>.
            </summary>
            <param name="entry">The search result entry (from <see cref="P:Results.Entries"/>) to have the match status updated.</param>
            <param name="status">The new status to apply to the specified search result entry from <see cref="P:Results.Entries"/>.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonMatchResultsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="T:FamilySearch.Api.PersonMergeState">
            <summary>
            The PersonMergeState exposes management functions for a person merge.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.PersonMergeState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.PersonMergeState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.PersonMergeState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.PersonMergeState.LoadEntity(RestSharp.IRestResponse)">
            <summary>
            Returns the <see cref="T:Gx.Fs.FamilySearchPlatform"/> from the REST API response.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>The <see cref="T:Gx.Fs.FamilySearchPlatform"/> from the REST API response.</returns>
        </member>
        <member name="M:FamilySearch.Api.PersonMergeState.ReadMergeMirror(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the merge mirror for the current merge.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonMergeState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.PersonMergeState.ReadSurvivor(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the survivor of the current merge.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.PersonMergeState.DoMerge(Gx.Fs.Tree.Merge,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Performs the specified merge operation.
            </summary>
            <param name="merge">The merge operation to perform.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonMergeState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.PersonMergeState.DoMerge(Gx.Fs.FamilySearchPlatform,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Performs the specified merges from <see cref="P:FamilySearchPlatform.Merges"/>.
            </summary>
            <param name="entity">The entity with the merge operations to perform.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonMergeState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="P:FamilySearch.Api.PersonMergeState.Analysis">
            <summary>
            Gets the analysis of the current person merge.
            </summary>
            <value>
            The analysis of the current person merge.
            </value>
        </member>
        <member name="P:FamilySearch.Api.PersonMergeState.IsAllowed">
            <summary>
            Gets a value indicating whether the merge is allowed.
            </summary>
            <value>
            <c>true</c> if the merge is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:FamilySearch.Api.PersonNonMatchesState">
            <summary>
            The PersonNonMatchesState exposes management functions for person non matches.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.PersonNonMatchesState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.PersonNonMatchesState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.PersonNonMatchesState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.PersonNonMatchesState.AddNonMatch(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a person as a non match to this collection.
            </summary>
            <param name="person">The person that is not a match (from potential duplicate search results).</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonNonMatchesState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.PersonNonMatchesState.RemoveNonMatch(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Removes the declared non match person from this collection.
            </summary>
            <param name="nonMatch">The person that was previously declared as a non-match.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:FamilySearch.Api.PersonNonMatchesState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="T:FamilySearch.Api.Rel">
            <summary>
            A collection of rel links to assist in looking up resource links. See remarks for additional information.
            </summary>
            <remarks>
            When a resource is consumed, it typcially returns a set of hypermedia links that enable additional actions on the resource. While
            resources typically provide links, not all links will be available on a given resource (such as paging links on a person resource).
            The links exposed in this class are a set of predefined constants, which can be used to determine if a link is available on a
            given resource.
            </remarks>
        </member>
        <member name="F:FamilySearch.Api.Rel.CHANGE_HISTORY">
            <summary>
            A link that points to the change history resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.COMMENT">
            <summary>
            A link that points to the comment resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.COMMENTS">
            <summary>
            A link that points to the comments resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.CURRENT_USER">
            <summary>
            A link that points to the current user resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.DISCUSSIONS">
            <summary>
            A link that points to the discussions resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.MERGE">
            <summary>
            A link that points to the merge resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.MERGE_MIRROR">
            <summary>
            A link that points to the merge mirror resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.NORMALIZED_DATE">
            <summary>
            A link that points to the normalized date resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.NOT_A_MATCHES">
            <summary>
            A link that points to the not a matches resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.NOT_A_MATCH">
            <summary>
            A link that points to the not a match resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.PERSON_MATCHES_QUERY">
            <summary>
            A link that points to the person matches query resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.PORTRAIT">
            <summary>
            A link that points to the portrait resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.PORTRAITS">
            <summary>
            A link that points to the portraits resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.RESTORE">
            <summary>
            A link that points to the retore resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.FATHER_ROLE">
            <summary>
            A link that points to the father role resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.MOTHER_ROLE">
            <summary>
            A link that points to the mother role resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.PERSON_WITH_RELATIONSHIPS">
            <summary>
            A link that points to the person with relationships resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.PREFERRED_SPOUSE_RELATIONSHIP">
            <summary>
            A link that points to the preferred spouse relationship resource.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Rel.PREFERRED_PARENT_RELATIONSHIP">
            <summary>
            A link that points to the preferred parent relationship resource.
            </summary>
        </member>
        <member name="T:FamilySearch.Api.UserHistoryState">
            <summary>
            The UserHistoryState exposes management functions for user history.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.UserHistoryState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.UserHistoryState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.UserHistoryState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.UserHistoryState.LoadEntity(RestSharp.IRestResponse)">
            <summary>
            Returns the <see cref="T:Gx.Gedcomx"/> from the REST API response.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>The <see cref="T:Gx.Gedcomx"/> from the REST API response.</returns>
        </member>
        <member name="P:FamilySearch.Api.UserHistoryState.UserHistory">
            <summary>
            Gets the user history represented by this state instance.
            </summary>
            <value>
            The user history represented by this state instance.
            </value>
        </member>
        <member name="T:FamilySearch.Api.UserState">
            <summary>
            The UserState exposes management functions for a user.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.UserState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,FamilySearch.Api.FamilySearchStateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.UserState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:FamilySearch.Api.UserState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:FamilySearch.Api.UserState.LoadEntity(RestSharp.IRestResponse)">
            <summary>
            Returns the <see cref="T:Gx.Fs.FamilySearchPlatform"/> from the REST API response.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>The <see cref="T:Gx.Fs.FamilySearchPlatform"/> from the REST API response.</returns>
        </member>
        <member name="P:FamilySearch.Api.UserState.MainDataElement">
            <summary>
            Gets the main data element represented by this state instance.
            </summary>
            <value>
            The main data element represented by this state instance.
            </value>
        </member>
        <member name="P:FamilySearch.Api.UserState.User">
            <summary>
            Gets the user represented by the current state instance.
            </summary>
            <value>
            The user represented by the current state instance.
            </value>
        </member>
        <member name="T:FamilySearch.Api.Util.ChangeEntry">
            <summary>
            Represents a historical record of some operation performed (such as deleting a person).
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Util.ChangeEntry.#ctor(Gx.Atom.Entry)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Util.ChangeEntry"/> class.
            </summary>
            <param name="entry">The associated atom entry with this change.</param>
        </member>
        <member name="P:FamilySearch.Api.Util.ChangeEntry.ChangeInfo">
            <summary>
            Gets the change information associated with this change.
            </summary>
            <value>
            The change information associated with this change.
            </value>
        </member>
        <member name="P:FamilySearch.Api.Util.ChangeEntry.Entry">
            <summary>
            Gets the atom entry associated with this change.
            </summary>
            <value>
            The atom entry associated with this change.
            </value>
        </member>
        <member name="P:FamilySearch.Api.Util.ChangeEntry.Operation">
            <summary>
            Gets the change operation associated with this change (if available).
            </summary>
            <value>
            The change operation associated with this change (if available).
            </value>
        </member>
        <member name="P:FamilySearch.Api.Util.ChangeEntry.ObjectType">
            <summary>
            Gets the change object type associated with this change (if available).
            </summary>
            <value>
            The change object type associated with this change (if available).
            </value>
        </member>
        <member name="P:FamilySearch.Api.Util.ChangeEntry.ObjectModifier">
            <summary>
            Gets the change object modifier associated with this change (if available).
            </summary>
            <value>
            The change object modifier associated with this change (if available).
            </value>
        </member>
        <member name="P:FamilySearch.Api.Util.ChangeEntry.Reason">
            <summary>
            Gets the reason this change was performed (if available).
            </summary>
            <value>
            The reason this change was performed (if available).
            </value>
        </member>
        <member name="P:FamilySearch.Api.Util.ChangeEntry.OriginalValue">
            <summary>
            Gets the original value from before the change.
            </summary>
            <value>
            The original value from before the change.
            </value>
        </member>
        <member name="P:FamilySearch.Api.Util.ChangeEntry.ResultingValue">
            <summary>
            Gets the resulting value from after the change.
            </summary>
            <value>
            The resulting value from after the change.
            </value>
        </member>
        <member name="P:FamilySearch.Api.Util.ChangeEntry.RemovedValue">
            <summary>
            Gets the value that was removed by the change.
            </summary>
            <value>
            The value that was removed by the change.
            </value>
        </member>
        <member name="T:FamilySearch.Api.Util.ChangeHistoryPage">
            <summary>
            Represents a page of change histories.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Util.ChangeHistoryPage.#ctor(Gx.Atom.Feed)">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Util.ChangeHistoryPage"/> class.
            </summary>
            <param name="feed">The feed with change histories from which this page will be initialized.</param>
        </member>
        <member name="M:FamilySearch.Api.Util.ChangeHistoryPage.FindChange(Gx.Fs.Tree.ChangeOperation,Gx.Fs.Tree.ChangeObjectType)">
            <summary>
            Searches the current page of change entries for the type of object and operation changed.
            </summary>
            <param name="operation">The change operation being sought.</param>
            <param name="objectType">The change object type being sought.</param>
            <returns>The first <see cref="T:FamilySearch.Api.Util.ChangeEntry"/> matching the search conditions.</returns>
        </member>
        <member name="M:FamilySearch.Api.Util.ChangeHistoryPage.FindChange(Gx.Fs.Tree.ChangeOperation,Gx.Fs.Tree.ChangeObjectType,System.Nullable{Gx.Fs.Tree.ChangeObjectModifier})">
            <summary>
            Searches the current page of change entries for the type of object and operation changed and the modifier involved.
            </summary>
            <param name="operation">The change operation being sought.</param>
            <param name="objectType">The change object type being sought.</param>
            <param name="modifier">The change object modifier involved being sought.</param>
            <returns>
            The first <see cref="T:FamilySearch.Api.Util.ChangeEntry"/> matching the search conditions.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Util.ChangeHistoryPage.FindChanges(Gx.Fs.Tree.ChangeOperation,Gx.Fs.Tree.ChangeObjectType)">
            <summary>
            Searches the current page of change entries for the type of object and operation changed.
            </summary>
            <param name="operation">The change operation being sought.</param>
            <param name="objectType">The change object type being sought.</param>
            <returns>
            The list of <see cref="T:FamilySearch.Api.Util.ChangeEntry"/>s matching the search conditions.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Util.ChangeHistoryPage.FindChanges(Gx.Fs.Tree.ChangeOperation,Gx.Fs.Tree.ChangeObjectType,System.Nullable{Gx.Fs.Tree.ChangeObjectModifier})">
            <summary>
            Searches the current page of change entries for the type of object and operation changed and the modifier involved.
            </summary>
            <param name="operation">The change operation being sought.</param>
            <param name="objectType">The change object type being sought.</param>
            <param name="modifier">The change object modifier involved being sought.</param>
            <returns>
            The list of <see cref="T:FamilySearch.Api.Util.ChangeEntry"/>s matching the search conditions.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Util.ChangeHistoryPage.FindChanges(System.Collections.Generic.IEnumerable{Gx.Fs.Tree.ChangeOperation},System.Collections.Generic.IEnumerable{Gx.Fs.Tree.ChangeObjectType})">
            <summary>
            Searches the current page of change entries for the type of object and operation changed.
            </summary>
            <param name="operations">The collection of change operations being sought.</param>
            <param name="types">The collection of change object types being sought.</param>
            <returns>
            The list of <see cref="T:FamilySearch.Api.Util.ChangeEntry"/>s matching the search conditions.
            </returns>
        </member>
        <member name="M:FamilySearch.Api.Util.ChangeHistoryPage.FindChanges(System.Collections.Generic.IEnumerable{Gx.Fs.Tree.ChangeOperation},System.Collections.Generic.IEnumerable{Gx.Fs.Tree.ChangeObjectType},System.Collections.Generic.IEnumerable{Gx.Fs.Tree.ChangeObjectModifier})">
            <summary>
            Searches the current page of change entries for the type of object and operation changed.
            </summary>
            <param name="operations">The collection of change operations being sought.</param>
            <param name="types">The collection of change object types being sought.</param>
            <param name="modifiers">The collection of change object modifiers involved being sought.</param>
            <returns>
            The list of <see cref="T:FamilySearch.Api.Util.ChangeEntry"/>s matching the search conditions.
            </returns>
        </member>
        <member name="P:FamilySearch.Api.Util.ChangeHistoryPage.Feed">
            <summary>
            Gets the feed associated with this page.
            </summary>
            <value>
            The feed associated with this page.
            </value>
        </member>
        <member name="P:FamilySearch.Api.Util.ChangeHistoryPage.Entries">
            <summary>
            Gets the list of change entries associated with this page.
            </summary>
            <value>
            The list of change entries associated with this page.
            </value>
        </member>
        <member name="T:FamilySearch.Api.Util.ExperimentsFilter">
            <summary>
            This filter enables SDK consumers to enable specific FamilySearch features that are not yet enabled by default.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Util.ExperimentsFilter.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:FamilySearch.Api.Util.ExperimentsFilter"/> class.
            </summary>
            <param name="experiments">The array of features to enable. The list of features can always be determined by calling the /platform/pending-modifications path on the specific environment in use.</param>
        </member>
        <member name="M:FamilySearch.Api.Util.ExperimentsFilter.Handle(RestSharp.IRestClient,RestSharp.IRestRequest)">
            <summary>
            This method applies the list of features to the specified REST API request.
            </summary>
            <param name="client">This parameter is currently unused.</param>
            <param name="request">The REST API request that will have the features applied.</param>
            <remarks>
            The specific features will be added as a special header to the REST API request.
            </remarks>
        </member>
        <member name="T:FamilySearch.Api.Util.FamilySearchOptions">
            <summary>
            Represents FamilySearch specific query string parameter to use in REST API requests.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.FamilySearchOptions.CANDIDATE_ID">
            <summary>
            The candidate ID query parameter.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.FamilySearchOptions.COLLECTION">
            <summary>
            The collection query parameter.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.FamilySearchOptions.CONFIDENCE">
            <summary>
            The confidence query parameter.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.FamilySearchOptions.DEFAULT">
            <summary>
            The default URI query parameter.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.FamilySearchOptions.DESCRIPTION">
            <summary>
            The description query parameter.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.FamilySearchOptions.FILENAME">
            <summary>
            The file name query parameter.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.FamilySearchOptions.FILTER">
            <summary>
            The filter query parameter.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.FamilySearchOptions.INCLUDE_MARRIAGE_DETAILS">
            <summary>
            The include marriage details query parameter.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.FamilySearchOptions.INCLUDE_PERSON_DETAILS">
            <summary>
            The include person details query parameter.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.FamilySearchOptions.INCLUDE_PERSONS">
            <summary>
            The include persons query parameter.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.FamilySearchOptions.SPOUSE_ID">
            <summary>
            The spouse ID query parameter.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.FamilySearchOptions.STATUS">
            <summary>
            The status query parameter.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.FamilySearchOptions.TITLE">
            <summary>
            The title query parameter.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.FamilySearchOptions.TYPE">
            <summary>
            The type query parameter.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Util.FamilySearchOptions.CandidateId(System.String[])">
            <summary>
            Creates a candidate ID query string parameter.
            </summary>
            <param name="id">The array of IDs to use in the candidate ID query string parameter. See remarks.</param>
            <returns>A candidate ID query string parameter.</returns>
            <remarks>
            This could be used, for example, to specify a match candidate for use with certain merge operations.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Util.FamilySearchOptions.Collection(System.String)">
            <summary>
            Creates a collection query string parameter.
            </summary>
            <param name="value">The value to use in the collection query string parameter. See remarks.</param>
            <returns>A collection query string parameter.</returns>
            <remarks>
            This could be used, for example, to specify what collection to read person records from.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Util.FamilySearchOptions.Collection(Gx.Fs.Ct.MatchCollection)">
            <summary>
            Creates a collection query string parameter.
            </summary>
            <param name="value">The value to use in the collection query string parameter. See remarks.</param>
            <returns>A collection query string parameter.</returns>
            <remarks>
            This could be used, for example, to specify what collection to read person records from.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Util.FamilySearchOptions.Confidence(Gx.Types.ConfidenceLevel)">
            <summary>
            Creates a confidence query string parameter.
            </summary>
            <param name="confidence">The value to use in the confidence query string parameter. See remarks.</param>
            <returns>A confidence query string parameter.</returns>
            <remarks>
            This could be used, for example, to specify the level of confidence required during certain merge operations.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Util.FamilySearchOptions.DefaultUri(System.String)">
            <summary>
            Creates a default URI query string parameter.
            </summary>
            <param name="defaultUri">The value to use in the default URI query string parameter. See remarks.</param>
            <returns>A default URI query string parameter.</returns>
            <remarks>
            This could be used, for example, to create a default image URI to use for person records when a person does not have an image.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Util.FamilySearchOptions.Description(System.String)">
            <summary>
            Creates a description query string parameter.
            </summary>
            <param name="description">The value to use in the description query string parameter. See remarks.</param>
            <returns>A description query string parameter.</returns>
            <remarks>
            This could be used, for example, to specify the description of an artifact.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Util.FamilySearchOptions.Filename(System.String)">
            <summary>
            Creates a file name query string parameter.
            </summary>
            <param name="filename">The value to use in the file name query string parameter. See remarks.</param>
            <returns>A file name query string parameter.</returns>
            <remarks>
            This could be used, for example, to specify the file name of an artifact.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Util.FamilySearchOptions.Title(System.String)">
            <summary>
            Creates a title query string parameter.
            </summary>
            <param name="title">The value to use in the title query string parameter. See remarks.</param>
            <returns>A title query string parameter.</returns>
            <remarks>
            This could be used, for example, to specify the title of an artifact.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Util.FamilySearchOptions.ArtifactType(Gx.Fs.Artifacts.ArtifactType)">
            <summary>
            Creates a artifact type query string parameter.
            </summary>
            <param name="type">The value to use in the artifact type query string parameter. See remarks.</param>
            <returns>A artifact type query string parameter.</returns>
            <remarks>
            This could be used, for example, to specify the type of an artifact.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Util.FamilySearchOptions.MergeAnalysisFilter(FamilySearch.Api.Util.MergeAnalysisFilter)">
            <summary>
            Creates a merge analysis filter query string parameter.
            </summary>
            <param name="filter">The value to use in the merge analysis filter query string parameter. See remarks.</param>
            <returns>A merge analysis filter query string parameter.</returns>
            <remarks>
            This could be used, for example, to filter the type of merge analysis data you would want to see in merge analysis results.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Util.FamilySearchOptions.IncludePersons">
            <summary>
            Creates a include persons query string parameter.
            </summary>
            <returns>A include persons query string parameter.</returns>
            <remarks>
            This could be used, for example, to include spouse person records when reading a person.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Util.FamilySearchOptions.SpouseId(System.String)">
            <summary>
            Creates a spouse ID query string parameter.
            </summary>
            <param name="spouseId">The value to use in the spouse ID query string parameter. See remarks.</param>
            <returns>A spouse ID query string parameter.</returns>
            <remarks>
            This could be used, for example, to specify a spouse filter when searching for a person.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Util.FamilySearchOptions.IncludePersonDetails">
            <summary>
            Creates an include person details query string parameter.
            </summary>
            <returns>An include person details query string parameter.</returns>
            <remarks>
            This could be used, for example, to preload person data when reading a person, rather than the default behavior to only load essential person data.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Util.FamilySearchOptions.IncludeMarriageDetails">
            <summary>
            Creates an include marriage details query string parameter.
            </summary>
            <returns>An include marriage details query string parameter.</returns>
            <remarks>
            This could be used, for example, to preload marriage data when reading a person, rather than the default behaior to only load essential person data.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Util.FamilySearchOptions.MatchStatus(Gx.Fs.Tree.MatchStatus)">
            <summary>
            Creates a match status query string parameter.
            </summary>
            <param name="status">The value to use in the match status query string parameter. See remarks.</param>
            <returns>A match status query string parameter.</returns>
            <remarks>
            This could be used, for example, to filter the types of matches for a given person.
            </remarks>
        </member>
        <member name="M:FamilySearch.Api.Util.FamilySearchOptions.Reason(System.String)">
            <summary>
            Creates a reason request header parameter.
            </summary>
            <param name="reason">The value to use in the reason request header parameter. See remarks.</param>
            <returns>A reason request header parameter.</returns>
            <remarks>
            This could be used, for example, to specify a reason for a particular action, such as the reason for modifying a person record.
            </remarks>
        </member>
        <member name="T:FamilySearch.Api.Util.MergeAnalysisFilter">
            <summary>
            Represents the type of merge analysis to filter by.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.MergeAnalysisFilter.CoupleRelationships">
            <summary>
            Only the couple relationships merge analysis should be returned.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.MergeAnalysisFilter.NonVitalConclusions">
            <summary>
            Only the non vital conclusions merge analysis should be returned.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.MergeAnalysisFilter.ParentChildRelationshipsAsChild">
            <summary>
            Only the parent child relationships as child merge analysis should be returned.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.MergeAnalysisFilter.ParentChildRelationshipsAsParent">
            <summary>
            Only the parent child relationships as parent merge analysis should be returned.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.MergeAnalysisFilter.SourceReferences">
            <summary>
            Only the source references merge analysis should be returned.
            </summary>
        </member>
        <member name="F:FamilySearch.Api.Util.MergeAnalysisFilter.VitalConclusions">
            <summary>
            Only the vital conclusions merge analysis should be returned.
            </summary>
        </member>
        <member name="T:FamilySearch.Api.Util.RequestUtil">
            <summary>
            An extension utlity class to set accept and content-type headers.
            </summary>
        </member>
        <member name="M:FamilySearch.Api.Util.RequestUtil.ApplyFamilySearchConneg(RestSharp.IRestRequest)">
            <summary>
            Returns the specified REST API request with an accept and content-type header of "application/x-fs-v1+json".
            </summary>
            <param name="request">The REST API request to be modified.</param>
            <returns>The specified REST API request with an accept and content-type header of "application/x-fs-v1+json".</returns>
        </member>
        <member name="M:FamilySearch.Api.Util.RequestUtil.ApplyFamilySearchJson(RestSharp.IRestRequest)">
            <summary>
            Returns the specified REST API request with an accept and content-type header of "application/json".
            </summary>
            <param name="request">The REST API request to be modified.</param>
            <returns>The specified REST API request with an accept and content-type header of "application/json".</returns>
        </member>
    </members>
</doc>
