<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gedcomx.File</name>
    </assembly>
    <members>
        <member name="T:Gedcomx.File.DefaultJsonSerialization">
            <summary>
            The default JSON serialization class.
            </summary>
        </member>
        <member name="T:Gedcomx.File.GedcomxEntrySerializer">
            <summary>
            An interface exposing the ability serialize an arbitrary object.
            </summary>
        </member>
        <member name="M:Gedcomx.File.GedcomxEntrySerializer.Serialize(System.Object,System.IO.Stream)">
            <summary>
            Serializes the specified object to the specified stream.
            </summary>
            <param name="resource">The object to be serialized.</param>
            <param name="stream">The stream that will contain the serialization result.</param>
        </member>
        <member name="M:Gedcomx.File.GedcomxEntrySerializer.Serialize(System.Object)">
            <summary>
            Serializes the specified object and returns the string result.
            </summary>
            <param name="resource">The object to be serialized.</param>
            <returns>A string representation of the serialized object.</returns>
        </member>
        <member name="M:Gedcomx.File.GedcomxEntrySerializer.IsKnownContentType(System.String)">
            <summary>
            Determines whether the content type is known to the serializer. This is currently not used in any meaningful way.
            </summary>
            <param name="contentType">The content type to check.</param>
            <returns>
            <c>true</c> if the content type is known to the serializer; otherwise, false.
            </returns>
        </member>
        <member name="T:Gedcomx.File.GedcomxEntryDeserializer">
            <summary>
            An interface exposing the ability deserialize an arbitrary stream or string.
            </summary>
        </member>
        <member name="M:Gedcomx.File.GedcomxEntryDeserializer.Deserialize``1(System.IO.Stream)">
            <summary>
            Deserializes the specified stream.
            </summary>
            <typeparam name="T">The type of object the specified stream represents.</typeparam>
            <param name="stream">The stream to be deserialized.</param>
            <returns>An instance of T upon successful deserialization.</returns>
        </member>
        <member name="M:Gedcomx.File.GedcomxEntryDeserializer.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified string.
            </summary>
            <typeparam name="T">The type of object the specified string represents.</typeparam>
            <param name="value">The string to be deserialized.</param>
            <returns>An instance of T upon successful deserialization.</returns>
        </member>
        <member name="M:Gedcomx.File.DefaultJsonSerialization.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.File.DefaultJsonSerialization"/> class. This overload defaults to using pretty output.
            </summary>
        </member>
        <member name="M:Gedcomx.File.DefaultJsonSerialization.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.File.DefaultJsonSerialization"/> class.
            </summary>
            <param name="pretty">If set to <c>true</c> the serialized output will be formatted with whitespace.</param>
        </member>
        <member name="M:Gedcomx.File.DefaultJsonSerialization.Serialize(System.Object)">
            <summary>
            Serializes the specified object to JSON.
            </summary>
            <param name="resource">The object to serialize.</param>
            <returns>A JSON string representing the serialized object specified.</returns>
        </member>
        <member name="M:Gedcomx.File.DefaultJsonSerialization.Serialize(System.Object,System.IO.Stream)">
            <summary>
            Serializes the specified object to JSON.
            </summary>
            <param name="resource">The object to serialize.</param>
            <param name="stream">The stream that will contain the JSON output after serialization.</param>
        </member>
        <member name="M:Gedcomx.File.DefaultJsonSerialization.IsKnownContentType(System.String)">
            <summary>
            Determines whether the content type is known to the serializer. This is currently not used in any meaningful way.
            </summary>
            <param name="contentType">The content type to check.</param>
            <returns>
              <c>true</c> if the content type is known to the serializer; otherwise, false.
            </returns>
        </member>
        <member name="M:Gedcomx.File.DefaultJsonSerialization.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified string.
            </summary>
            <typeparam name="T">The type of object the specified string represents.</typeparam>
            <param name="value"></param>
            <returns>
            An instance of T upon successful deserialization.
            </returns>
        </member>
        <member name="M:Gedcomx.File.DefaultJsonSerialization.Deserialize``1(System.IO.Stream)">
            <summary>
            Deserializes the specified stream.
            </summary>
            <typeparam name="T">The type of object the specified stream represents.</typeparam>
            <param name="stream">The stream to be deserialized.</param>
            <returns>
            An instance of T upon successful deserialization.
            </returns>
        </member>
        <member name="P:Gedcomx.File.DefaultJsonSerialization.KnownContentTypes">
            <summary>
            Gets or sets the content types known to the serializer.
            </summary>
            <value>
            The content types known to the serializer.
            </value>
        </member>
        <member name="P:Gedcomx.File.DefaultJsonSerialization.Encoding">
            <summary>
            Gets or sets the encoding to use for all serialization reading and writing. Changing this will take effect on subsequent reads or writes by this serializer.
            </summary>
            <value>
            The encoding to use for all serialization reading and writing. Changing this will take effect on subsequent reads or writes by this serializer.
            </value>
        </member>
        <member name="T:Gedcomx.File.GedcomxFileEntry">
            <summary>
            Represents a single file withing a GEDCOM X file.
            </summary>
        </member>
        <member name="M:Gedcomx.File.GedcomxFileEntry.#ctor(System.IO.Compression.ZipArchiveEntry,System.Collections.Generic.List{Gedcomx.File.ManifestAttribute})">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.File.GedcomxFileEntry"/> class.
            </summary>
            <param name="entry">The zip archive this file belongs to.</param>
            <param name="attributes">The attributes belonging to this file (such as content type, etc).</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the entry parameter is <c>null</c>.</exception>
        </member>
        <member name="M:Gedcomx.File.GedcomxFileEntry.GetAttribute(System.String)">
            <summary>
            Gets the value of the attribute with the specified name.
            </summary>
            <param name="name">The name of the attribute for which the value will be retrieved.</param>
            <returns>If an attribute with the specified name is found the value of said attribute will be returned; otherwise, <c>null</c> will be returned.</returns>
        </member>
        <member name="P:Gedcomx.File.GedcomxFileEntry.ZipEntry">
            <summary>
            Gets the zip file this file belongs to.
            </summary>
            <value>
            The zip file this file belongs to.
            </value>
        </member>
        <member name="P:Gedcomx.File.GedcomxFileEntry.ContentType">
            <summary>
            Gets the content type of this file.
            </summary>
            <value>
            The content type of this file.
            </value>
        </member>
        <member name="P:Gedcomx.File.GedcomxFileEntry.Attributes">
            <summary>
            Gets the attributes belonging to this file (such as content type, etc).
            </summary>
            <value>
            The attributes belonging to this file (such as content type, etc).
            </value>
        </member>
        <member name="T:Gedcomx.File.GedcomxOutputStream">
            <summary>
            Represents a GEDCOM X file stream. Since the underlying data is a zip file, this class simply wraps some of the zip file access.
            </summary>
        </member>
        <member name="M:Gedcomx.File.GedcomxOutputStream.#ctor(System.IO.Stream,Gedcomx.File.GedcomxEntrySerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.File.GedcomxOutputStream"/> class.
            </summary>
            <param name="gedxOutputStream">The underlying data stream this GEDCOM X will be written to.</param>
            <param name="serializer">The serializer to use when adding objects to this GEDCOM X file.</param>
        </member>
        <member name="M:Gedcomx.File.GedcomxOutputStream.#ctor(System.IO.Stream,System.Type[])">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.File.GedcomxOutputStream"/> class.
            </summary>
            <param name="gedxOutputStream">The underlying data stream this GEDCOM X will be written to.</param>
            <param name="types">The types the serializer is to know about for serialization.</param>
        </member>
        <member name="M:Gedcomx.File.GedcomxOutputStream.AddAttribute(System.String,System.String)">
            <summary>
            Adds the specified attribute name and value to this GEDCOM X file (such as the content type, etc).
            </summary>
            <param name="name">The name of the attribute to add.</param>
            <param name="value">The value of the attribute to add.</param>
        </member>
        <member name="M:Gedcomx.File.GedcomxOutputStream.AddResource(Gx.Gedcomx)">
            <summary>
            Adds the specified GEDCOM X entity to the current GEDCOM X file.
            </summary>
            <param name="resource">The entity to add.</param>
        </member>
        <member name="M:Gedcomx.File.GedcomxOutputStream.AddResource(Gx.Gedcomx,System.Nullable{System.DateTime})">
            <summary>
            Adds the specified GEDCOM X entity to the current GEDCOM X file.
            </summary>
            <param name="resource">The entity to add.</param>
            <param name="lastModified">The last modified to specify for the entity being added.</param>
        </member>
        <member name="M:Gedcomx.File.GedcomxOutputStream.AddResource(System.String,Gx.Gedcomx,System.Nullable{System.DateTime})">
            <summary>
            Adds the specified GEDCOM X entity to the current GEDCOM X file.
            </summary>
            <param name="entryName">The name by which this entity shall be known within the GEDCOM X file.</param>
            <param name="resource">The entity to add.</param>
            <param name="lastModified">The last modified to specify for the entity being added.</param>
        </member>
        <member name="M:Gedcomx.File.GedcomxOutputStream.AddResource(System.String,System.String,System.Object,System.Nullable{System.DateTime})">
            <summary>
            Adds the specified GEDCOM X entity to the current GEDCOM X file.
            </summary>
            <param name="contentType">The content type of the entity.</param>
            <param name="entryName">The name by which this entity shall be known within the GEDCOM X file.</param>
            <param name="resource">The entity to add.</param>
            <param name="lastModified">The last modified to specify for the entity being added.</param>
        </member>
        <member name="M:Gedcomx.File.GedcomxOutputStream.AddResource(System.String,System.String,System.Object,System.Nullable{System.DateTime},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Adds the specified GEDCOM X entity to the current GEDCOM X file.
            </summary>
            <param name="contentType">The content type of the entity.</param>
            <param name="entryName">The name by which this entity shall be known within the GEDCOM X file.</param>
            <param name="resource">The entity to add.</param>
            <param name="lastModified">The last modified to specify for the entity being added.</param>
            <param name="attributes">The attributes of the specified entity (such as content type, etc).</param>
            <exception cref="T:System.ArgumentException">Thrown if the specified content type is null or empty.</exception>
        </member>
        <member name="M:Gedcomx.File.GedcomxOutputStream.Close">
            <summary>
            Adds the manifest entry and marks this instance as closed.
            </summary>
        </member>
        <member name="M:Gedcomx.File.GedcomxOutputStream.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Gedcomx.File.ManifestAttribute">
            <summary>
            Represents a single attribute that can be used in a manifest file.
            </summary>
        </member>
        <member name="M:Gedcomx.File.ManifestAttribute.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this attribute.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this attribute.
            </returns>
        </member>
        <member name="P:Gedcomx.File.ManifestAttribute.Name">
            <summary>
            Gets the name of the current attribute.
            </summary>
            <value>
            The name of the current attribute.
            </value>
        </member>
        <member name="P:Gedcomx.File.ManifestAttribute.Value">
            <summary>
            Gets the value of the current attribute.
            </summary>
            <value>
            The value of the current attribute.
            </value>
        </member>
        <member name="T:Gedcomx.File.DefaultXmlSerialization">
            <summary>
            The default XML serialization class.
            </summary>
        </member>
        <member name="M:Gedcomx.File.DefaultXmlSerialization.#ctor(System.Type[])">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.File.DefaultXmlSerialization"/> class. This overload defaults to using pretty output.
            </summary>
            <param name="types">The types the serializer is to know about for serialization.</param>
        </member>
        <member name="M:Gedcomx.File.DefaultXmlSerialization.#ctor(System.Boolean,System.Type[])">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.File.DefaultXmlSerialization"/> class.
            </summary>
            <param name="pretty">If set to <c>true</c> the serialized output will be formatted with whitespace.</param>
            <param name="types">The types the serializer is to know about for serialization.</param>
        </member>
        <member name="M:Gedcomx.File.DefaultXmlSerialization.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified string.
            </summary>
            <typeparam name="T">The type of object the specified string represents.</typeparam>
            <param name="value"></param>
            <returns>
            An instance of T upon successful deserialization.
            </returns>
        </member>
        <member name="M:Gedcomx.File.DefaultXmlSerialization.Deserialize``1(System.IO.Stream)">
            <summary>
            Deserializes the specified stream.
            </summary>
            <typeparam name="T">The type of object the specified stream represents.</typeparam>
            <param name="stream">The stream to be deserialized.</param>
            <returns>
            An instance of T upon successful deserialization.
            </returns>
        </member>
        <member name="M:Gedcomx.File.DefaultXmlSerialization.Serialize(System.Object)">
            <summary>
            Serializes the specified object and returns the string result.
            </summary>
            <param name="resource">The object to be serialized.</param>
            <returns>
            A string representation of the serialized object.
            </returns>
        </member>
        <member name="M:Gedcomx.File.DefaultXmlSerialization.Serialize(System.Object,System.IO.Stream)">
            <summary>
            Serializes the specified object to the specified stream.
            </summary>
            <param name="resource">The object to be serialized.</param>
            <param name="stream">The stream that will contain the serialization result.</param>
        </member>
        <member name="M:Gedcomx.File.DefaultXmlSerialization.IsKnownContentType(System.String)">
            <summary>
            Determines whether the content type is known to the serializer. This is currently not used in any meaningful way.
            </summary>
            <param name="contentType">The content type to check.</param>
            <returns>
              <c>true</c> if the content type is known to the serializer; otherwise, false.
            </returns>
        </member>
        <member name="P:Gedcomx.File.DefaultXmlSerialization.KnownContentTypes">
            <summary>
            Gets or sets the known content types.
            </summary>
            <value>
            The known content types.
            </value>
        </member>
        <member name="P:Gedcomx.File.DefaultXmlSerialization.Encoding">
            <summary>
            Gets or sets the encoding to use for all serialization reading and writing. Changing this will take effect on subsequent reads or writes by this serializer.
            </summary>
            <value>
            The encoding to use for all serialization reading and writing. Changing this will take effect on subsequent reads or writes by this serializer.
            </value>
        </member>
        <member name="T:Gedcomx.File.GedcomxFile">
            <summary>
            Provides methods for working with GEDCOM X files.
            </summary>
        </member>
        <member name="M:Gedcomx.File.GedcomxFile.#ctor(System.IO.FileInfo,Gedcomx.File.GedcomxEntryDeserializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.File.GedcomxFile"/> class.
            </summary>
            <param name="gedxFile">The GEDCOM X file.</param>
            <param name="deserializer">The deserializer to use for deserializing data streams from the file.</param>
        </member>
        <member name="M:Gedcomx.File.GedcomxFile.#ctor(System.IO.FileInfo,System.Type[])">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.File.GedcomxFile"/> class. Creates a new <c>GedcomxFile</c> to read from the specified <c>zipFile</c>.
            </summary>
            <param name="zipFile">The zip file to be read.</param>
            <param name="types">The types the serializer is to know about for serialization.</param>
        </member>
        <member name="M:Gedcomx.File.GedcomxFile.GetAttribute(System.String)">
            <summary>
            Get the value of the specified attribute for this GEDCOM X file.
            </summary>
            <param name="name">The attribute name.</param>
            <returns>The value of the requested attribute if it is found; otherwise, <c>null</c>.</returns>
        </member>
        <member name="M:Gedcomx.File.GedcomxFile.GetResourceStream(Gedcomx.File.GedcomxFileEntry)">
            <summary>
            Gets the stream for the specified zip file entry. The stream access will depend on the mode of the zip file.
            </summary>
            <param name="gedxEntry">The entry that contains the desired resource.</param>
            <returns>The stream for the specified zip file entry. The stream access will depend on the mode of the zip file.</returns>
        </member>
        <member name="M:Gedcomx.File.GedcomxFile.ReadResource``1(Gedcomx.File.GedcomxFileEntry)">
            <summary>
            Deserializes the specified file entry to the requested object type.
            </summary>
            <typeparam name="T">The type the object will be deserialized to.</typeparam>
            <param name="gedxEntry">The file entry to deserialize.</param>
            <returns>An instance of T representing the object deserialized.</returns>
        </member>
        <member name="M:Gedcomx.File.GedcomxFile.Close">
            <summary>
            Closes the GEDCOM X file by specifically calling <see cref="M:Dispose()"/>.
            </summary>
        </member>
        <member name="M:Gedcomx.File.GedcomxFile.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Gedcomx.File.GedcomxFile.Attributes">
            <summary>
            Gets the attributes that have been associated with this GEDCOM X file.
            </summary>
            <value>
            The attributes that have been associated with this GEDCOM X file.
            </value>
        </member>
        <member name="P:Gedcomx.File.GedcomxFile.Entries">
            <summary>
            Gets the entries found in this GEDCOM X file.
            </summary>
            <value>
            The entries found in this GEDCOM X file.
            </value>
        </member>
        <member name="T:Gedcomx.File.ManifestAttributes">
            <summary>
            Represents a collection of manifest attributes.
            </summary>
        </member>
        <member name="F:Gedcomx.File.ManifestAttributes.MANIFEST_FOLDER">
            <summary>
            The folder where the manifest file must go.
            </summary>
        </member>
        <member name="F:Gedcomx.File.ManifestAttributes.MANIFEST_FILE">
            <summary>
            The name of the manifest file.
            </summary>
        </member>
        <member name="F:Gedcomx.File.ManifestAttributes.MANIFEST_FULLNAME">
            <summary>
            The full path to the manifest file (this path is fully qualified in terms of a zip file path).
            </summary>
        </member>
        <member name="M:Gedcomx.File.ManifestAttributes.#ctor(System.IO.Compression.ZipArchive)">
            <summary>
            Initializes a new instance of the <see cref="T:Gedcomx.File.ManifestAttributes"/> class.
            </summary>
            <param name="zipArchive">The zip file this manifest belongs to.</param>
        </member>
        <member name="M:Gedcomx.File.ManifestAttributes.Parse(System.IO.Compression.ZipArchive)">
            <summary>
            Searches the specified zip file for the manifest file and returns the attribute declarations it contains.
            </summary>
            <param name="zip">The zip file to be evaluated.</param>
            <returns>A <see cref="T:Gedcomx.File.ManifestAttributes"/> with the discovered manifest file attribute declarations.</returns>
        </member>
        <member name="M:Gedcomx.File.ManifestAttributes.Put(System.String,System.Collections.Generic.List{Gedcomx.File.ManifestAttribute})">
            <summary>
            Associates the specified attributes to the specified file entry.
            </summary>
            <param name="entryName">The name of the file entry to which the specified attributes will be associated.</param>
            <param name="attributes">The attributes to associate with the specified file entry.</param>
            <remarks>
            If the file entry does not exist, a new entry record will be made. If the file entry exists, but does not have attributes,
            the specified attributes will become the only associated attributes. If the file entry exists, and other attributes also
            exist, these attributes will be appended at the end of the attribute list for the said file entry.
            </remarks>
        </member>
        <member name="M:Gedcomx.File.ManifestAttributes.GetEntryAttributes(System.String)">
            <summary>
            Gets the list of attributes for the specified file entry.
            </summary>
            <param name="entryName">The name of the file entry for which the list of attributes will be retrieved.</param>
            <returns>The list of attributes for the specified file entry.</returns>
        </member>
        <member name="M:Gedcomx.File.ManifestAttributes.Write(System.IO.Stream)">
            <summary>
            Writes the current attributes collection to the specified stream.
            </summary>
            <param name="stream">The stream to which the attributes will be written.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the stream parameter is <c>null</c>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the specified stream <see cref="P:Stream.CanWrite"/> is false.</exception>
        </member>
        <member name="P:Gedcomx.File.ManifestAttributes.MainAttributes">
            <summary>
            Gets the attributes associated with the zip file.
            </summary>
            <value>
            The attributes associated with the zip file.
            </value>
        </member>
        <member name="T:Gedcomx.File.ManifestAttributesExtensions">
            <summary>
            An extensions helper class for use with <see cref="T:Gedcomx.File.ManifestAttributes"/>.
            </summary>
        </member>
        <member name="M:Gedcomx.File.ManifestAttributesExtensions.Put(System.Collections.Generic.List{Gedcomx.File.ManifestAttribute},System.String,System.String)">
            <summary>
            Sets the value of the attribute with the specified name from the specified collection of attributes. If the specified collection
            of attributes does not have a matching attribute by name, a new one will be added.
            </summary>
            <param name="this">The list of attributes to search for an attribute with the specified name.</param>
            <param name="name">The name of the attribute being sought.</param>
            <param name="value">The value to use for the specified attribute.</param>
            <remarks>
            If the list of attributes does not contain an attribute with a matching name as specified by the name parameter, this method will add a new
            <see cref="T:Gedcomx.File.ManifestAttribute"/> to the list and use the specified name and value for that attribute. If the collection does have an attribute
            with a matching name as specified by the name parameter, this method will update the existing attribute value. It is important to note, however,
            that this method will only use the first found attribute; therefore, if there are multiple attributes with identical names, only the first
            attribute will be updated and the others will be ignored.
            </remarks>
        </member>
    </members>
</doc>
