<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gedcomx.API.SDK</name>
    </assembly>
    <members>
        <member name="T:Gx.Rs.Api.AgentState">
            <summary>
            The AgentState exposes management functions for an agent.
            </summary>
        </member>
        <member name="T:Gx.Rs.Api.GedcomxApplicationState`1">
            <summary>
            This is the base class for all state instances with generic specific functionality.
            </summary>
            <typeparam name="T">The type of the expected response. The raw response data will be parsed (from JSON or XML) and casted to this type.</typeparam>
        </member>
        <member name="T:Gx.Rs.Api.GedcomxApplicationState">
            <summary>
            This is the base class for all state instances.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.GedcomxApplicationState.DEFAULT_EMBEDDED_LINK_LOADER">
            <summary>
            The default link loader for reading links from <see cref="T:Gx.Gedcomx"/> instances. Also see <seealso cref="F:Gx.Rs.Api.Util.EmbeddedLinkLoader.DEFAULT_EMBEDDED_LINK_RELS"/> for types of links that will be loaded.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.GedcomxApplicationState.linkFactory">
            <summary>
            The link factory for managing RFC 5988 compliant hypermedia links.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.GedcomxApplicationState.linkHeaderParser">
            <summary>
            The parser for extracting RFC 5988 compliant hypermedia links from a web response header.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState.Embed``1(Gx.Links.Link,Gx.Gedcomx,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Executes the specified link and embeds the response in the specified Gedcomx entity.
            </summary>
            <typeparam name="T">The type of the expected response. The raw response data will be parsed (from JSON or XML) and casted to this type.</typeparam>
            <param name="link">The link to execute.</param>
            <param name="entity">The entity which will embed the reponse data.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown when the server responds with HTTP status code &gt;= 500 and &lt; 600.</exception>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState.CreateRequestForEmbeddedResource(System.String)">
            <summary>
            Creates a REST API request (with appropriate authentication headers).
            </summary>
            <param name="rel">This parameter is currently unused.</param>
            <returns>A REST API requeset (with appropriate authentication headers).</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState.Invoke(RestSharp.IRestRequest,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Applies the specified options before calling IFilterableRestClient.Handle() which applies any filters before executing the request.
            </summary>
            <param name="request">The REST API request.</param>
            <param name="options">The options to applying before the request is handled.</param>
            <returns>The REST API response after being handled.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState.CreateAuthenticatedGedcomxRequest">
            <summary>
            Creates a REST API request with authentication.
            </summary>
            <returns>The REST API request with authentication.</returns>
            <remarks>This also sets the accept and content type headers.</remarks>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState.CreateAuthenticatedRequest">
            <summary>
            Creates a REST API request with authentication.
            </summary>
            <returns>The REST API request with authentication.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState.CreateRequest">
            <summary>
            Creates a basic REST API request.
            </summary>
            <returns>A basic REST API request</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState.IncludeEmbeddedResources``1(Gx.Gedcomx,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Extracts embedded links from the specified entity, calls each one, and embeds the response into the specified entity.
            </summary>
            <typeparam name="T">The type of the expected response. The raw response data will be parsed (from JSON or XML) and casted to this type.</typeparam>
            <param name="entity">The entity with links and which shall have the data loaded into.</param>
            <param name="options">The options to apply before handling the REST API requests.</param>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState.Embed``1(System.Collections.Generic.IEnumerable{Gx.Links.Link},Gx.Gedcomx,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Executes the specified links and embeds the response into the specified entity.
            </summary>
            <typeparam name="T">The type of the expected response. The raw response data will be parsed (from JSON or XML) and casted to this type.</typeparam>
            <param name="links">The links to call.</param>
            <param name="entity">The entity which shall have the data loaded into.</param>
            <param name="options">The options to apply before handling the REST API requests.</param>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationState.Client">
            <summary>
            Gets or sets the main REST API client to use with all API calls.
            </summary>
            <value>
            The REST API client to use with all API calls.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationState.CurrentAccessToken">
            <summary>
            Gets or sets the current access token (the OAuth2 token), see https://familysearch.org/developers/docs/api/authentication/Access_Token_resource".
            </summary>
            <value>
            The current access token (the OAuth2 token), see https://familysearch.org/developers/docs/api/authentication/Access_Token_resource".
            </value>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationState.IsAuthenticated">
            <summary>
            Gets a value indicating whether this instance is authenticated.
            </summary>
            <value>
            <c>true</c> if this instance is authenticated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationState.Request">
            <summary>
            Gets or sets the REST API request.
            </summary>
            <value>
            The REST API request.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationState.Response">
            <summary>
            Gets or sets the REST API response.
            </summary>
            <value>
            The REST API response.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationState.LastEmbeddedRequest">
            <summary>
            Gets or sets the last embedded request (from a previous call to GedcomxApplicationState{T}.Embed{T}()).
            </summary>
            <value>
            The last embedded request (from a previous call to GedcomxApplicationState{T}.Embed{T}()).
            </value>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationState.LastEmbeddedResponse">
            <summary>
            Gets or sets the last embedded response (from a previous call to GedcomxApplicationState{T}.Embed{T}()).
            </summary>
            <value>
            The last embedded response (from a previous call to GedcomxApplicationState{T}.Embed{T}()).
            </value>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationState.ETag">
            <summary>
            Gets the entity tag of the entity represented by this instance.
            </summary>
            <value>
            The entity tag of the entity represented by this instance.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationState.LastModified">
            <summary>
            Gets the last modified date of the entity represented by this instance.
            </summary>
            <value>
            The last modified date of the entity represented by this instance.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationState.EmbeddedLinkLoader">
            <summary>
            Gets the link loader for reading links from <see cref="T:Gx.Gedcomx"/> instances. Also see <seealso cref="F:Gx.Rs.Api.Util.EmbeddedLinkLoader.DEFAULT_EMBEDDED_LINK_RELS"/> for types of links that will be loaded.
            </summary>
            <value>
            This always returns the default embedded link loader.
            </value>
        </member>
        <member name="F:Gx.Rs.Api.GedcomxApplicationState`1.stateFactory">
            <summary>
            The factory responsible for creating new state instances from REST API response data.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.LoadEntity(RestSharp.IRestResponse)">
            <summary>
            Returns the entity from the REST API response.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>The entity from the REST API response.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> class.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> class.
            </summary>
            <param name="request">The REST API request.</param>
            <param name="response">The REST API response.</param>
            <param name="client">The REST API client.</param>
            <param name="accessToken">The access token.</param>
            <param name="stateFactory">The state factory.</param>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.LoadEntityConditionally(RestSharp.IRestResponse)">
            <summary>
            Loads the entity from the REST API response if the response should have data.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>Conditional returns the entity from the REST API response if the response should have data.</returns>
            <remarks>The REST API response should have data if the invoking request was not a HEAD or OPTIONS request and the response status is OK.</remarks>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.Inject(RestSharp.IRestRequest)">
            <summary>
            Invokes the specified REST API request and returns a state instance of the REST API response.
            </summary>
            <param name="request">The REST API request to execute.</param>
            <returns>The state instance of the REST API response.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.LoadLinks(RestSharp.IRestResponse,`0,RestSharp.DataFormat)">
            <summary>
            Loads all links from a REST API response and entity object, whether from the header, response body, or any other properties available to extract useful links for this state instance.
            </summary>
            <param name="response">The REST API response.</param>
            <param name="entity">The entity to also consider for finding links.</param>
            <param name="contentFormat">The content format (JSON or XML) of the REST API response data.</param>
            <returns>A list of all links discovered from the REST API response and entity object.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.GetUri">
            <summary>
            Gets the URI of the REST API request associated to this state instance.
            </summary>
            <returns>The URI of the REST API request associated to this state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.HasError">
            <summary>
            Determines whether this instance has error (server [code >= 500 and &lt; 600] or client [code >= 400 and &lt; 500]).
            </summary>
            <returns>True if a server or client error exists; otherwise, false.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.HasStatus(System.Net.HttpStatusCode)">
            <summary>
            Determines whether the current REST API response has the specified status.
            </summary>
            <param name="status">The status to evaluate.</param>
            <returns>True if the current REST API response has the specified status; otherwise, false.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.IfSuccessful">
            <summary>
            Returns the current state instance if there are no errors in the current REST API response; otherwise, it throws an exception with the response details.
            </summary>
            <returns>
            A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response or throws an exception with the response details.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if <see cref="M:Gx.Rs.Api.GedcomxApplicationState`1.HasError"/> returns true.</exception>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.Head(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Executes a HEAD verb request against the current REST API request and returns a state instance with the response.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.Options(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Executes an OPTIONS verb request against the current REST API request and returns a state instance with the response.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.Get(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Executes a GET verb request against the current REST API request and returns a state instance with the response.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.Delete(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Executes an DELETE verb request against the current REST API request and returns a state instance with the response.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.Put(`0,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Executes a PUT verb request against the current REST API request and returns a state instance with the response.
            </summary>
            <param name="entity">The entity to be used as the body of the REST API request. This is the entity to be PUT.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.Post(`0,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Executes a POST verb request against the current REST API request and returns a state instance with the response.
            </summary>
            <param name="entity">The entity to be used as the body of the REST API request. This is the entity to be POST.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.AuthenticateViaOAuth2Password(System.String,System.String,System.String)">
            <summary>
            Authenticates this session via OAuth2 password.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <param name="clientId">The client identifier.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
            <remarks>See https://familysearch.org/developers/docs/guides/oauth2 for more information.</remarks>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.AuthenticateViaOAuth2Password(System.String,System.String,System.String,System.String)">
            <summary>
            Authenticates this session via OAuth2 password.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <param name="clientId">The client identifier.</param>
            <param name="clientSecret">The client secret.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
            <remarks>See https://familysearch.org/developers/docs/guides/oauth2 for more information.</remarks>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.AuthenticateViaOAuth2AuthCode(System.String,System.String,System.String)">
            <summary>
            Authenticates this session via OAuth2 authentication code.
            </summary>
            <param name="authCode">The authentication code.</param>
            <param name="redirect">The redirect.</param>
            <param name="clientId">The client identifier.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
            <remarks>See https://familysearch.org/developers/docs/guides/oauth2 for more information.</remarks>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.AuthenticateViaOAuth2AuthCode(System.String,System.String,System.String,System.String)">
            <summary>
            Authenticates this session via OAuth2 authentication code.
            </summary>
            <param name="authCode">The authentication code.</param>
            <param name="redirect">The redirect.</param>
            <param name="clientId">The client identifier.</param>
            <param name="clientSecret">The client secret.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
            <remarks>See https://familysearch.org/developers/docs/guides/oauth2 for more information.</remarks>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.AuthenticateViaOAuth2ClientCredentials(System.String,System.String)">
            <summary>
            Authenticates this session via OAuth2 client credentials.
            </summary>
            <param name="clientId">The client identifier.</param>
            <param name="clientSecret">The client secret.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
            <remarks>See https://familysearch.org/developers/docs/guides/oauth2 for more information.</remarks>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.UnauthenticatedAccess(System.String,System.String,System.String)">
            <summary>
            Creates a state instance without authentication. It will produce an access token, but only good for requests that do not need authentication.
            </summary>
            <param name="ipAddress">The ip address.</param>
            <param name="clientId">The client identifier.</param>
            <param name="clientSecret">The client secret.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
            <remarks>See https://familysearch.org/developers/docs/guides/oauth2 for more information.</remarks>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.AuthenticateWithAccessToken(System.String)">
            <summary>
            Sets the current access token to the one specified. The server is not contacted during this operation.
            </summary>
            <param name="accessToken">The access token.</param>
            <returns>Returns this instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.AuthenticateViaOAuth2(System.Collections.Generic.IDictionary{System.String,System.String},Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Authenticates this session via OAuth2.
            </summary>
            <param name="formData">The form data.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">
            Illegal access token response: no access_token provided.
            or
            Unable to obtain an access token.
            </exception>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.ReadPage(System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads a page of results (usually of type <see cref="T:Gx.Atom.Feed"/>).
            </summary>
            <param name="rel">The rel name to use when looking for the link.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.ReadNextPage(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the next page of results (usually of type <see cref="T:Gx.Atom.Feed"/>).
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
            <remarks>This is a shorthand method for calling <see cref="M:Gx.Rs.Api.GedcomxApplicationState`1.ReadPage(System.String,Gx.Rs.Api.StateTransitionOption[])"/> and specifying Rel.NEXT.</remarks>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.ReadPreviousPage(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the previous page of results (usually of type <see cref="T:Gx.Atom.Feed"/>).
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
            <remarks>This is a shorthand method for calling <see cref="M:Gx.Rs.Api.GedcomxApplicationState`1.ReadPage(System.String,Gx.Rs.Api.StateTransitionOption[])"/> and specifying Rel.PREVIOUS.</remarks>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.ReadFirstPage(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the first page of results (usually of type <see cref="T:Gx.Atom.Feed"/>).
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
            <remarks>This is a shorthand method for calling <see cref="M:Gx.Rs.Api.GedcomxApplicationState`1.ReadPage(System.String,Gx.Rs.Api.StateTransitionOption[])"/> and specifying Rel.FIRST.</remarks>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.ReadLastPage(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the last page of results (usually of type <see cref="T:Gx.Atom.Feed"/>).
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>A <see cref="T:Gx.Rs.Api.GedcomxApplicationState`1"/> instance containing the REST API response.</returns>
            <remarks>This is a shorthand method for calling <see cref="M:Gx.Rs.Api.GedcomxApplicationState`1.ReadPage(System.String,Gx.Rs.Api.StateTransitionOption[])"/> and specifying Rel.LAST.</remarks>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.CreateAuthenticatedFeedRequest">
            <summary>
            Creates an authenticated feed request by attaching the authentication token and specifying the accept type.
            </summary>
            <returns>A REST API requeset (with appropriate authentication headers).</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.ReadContributor(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the contributor for the current state instance.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>An <see cref="T:Gx.Rs.Api.AgentState"/> instance containing the REST API response.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.ReadContributor(Gx.Common.Attributable,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the contributor for the specified <see cref="T:Gx.Common.Attributable"/>.
            </summary>
            <param name="attributable">The attributable.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>An <see cref="T:Gx.Rs.Api.AgentState"/> instance containing the REST API response.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.ReadContributor(Gx.Common.ResourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the contributor for the specified <see cref="T:Gx.Common.ResourceReference"/>.
            </summary>
            <param name="contributor">The contributor.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>An <see cref="T:Gx.Rs.Api.AgentState"/> instance containing the REST API response.</returns>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationState`1.GetSelfUri">
            <summary>
            Gets the URI representing this current state instance.
            </summary>
            <returns>The URI representing this current state instance</returns>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationState`1.Entity">
            <summary>
            Gets the entity represented by this state (if applicable). Not all responses produce entities.
            </summary>
            <value>
            The entity represented by this state.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationState`1.MainDataElement">
            <summary>
            Gets the main data element represented by this state instance.
            </summary>
            <value>
            The main data element represented by this state instance.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationState`1.Warnings">
            <summary>
            Gets the warning headers from the current REST API response.
            </summary>
            <value>
            The warning headers from the current REST API response.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationState`1.Headers">
            <summary>
            Gets the headers of the current REST API response.
            </summary>
            <value>
            The headers of the current REST API response.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationState`1.SelfRel">
            <summary>
            Gets the rel name for the currrent state instance. This is expected to be overridden.
            </summary>
            <value>
            The rel name for the currrent state instance
            </value>
        </member>
        <member name="M:Gx.Rs.Api.AgentState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.AgentState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.AgentState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="P:Gx.Rs.Api.AgentState.SelfRel">
            <summary>
            Gets the rel name for the currrent state instance. This is expected to be overridden.
            </summary>
            <value>
            The rel name for the currrent state instance
            </value>
        </member>
        <member name="P:Gx.Rs.Api.AgentState.MainDataElement">
            <summary>
            Gets the main data element represented by this state instance.
            </summary>
            <value>
            The main data element represented by this state instance.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.AgentState.Agent">
            <summary>
            Gets the agent represented by this state instance.
            </summary>
            <value>
            The agent represented by this state instance.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.AncestryResultsState">
            <summary>
            The AncestryResultsState exposes management functions for ancestry results.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.AncestryResultsState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.AncestryResultsState.ReadPerson(System.Int32,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the person at the specified one-based index number.
            </summary>
            <param name="ancestorNumber">The ancestor number of the person to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="P:Gx.Rs.Api.AncestryResultsState.SelfRel">
            <summary>
            Gets the rel name for the currrent state instance. This is expected to be overridden.
            </summary>
            <value>
            The rel name for the currrent state instance
            </value>
        </member>
        <member name="P:Gx.Rs.Api.AncestryResultsState.Tree">
            <summary>
            Gets the tree represented by the REST API response.
            </summary>
            <value>
            The tree represented by the REST API response.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.CollectionsState">
            <summary>
            The CollectionsState exposes management functions for collections.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.CollectionsState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.CollectionsState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.CollectionsState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionsState.ReadCollection(Gx.Records.Collection,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the specified collection.
            </summary>
            <param name="collection">The collection to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionsState.UpdateCollection(Gx.Records.Collection,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified collection.
            </summary>
            <param name="collection">The collection to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionsState.ReadCollection(Gx.Source.SourceDescription,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the collection specified by <see cref="P:SourceDescription.About"/>.
            </summary>
            <param name="sourceDescription">The source description that has a collection reference (in <see cref="P:SourceDescription.About"/>).</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionsState.ReadCollection(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the collection specified by this state instance.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionsState.AddCollection(Gx.Records.Collection,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a collection to the collection by this state instance.
            </summary>
            <param name="collection">The collection to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="P:Gx.Rs.Api.CollectionsState.Collections">
            <summary>
            Gets the collections represented by the current state instance from <see cref="P:Gedcomx.Collections"/>.
            </summary>
            <value>
            The collections represented by the current state instance from <see cref="P:Gedcomx.Collections"/>.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.CollectionsState.SourceDescriptions">
            <summary>
            Gets the source descriptions represented by the current state instance from <see cref="P:Gedcomx.SourceDescriptions"/>.
            </summary>
            <value>
            The source descriptions represented by the current state instance from <see cref="P:Gedcomx.SourceDescriptions"/>.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.CollectionState">
            <summary>
            The CollectionState is a collection of resources and exposes management of those resources.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.CollectionState"/> class.
            </summary>
            <param name="uri">The URI where the target collection resides.</param>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.#ctor(System.Uri,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.CollectionState"/> class.
            </summary>
            <param name="uri">The URI where the target collection resides.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.#ctor(System.Uri,Gx.Rs.Api.Util.IFilterableRestClient,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.CollectionState"/> class.
            </summary>
            <param name="uri">The URI where the target collection resides.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.#ctor(RestSharp.IRestRequest,Gx.Rs.Api.Util.IFilterableRestClient,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.CollectionState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this CollectionState.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.CollectionState"/> class.
            </summary>
            <param name="request">The REST API request that was used to instantiate the REST API response.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.Update(Gx.Records.Collection,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified collection.
            </summary>
            <param name="collection">The collection to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.ReadRecords(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads records from this collection.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RecordsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.AddRecord(Gx.Gedcomx,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a record to this collection.
            </summary>
            <param name="record">The record to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.ReadPersons(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Creates a persons collection from the current collection.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            If a link exists for this resource, it returns a <see cref="T:Gx.Rs.Api.PersonsState"/> instance containing the REST API response; otherwise, it returns null.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.AddPerson(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a person to the current collection.
            </summary>
            <param name="person">The person to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.AddPerson(Gx.Gedcomx,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a person to the current collection.
            </summary>
            <param name="entity">The <see cref="T:Gx.Gedcomx"/> containing the person to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.ReadPersonForCurrentUser(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the person record for the current user.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.ReadPerson(System.Uri,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the person specified by the URI.
            </summary>
            <param name="personUri">The person URI (e.g., https://sandbox.familysearch.org/platform/tree/persons/PPPP-PPP). </param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.SearchForPersons(Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Searches for persons based off the specified query.
            </summary>
            <param name="query">The query to use for searching.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonSearchResultsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.SearchForPersons(System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Searches for persons based off the specified query.
            </summary>
            <param name="query">The query to use for searching.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonSearchResultsState"/> instance containing the REST API response.
            </returns>
            <remarks>String query format and additional information can be reviewed at https://familysearch.org/developers/docs/api/tree/Person_Search_resource. </remarks>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.SearchForPlaces(Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Searches for places based off the specified query.
            </summary>
            <param name="query">The query to use for searching.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PlaceSearchResultsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.SearchForPlaces(System.String,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Searches for places based off the specified query.
            </summary>
            <param name="query">The query to use for searching.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PlaceSearchResultsState"/> instance containing the REST API response.
            </returns>
            <remarks>String query format and additional information can be reviewed at https://familysearch.org/developers/docs/api/places/Places_Search_resource. </remarks>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.ReadRelationships(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads relationships from the current collection.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.AddSpouseRelationship(Gx.Rs.Api.PersonState,Gx.Rs.Api.PersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a spouse relationship between the two persons.
            </summary>
            <param name="person1">The first person to which a relationship will be added (e.g., a husband).</param>
            <param name="person2">The second person to which a relationship will be added (e.g., a wife).</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.AddSpouseRelationship(Gx.Rs.Api.PersonState,Gx.Rs.Api.PersonState,Gx.Conclusion.Fact,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a spouse relationship between the two persons and applies the specified fact.
            </summary>
            <param name="person1">The first person to which a relationship will be added (e.g., a husband).</param>
            <param name="person2">The second person to which a relationship will be added (e.g., a wife).</param>
            <param name="fact">The fact to apply when the relationship is created.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.AddParentChildRelationship(Gx.Rs.Api.PersonState,Gx.Rs.Api.PersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a parent child relationship between the two persons.
            </summary>
            <param name="parent">The parent person state.</param>
            <param name="child">The child person state.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.AddParentChildRelationship(Gx.Rs.Api.PersonState,Gx.Rs.Api.PersonState,Gx.Conclusion.Fact,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a parent child relationship between the two persons and applies the specified fact.
            </summary>
            <param name="parent">The parent person state.</param>
            <param name="child">The child person state.</param>
            <param name="fact">The fact to apply when the relationship is created.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.AddRelationship(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds relationship to the collection.
            </summary>
            <param name="relationship">The relationship to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.AddRelationships(System.Collections.Generic.List{Gx.Conclusion.Relationship},Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the array of relationships to the collection.
            </summary>
            <param name="relationships">The relationships to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipsState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.AddArtifact(Gx.Rs.Api.Util.DataSource,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds an artifact to the collection.
            </summary>
            <param name="artifact">The artifact to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.AddArtifact(Gx.Source.SourceDescription,Gx.Rs.Api.Util.DataSource,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds an artifact to the collection using the specified <see cref="T:Gx.Source.SourceDescription"/>.
            </summary>
            <param name="description">The <see cref="T:Gx.Source.SourceDescription"/> to apply to the artifact.</param>
            <param name="artifact">The artifact to add to the collection.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.AddArtifact(Gx.Rs.Api.GedcomxApplicationState{Gx.Gedcomx},Gx.Source.SourceDescription,Gx.Rs.Api.Util.DataSource,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds an artifact to the specified state, using the specified <see cref="T:Gx.Source.SourceDescription"/>.
            </summary>
            <param name="state">The state instance to which the artifact will be added.</param>
            <param name="description">The <see cref="T:Gx.Source.SourceDescription"/> to apply to the artifact.</param>
            <param name="artifact">The artifact to add to the state.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.ReadSourceDescriptions(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the source descriptions for the current collection.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.AddSourceDescription(Gx.Source.SourceDescription,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a <see cref="T:Gx.Source.SourceDescription"/> to the current collection.
            </summary>
            <param name="source">The source description to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.ReadCollection(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the collection specified by this state instance.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.ReadSubcollections(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the subcollections specified by this state instance.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.AddCollection(Gx.Records.Collection,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a collection to the subcollection resource specified by this state instance.
            </summary>
            <param name="collection">The collection to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.ReadResourcesOfCurrentUser(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the resources (a collection <see cref="T:Gx.Source.SourceDescription"/>s) of the current user.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.GetSourceDescriptions">
            <summary>
            Gets the <see cref="T:Gx.Source.SourceDescription"/>s for the current <see cref="T:Gx.Gedcomx"/> entity.
            </summary>
            <returns>The <see cref="T:Gx.Source.SourceDescription"/>s for the current <see cref="T:Gx.Gedcomx"/> entity.</returns>
        </member>
        <member name="M:Gx.Rs.Api.CollectionState.GetBytes(System.IO.Stream)">
            <summary>
            Gets the bytes from the specified stream.
            </summary>
            <param name="stream">The stream from which the bytes will be returned.</param>
            <returns>The bytes from the specified stream.</returns>
        </member>
        <member name="P:Gx.Rs.Api.CollectionState.MainDataElement">
            <summary>
            Gets the main data element represented by this state instance. In this overridden implementation, it is the first collection from <see cref="P:Gx.Gedcomx.Collections"/>.
            </summary>
            <value>
            The main data element represented by this state instance. In this overridden implementation, it is the first collection from <see cref="P:Gx.Gedcomx.Collections"/>.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.CollectionState.Collection">
            <summary>
            Gets the first collection from <see cref="P:Gx.Gedcomx.Collections"/>.
            </summary>
            <value>
            The first collection from <see cref="P:Gx.Gedcomx.Collections"/>.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.DescendancyResultsState">
            <summary>
            The DescendancyResultsState exposes management functions for descendancy results.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.DescendancyResultsState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.DescendancyResultsState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.DescendancyResultsState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="P:Gx.Rs.Api.DescendancyResultsState.Tree">
            <summary>
            Gets the tree represented by the REST API response.
            </summary>
            <value>
            The tree represented by the REST API response.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.GedcomxApplicationException">
            <summary>
            Represents an exception within the FamilySearch GEDCOM X application.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.GedcomxApplicationException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.GedcomxApplicationException"/> class.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.GedcomxApplicationException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.GedcomxApplicationException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationException.#ctor(RestSharp.IRestResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.GedcomxApplicationException"/> class.
            </summary>
            <param name="response">The REST API response that is associated with this exception.</param>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationException.#ctor(System.String,RestSharp.IRestResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.GedcomxApplicationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="response">The REST API response that is associated with this exception.</param>
        </member>
        <member name="M:Gx.Rs.Api.GedcomxApplicationException.#ctor(System.String,System.Exception,RestSharp.IRestResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.GedcomxApplicationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
            <param name="response">The REST API response that is associated with this exception.</param>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationException.Response">
            <summary>
            Gets the response associated with the exception if applicable.
            </summary>
            <value>
            The response associated with the exception if applicable.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
        </member>
        <member name="P:Gx.Rs.Api.GedcomxApplicationException.Warnings">
            <summary>
            Gets the list of warning header values from the associated REST API response if it is available.
            </summary>
            <value>
            The list of warning header values from the associated REST API response if it is available.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.PreferredRelationshipState">
            <summary>
            A basic interface declaring the explicit ability to produce a self URI.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.PreferredRelationshipState.GetSelfUri">
            <summary>
            Gets the self URI.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gx.Rs.Api.Options.CacheDirectives">
            <summary>
            A REST API request options helper providing cache control features.This is similar to the <see cref="T:Gx.Rs.Api.Options.Preconditions"/> class, but applies
            inverse logic.
            </summary>
        </member>
        <member name="T:Gx.Rs.Api.StateTransitionOption">
            <summary>
            Defines a method to manipulate and apply options to a REST API request before execution.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.StateTransitionOption.Apply(RestSharp.IRestRequest)">
            <summary>
            When overriden in a class, this method applies specific options or manipulates the REST API request.
            </summary>
            <param name="request">The REST API request that will be modified or manipulated.</param>
        </member>
        <member name="M:Gx.Rs.Api.Options.CacheDirectives.#ctor(Gx.Rs.Api.GedcomxApplicationState)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Options.CacheDirectives"/> class.
            </summary>
            <param name="state">The state with an <see cref="P:GedcomxApplicationState.ETag"/> and <see cref="P:GedcomxApplicationState.LastModified"/> properties
            to use for cache control. See remarks.</param>
            <remarks>
            If the ETag (entity tag) specified here does not match the server's ETag for a resource, the resource will be returned; otherwise, a not-modified status
            is returned. The same applies to last modified. If the server's last modified date for a resource is greater than the last modified specified here, the
            resource will be returned; otherwise, a not-modified status is returned.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Options.CacheDirectives.#ctor(System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Options.CacheDirectives"/> class.
            </summary>
            <param name="lastModified">
            The last modified date to send to the server for evaluation. See remarks.
            </param>
            <remarks>
            If the server's last modified date for a resource is greater than the last modified specified here, the
            resource will be returned; otherwise, a not-modified status is returned.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Options.CacheDirectives.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Options.CacheDirectives"/> class.
            </summary>
            <param name="etag">The ETag to send to the server for evaluation. See remarks.</param>
            <remarks>
            If the ETag (entity tag) specified here does not match the server's ETag for a resource, the resource will be returned; otherwise, a not-modified status
            is returned.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Options.CacheDirectives.#ctor(System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Options.CacheDirectives"/> class.
            </summary>
            <param name="etag">The ETag to send to the server for evaluation. See remarks.</param>
            <param name="lastModified">
            The last modified date to send to the server for evaluation. See remarks.
            </param>
            <remarks>
            If the ETag (entity tag) specified here does not match the server's ETag for a resource, the resource will be returned; otherwise, a not-modified status
            is returned. The same applies to last modified. If the server's last modified date for a resource is greater than the last modified specified here, the
            resource will be returned; otherwise, a not-modified status is returned.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Options.CacheDirectives.Apply(RestSharp.IRestRequest)">
            <summary>
            Applies the ETag or LastModified cache control headers to the specified REST API request. See remarks.
            </summary>
            <param name="request">The REST API request that will be modified.</param>
            <remarks>
            The cache control headers are applied conditionally. The ETag and LastModified values will only be applied if they are not null. Furthermore, the
            application of each are independent of the other. This could, therefore, only apply a LastModified cache control header and not an ETag cache control
            header if the ETag property of this instance were null and LastModified was not.
            </remarks>
        </member>
        <member name="T:Gx.Rs.Api.Options.HeaderParameter">
            <summary>
            This is a helper class for managing headers in REST API requests.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Options.HeaderParameter.LANG">
            <summary>
            The accept language header
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Options.HeaderParameter.LOCALE">
            <summary>
            The locale header
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Options.HeaderParameter.IF_NONE_MATCH">
            <summary>
            The if-none-match header
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Options.HeaderParameter.IF_MODIFIED_SINCE">
            <summary>
            The if-modified-since header
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Options.HeaderParameter.IF_MATCH">
            <summary>
            The if-match header
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Options.HeaderParameter.IF_UNMODIFIED_SINCE">
            <summary>
            The if-unmodified-since header
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Options.HeaderParameter.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Options.HeaderParameter"/> class.
            </summary>
            <param name="name">The name of the header to use.</param>
            <param name="value">The value of this new header.</param>
        </member>
        <member name="M:Gx.Rs.Api.Options.HeaderParameter.#ctor(System.Boolean,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Options.HeaderParameter"/> class.
            </summary>
            <param name="replace">if set to <c>true</c> and if a header already exists with the same name, this header parameter will replace the existing header.</param>
            <param name="name">The name of the header to use.</param>
            <param name="value">The value of this new header.</param>
        </member>
        <member name="M:Gx.Rs.Api.Options.HeaderParameter.Apply(RestSharp.IRestRequest)">
            <summary>
            This method adds the current header parameters to the REST API request.
            </summary>
            <param name="request">The REST API request that will be modified or manipulated.</param>
        </member>
        <member name="M:Gx.Rs.Api.Options.HeaderParameter.Lang(System.String)">
            <summary>
            Creates an accept-language header parameter.
            </summary>
            <param name="value">The value of the language the modified REST API request will accept.</param>
            <returns>An accpet-language header parameter as a <see cref="T:Gx.Rs.Api.Options.HeaderParameter"/>.</returns>
            <remarks>This method always sets <c>replace</c> to <c>true</c>.</remarks>
        </member>
        <member name="M:Gx.Rs.Api.Options.HeaderParameter.Locale(System.String)">
            <summary>
            Creates an accept-language header parameter.
            </summary>
            <param name="value">The value of the locale the modified REST API request will accept.</param>
            <returns>An accpet-language header parameter as a <see cref="T:Gx.Rs.Api.Options.HeaderParameter"/>.</returns>
            <remarks>This method always sets <c>replace</c> to <c>true</c>.</remarks>
        </member>
        <member name="T:Gx.Rs.Api.Options.Preconditions">
            <summary>
            A REST API request options helper providing precondition features. This is similar to the <see cref="T:Gx.Rs.Api.Options.CacheDirectives"/> class, but applies
            inverse logic.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Options.Preconditions.#ctor(Gx.Rs.Api.GedcomxApplicationState)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Options.Preconditions"/> class.
            </summary>
            <param name="state">The state with an <see cref="P:GedcomxApplicationState.ETag"/> and <see cref="P:GedcomxApplicationState.LastModified"/> properties
            to use for preconditions. See remarks.</param>
            <remarks>
            If the ETag (entity tag) specified here matches the server's ETag for a resource, the resource will be returned; otherwise, a precondition-failed status
            is returned. The same applies to last modified. If the server's last modified date for a resource is equal to the last modified specified here, the
            resource will be returned; otherwise, a precondition-failed status is returned.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Options.Preconditions.#ctor(System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Options.Preconditions"/> class.
            </summary>
            <param name="lastModified">
            The last modified date to send to the server for evaluation. See remarks.
            </param>
            <remarks>
            If the server's last modified date for a resource is equal to the last modified specified here, the
            resource will be returned; otherwise, a precondition-failed status is returned.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Options.Preconditions.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Options.Preconditions"/> class.
            </summary>
            <param name="etag">The ETag to send to the server for evaluation. See remarks.</param>
            <remarks>
            If the ETag (entity tag) specified here matches the server's ETag for a resource, the resource will be returned; otherwise, a precondition-failed status
            is returned.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Options.Preconditions.#ctor(System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Options.Preconditions"/> class.
            </summary>
            <param name="etag">The ETag to send to the server for evaluation. See remarks.</param>
            <param name="lastModified">
            The last modified date to send to the server for evaluation. See remarks.
            </param>
            <remarks>
            If the ETag (entity tag) specified here matches the server's ETag for a resource, the resource will be returned; otherwise, a precondition-failed status
            is returned. The same applies to last modified. If the server's last modified date for a resource is equal to the last modified specified here, the
            resource will be returned; otherwise, a precondition-failed status is returned.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Options.Preconditions.Apply(RestSharp.IRestRequest)">
            <summary>
            Applies the ETag or LastModified cache control headers to the specified REST API request. See remarks.
            </summary>
            <param name="request">The REST API request that will be modified.</param>
            <remarks>
            The cache control headers are applied conditionally. The ETag and LastModified values will only be applied if they are not null. Furthermore, the
            application of each are independent of the other. This could, therefore, only apply a LastModified cache control header and not an ETag cache control
            header if the ETag property of this instance were null and LastModified was not.
            </remarks>
        </member>
        <member name="T:Gx.Rs.Api.Options.QueryParameter">
            <summary>
            Represents a generic query string parameter to use in REST API requests.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Options.QueryParameter.ACCESS_TOKEN">
            <summary>
            The access token query parameter.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Options.QueryParameter.COUNT">
            <summary>
            The count query parameter.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Options.QueryParameter.GENERATIONS">
            <summary>
            The generations query parameter.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Options.QueryParameter.SEARCH_QUERY">
            <summary>
            The search query parameter.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Options.QueryParameter.START">
            <summary>
            The start query parameter.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Options.QueryParameter.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Options.QueryParameter"/> class.
            </summary>
            <param name="name">The name of the query string parameter.</param>
            <param name="values">The string value to use in the new query parameter.</param>
        </member>
        <member name="M:Gx.Rs.Api.Options.QueryParameter.#ctor(System.Boolean,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Options.QueryParameter"/> class.
            </summary>
            <param name="replace">
            Determines whether a parameter with the same name is to be replaced or appended to. If set to <c>true</c>, any existing query string
            parameters of the same name will be replaced by this parameter; otherwise, the values specified here will be appened to the existing
            parameter of the same name. This parameter is ignored if it is the parameter name is unique.
            </param>
            <param name="name">The name of the query string parameter.</param>
            <param name="values">The string value to use in the new query parameter.</param>
        </member>
        <member name="M:Gx.Rs.Api.Options.QueryParameter.Apply(RestSharp.IRestRequest)">
            <summary>
            This method adds the current parameter to the specified REST API request.
            </summary>
            <param name="request">The REST API request that will be modified.</param>
        </member>
        <member name="M:Gx.Rs.Api.Options.QueryParameter.AccessToken(System.String)">
            <summary>
            Creates an access token query string parameter.
            </summary>
            <param name="value">The value to use in the access token query string parameter. See remarks.</param>
            <returns>An access token query string parameter.</returns>
            <remarks>
            This could be used, for example, to send an access token via the query string, rather than an authorization header in REST API requests.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Options.QueryParameter.Count(System.Int32)">
            <summary>
            Creates a count query string parameter.
            </summary>
            <param name="value">The value to use in the count query string parameter. See remarks.</param>
            <returns>A count query string parameter.</returns>
            <remarks>
            This could be used, for example, to control the maximum number search results.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Options.QueryParameter.Generations(System.Int32)">
            <summary>
            Creates a generations query string parameter.
            </summary>
            <param name="value">The value to use in the generations query string parameter. See remarks.</param>
            <returns>A generations query string parameter.</returns>
            <remarks>
            This could be used, for example, to control how far back an ancestry query should search.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Options.QueryParameter.SearchQuery(System.String)">
            <summary>
            Creates a search query string parameter.
            </summary>
            <param name="value">The value to use in the search query string parameter. See remarks.</param>
            <returns>A search query string parameter.</returns>
            <remarks>
            This could be used, for example, to create a search request, such as what might be built by <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/>
            or <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/>.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Options.QueryParameter.Start(System.Int32)">
            <summary>
            Creates a start query string parameter.
            </summary>
            <param name="value">The value to use in the start query string parameter. See remarks.</param>
            <returns>A start query string parameter.</returns>
            <remarks>
            This could be used, for example, to control where search results should start.
            </remarks>
        </member>
        <member name="T:Gx.Rs.Api.PersonChildrenState">
            <summary>
            The PersonChildrenState exposes management functions for person children.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.PersonChildrenState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.PersonChildrenState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.PersonChildrenState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonChildrenState.FindRelationshipTo(Gx.Conclusion.Person)">
            <summary>
            Finds the relationship to the specified child. See remarks for more information.
            </summary>
            <param name="child">The child for which the relationship is sought.</param>
            <returns>
            The <see cref="T:Gx.Conclusion.Relationship"/> the child is in, or <c>null</c> if a relationship was not found.
            </returns>
            <remarks>
            This method iterates over the current <see cref="P:Relationships"/>, and each item is examined
            to determine if the child ID in the relationship matches the child ID for the specified child. If one is found,
            that relationship object containing that child ID is returned, and no other relationships are examined further.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.PersonChildrenState.ReadPerson(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the current person represented by this state instance.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonChildrenState.ReadChild(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the child from the person specified.
            </summary>
            <param name="person">The person from which the child will be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonChildrenState.ReadRelationship(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the specified relationship.
            </summary>
            <param name="relationship">The relationship to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonChildrenState.RemoveRelationship(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Removes the specified relationship.
            </summary>
            <param name="relationship">The relationship to remove.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if a link to the required resource cannot be found.</exception>
        </member>
        <member name="M:Gx.Rs.Api.PersonChildrenState.RemoveRelationshipTo(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Removes the relationship to the specified child.
            </summary>
            <param name="child">The child to which the relationship will be removed.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">
            Thrown if a relationship to the specified child cannot be found.
            or
            Thrown if a link to the required resource cannot be found.
            </exception>
        </member>
        <member name="P:Gx.Rs.Api.PersonChildrenState.Persons">
            <summary>
            Gets the <see cref="P:Gedcomx.Persons"/> represented by the current state instance.
            </summary>
            <value>
            The <see cref="P:Gedcomx.Persons"/> represented by the current state instance.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.PersonChildrenState.Relationships">
            <summary>
            Gets the <see cref="P:Gedcomx.Relationships"/> represented by the current state instance.
            </summary>
            <value>
            The <see cref="P:Gedcomx.Relationships"/> represented by the current state instance.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.PersonParentsState">
            <summary>
            The PersonParentsState exposes management functions for person parents.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.PersonParentsState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.PersonParentsState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.PersonParentsState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonParentsState.FindRelationshipTo(Gx.Conclusion.Person)">
            <summary>
            Finds the relationship to the specified parent. See remarks for more information.
            </summary>
            <param name="parent">The parent for which the relationship is sought.</param>
            <returns>
            The <see cref="T:Gx.Conclusion.Relationship"/> the parent is in, or <c>null</c> if a relationship was not found.
            </returns>
            <remarks>
            This method iterates over the current <see cref="P:Relationships"/>, and each item is examined
            to determine if the parent ID in the relationship matches the parent ID for the specified parent. If one is found,
            that relationship object containing that parent ID is returned, and no other relationships are examined further.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.PersonParentsState.ReadPerson(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the current person represented by this state instance.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonParentsState.ReadParent(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the specified person, which is a parent to the current person. This person could come <see cref="P:Persons"/>.
            </summary>
            <param name="person">The person, which is a parent to the current person.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonParentsState.ReadRelationship(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the specified relationship, which is a relationship between the current person and a parent. This relationship could come from <see cref="P:Relationships"/>.
            </summary>
            <param name="relationship">The relationship to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonParentsState.RemoveRelationship(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Removes the specified relationship, which is a relationship between the current person and a parent.
            </summary>
            <param name="relationship">The relationship to remove.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if a link to the required resource cannot be found.</exception>
        </member>
        <member name="M:Gx.Rs.Api.PersonParentsState.RemoveRelationshipTo(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Removes the relationship from the current person to the specified person.
            </summary>
            <param name="parent">The parent to which the current person has a relationship.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">
            Thrown if a relationship between the current person and the specified parent could not be found
            or
            Thrown if a link to the required resource cannot be found.
            </exception>
        </member>
        <member name="P:Gx.Rs.Api.PersonParentsState.Persons">
            <summary>
            Gets the list of parents for the person represented by this state instance from <see cref="P:Gedcomx.Persons"/>.
            </summary>
            <value>
            The list of parents for the person represented by this state instance from <see cref="P:Gedcomx.Persons"/>.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.PersonParentsState.Relationships">
            <summary>
            Gets the list of relationships for the person's parents from <see cref="P:Gedcomx.Relationships"/>.
            </summary>
            <value>
            The list of relationships for the person's parents from <see cref="P:Gedcomx.Relationships"/>.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.PersonSearchResultsState">
            <summary>
            The PersonSearchResultsState exposes management functions for person search results.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.PersonSearchResultsState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.PersonSearchResultsState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.PersonSearchResultsState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonSearchResultsState.ReadPerson(Gx.Atom.Entry,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the person from the specified atom feed entry.
            </summary>
            <param name="person">The person from the atom feed entry. This could come from <see cref="P:Results.Entries"/>.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonSearchResultsState.ReadRecord(Gx.Atom.Entry,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the person record from the specified atom feed entry.
            </summary>
            <param name="person">The person from the atom feed entry. This could come from <see cref="P:Results.Entries"/>.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RecordState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonSearchResultsState.ReadPerson(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the person from the specified person model.
            </summary>
            <param name="person">The person to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
            <remarks>
            The specified person model will need a self link; otherwise, this method will return null.
            </remarks>
        </member>
        <member name="P:Gx.Rs.Api.PersonSearchResultsState.Results">
            <summary>
            Gets the search results from the atom feed response.
            </summary>
            <value>
            The search results from the atom feed response.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.PersonSpousesState">
            <summary>
            The PersonSpousesState exposes management functions for person spouses.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.PersonSpousesState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.PersonSpousesState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.PersonSpousesState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonSpousesState.FindRelationshipTo(Gx.Conclusion.Person)">
            <summary>
            Finds the relationship to the specified spouse. See remarks for more information.
            </summary>
            <param name="spouse">The spouse for which the relationship is sought.</param>
            <returns>
            The <see cref="T:Gx.Conclusion.Relationship"/> the spouse is in, or <c>null</c> if a relationship was not found.
            </returns>
            <remarks>
            This method iterates over the current <see cref="P:Relationships"/>, and each item is examined
            to determine if the spouse ID in the relationship matches the spouse ID for the specified spouse. If one is found,
            that relationship object containing that spouse ID is returned, and no other relationships are examined further.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.PersonSpousesState.ReadPerson(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the current person represented by this state instance.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonSpousesState.ReadSpouse(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the specified person, which is a spouse to the current person. This person could come <see cref="P:Persons"/>.
            </summary>
            <param name="person">The person, which is a spouse to the current person.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonSpousesState.ReadAncestryWithSpouse(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads ancestry of the specified person, which is a spouse of the current person.
            </summary>
            <param name="person">The spouse whose ancestry will be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonSpousesState.ReadDescendancyWithSpouse(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Read descendancy of the specified person, which is a spouse of the current person.
            </summary>
            <param name="person">The spouse whose ancestry will be read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonSpousesState.ReadRelationship(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the specified relationship, which is a relationship between the current person and a spouse. This relationship could come from <see cref="P:Relationships"/>.
            </summary>
            <param name="relationship">The relationship to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonSpousesState.RemoveRelationship(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Removes the specified relationship, which is a relationship between the current person and a spouse.
            </summary>
            <param name="relationship">The relationship to remove.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">
            Thrown if a link to the required resource cannot be found.
            </exception>
        </member>
        <member name="M:Gx.Rs.Api.PersonSpousesState.RemoveRelationshipTo(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Removes the relationship from the current person to the specified person.
            </summary>
            <param name="spouse">The spouse to which the current person has a relationship.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">
            Thrown if a relationship between the current person and the specified spouse could not be found
            or
            Thrown if a link to the required resource cannot be found.
            </exception>
        </member>
        <member name="P:Gx.Rs.Api.PersonSpousesState.Persons">
            <summary>
            Gets the persons, which are spouses to the current person from <see cref="P:Gedcomx.Persons"/>.
            </summary>
            <value>
            The persons, which are spouses to the current person from <see cref="P:Gedcomx.Persons"/>.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.PersonSpousesState.Relationships">
            <summary>
            Gets the relationships for the current person's spouses from <see cref="P:Gedcomx.Relationships"/>.
            </summary>
            <value>
            The relationships for the current person's spouses from <see cref="P:Gedcomx.Relationships"/>.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.PersonsState">
            <summary>
            The PersonsState exposes management functions for a persons collection.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.PersonsState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.PersonsState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.PersonsState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonsState.ReadCollection(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the collection specified by this state instance.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonsState.AddPerson(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a person to the current collection.
            </summary>
            <param name="person">The person to add to the current collection.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="P:Gx.Rs.Api.PersonsState.Persons">
            <summary>
            Gets the list of persons represented by this current instance from <see cref="P:Gedcomx.Persons"/>.
            </summary>
            <value>
            The list of persons represented by this current instance from <see cref="P:Gedcomx.Persons"/>.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.PersonState">
            <summary>
            The PersonState exposes management functions for a person.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.PersonState"/> class.
            </summary>
            <param name="uri">The URI of the person.</param>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.#ctor(System.Uri,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.PersonState"/> class.
            </summary>
            <param name="uri">The URI of the person.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.#ctor(System.Uri,Gx.Rs.Api.Util.IFilterableRestClient,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.PersonState"/> class.
            </summary>
            <param name="uri">The URI of the person.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.#ctor(RestSharp.IRestRequest,Gx.Rs.Api.Util.IFilterableRestClient,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.PersonState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.PersonState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.GetRelationships">
            <summary>
            Gets the relationships from the main <see cref="T:Gx.Gedcomx"/> entity.
            </summary>
            <returns>The relationships from the main <see cref="T:Gx.Gedcomx"/> entity</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.GetSpouseRelationships">
            <summary>
            Gets the spouse relationships from <see cref="M:Gx.Rs.Api.PersonState.GetRelationships"/>.
            </summary>
            <returns>The spouse relationships from <see cref="M:Gx.Rs.Api.PersonState.GetRelationships"/>.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.GetChildRelationships">
            <summary>
            Gets the child relationships from <see cref="M:Gx.Rs.Api.PersonState.GetRelationships"/>.
            </summary>
            <returns>The child relationships from <see cref="M:Gx.Rs.Api.PersonState.GetRelationships"/>.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.GetParentRelationships">
            <summary>
            Gets the parent relationships from <see cref="M:Gx.Rs.Api.PersonState.GetRelationships"/>.
            </summary>
            <returns>The parent relationships from <see cref="M:Gx.Rs.Api.PersonState.GetRelationships"/>.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.RefersToMe(Gx.Common.ResourceReference)">
            <summary>
            Determines if the specified <see cref="T:Gx.Common.ResourceReference"/> refers to this state instance.
            </summary>
            <param name="ref">The resource reference to check.</param>
            <returns>True, if the specified resource reference refers to this state instance; otherwise, false.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.GetDisplayProperties">
            <summary>
            Gets the display properties of current <see cref="P:Gx.Rs.Api.PersonState.Person"/>.
            </summary>
            <returns>The display properties of current <see cref="P:Gx.Rs.Api.PersonState.Person"/>.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.GetConclusion">
            <summary>
            Gets the first conclusion of the current <see cref="P:Gx.Rs.Api.PersonState.Person"/>.
            </summary>
            <returns>The first conclusion of the current <see cref="P:Gx.Rs.Api.PersonState.Person"/>.</returns>
            <remarks>
            The order of conclusions scanned are:
            <list type="number">
                <item><see cref="P:Person.Names"/></item>
                <item><see cref="P:Person.Gender"/></item>
                <item><see cref="P:Person.Facts"/></item>
            </list>
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.GetName">
            <summary>
            Gets the first name from <see cref="P:Person.Names"/>.
            </summary>
            <returns>The first name from <see cref="P:Person.Names"/>.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.GetGender">
            <summary>
            Gets the gender from <see cref="P:Person.Gender"/>.
            </summary>
            <returns>The gender from <see cref="P:Person.Gender"/>.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.GetFact">
            <summary>
            Gets the first fact from <see cref="P:Person.Facts"/>.
            </summary>
            <returns>The first fact from <see cref="P:Person.Facts"/>.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.GetNote">
            <summary>
            Gets the first note from <see cref="P:Person.Notes"/>.
            </summary>
            <returns>The first note from <see cref="P:Person.Notes"/>.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.GetSourceReference">
            <summary>
            Gets the first source reference from <see cref="P:Person.Sources"/>.
            </summary>
            <returns>The first source reference from <see cref="P:Person.Sources"/>.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.GetEvidenceReference">
            <summary>
            Gets the first evidence reference from <see cref="P:Person.Evidence"/>.
            </summary>
            <returns>The first evidence reference from <see cref="P:Person.Evidence"/>.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.GetPersonaReference">
            <summary>
            Gets the persona reference. This is just another method for GetEvidenceReference().
            </summary>
            <returns>The persona reference from <see cref="M:Gx.Rs.Api.PersonState.GetEvidenceReference"/>.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.GetMediaReference">
            <summary>
            Gets the first media reference from <see cref="P:Person.Media"/>.
            </summary>
            <returns>The first media reference from <see cref="P:Person.Media"/>.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadCollection(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the collection specified by this state instance.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadAncestry(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the ancestry of the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.AncestryResultsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadDescendancy(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the descendancy of the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.DescendancyResultsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.LoadEmbeddedResources(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads all embedded resources for which the current Gedcomx has links.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.LoadEmbeddedResources(System.String[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads the embedded resources for the specified links.
            </summary>
            <param name="rels">The array of link names for which the current Gedcomx will be queried, and loaded if the links are present.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.LoadConclusions(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads conclusions for the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.LoadSourceReferences(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads source references for the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.LoadMediaReferences(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads media references for the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.LoadEvidenceReferences(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads evidence references for the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.LoadPersonaReferences(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads persona references for the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.LoadNotes(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads notes for the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.LoadParentRelationships(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Load parent relationships for the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.LoadSpouseRelationships(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Load spouse relationships for the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.LoadChildRelationships(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Load child relationships for the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.CreateEmptySelf">
            <summary>
            Instantiates a new <see cref="P:Gx.Rs.Api.PersonState.Person"/> and only sets the <see cref="P:Person.Id"/> to the current person's ID.
            </summary>
            <returns>A new <see cref="P:Gx.Rs.Api.PersonState.Person"/> with a matching person ID for the current person ID.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.Update(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified person.
            </summary>
            <param name="person">The person.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddGender(Gx.Conclusion.Gender,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a gender to the current person.
            </summary>
            <param name="gender">The gender to be added.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddName(Gx.Conclusion.Name,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a name to the current person.
            </summary>
            <param name="name">The name.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddNames(Gx.Conclusion.Name[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds names to the current person.
            </summary>
            <param name="names">The names to be added.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddFact(Gx.Conclusion.Fact,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a fact to the current person.
            </summary>
            <param name="fact">The fact to be added.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddFacts(Gx.Conclusion.Fact[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds facts to the current person.
            </summary>
            <param name="facts">The facts to be added.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateGender(Gx.Conclusion.Gender,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the gender of the current person.
            </summary>
            <param name="gender">The gender to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateName(Gx.Conclusion.Name,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the name of the current person.
            </summary>
            <param name="name">The name to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateNames(Gx.Conclusion.Name[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the names of the current person.
            </summary>
            <param name="names">The names to udpate.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateFact(Gx.Conclusion.Fact,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the fact of the current person.
            </summary>
            <param name="fact">The fact to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateFacts(Gx.Conclusion.Fact[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the facts of the current person.
            </summary>
            <param name="facts">The facts to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateConclusions(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the conclusions of the specified <see cref="P:Gx.Rs.Api.PersonState.Person"/>.
            </summary>
            <param name="person">The person with conclusions that will be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateConclusions(Gx.Gedcomx,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates conclusions of the specified <see cref="T:Gx.Gedcomx"/>.
            </summary>
            <param name="gx">The Gedcomx with conclusions that will be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.DeleteName(Gx.Conclusion.Name,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the name of the current person.
            </summary>
            <param name="name">The name to delete.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.DeleteGender(Gx.Conclusion.Gender,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the gender of the current person.
            </summary>
            <param name="gender">The gender to delete.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.DeleteFact(Gx.Conclusion.Fact,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the fact of the current person.
            </summary>
            <param name="fact">The fact to delete.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.DoDeleteConclusion(Gx.Conclusion.Conclusion,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the specified conclusion.
            </summary>
            <param name="conclusion">The conclusion to delete.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddSourceReference(Gx.Rs.Api.SourceDescriptionState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the specified source reference (in the <see cref="T:Gx.Rs.Api.SourceDescriptionState"/>) to the current person.
            </summary>
            <param name="source">The source reference to be added.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddSourceReference(Gx.Rs.Api.RecordState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the specified source reference (in the <see cref="T:Gx.Rs.Api.RecordState"/>) to the current person.
            </summary>
            <param name="source">The source reference to be added.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddSourceReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the specified source reference to the current person.
            </summary>
            <param name="reference">The source reference to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddSourceReferences(Gx.Source.SourceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the specified source references to the current person.
            </summary>
            <param name="refs">The source references to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateSourceReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified source reference for the current person.
            </summary>
            <param name="reference">The source reference to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateSourceReferences(Gx.Source.SourceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified source references for the current person.
            </summary>
            <param name="refs">The source references to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateSourceReferences(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the source references for the specified person.
            </summary>
            <param name="person">The person with source references to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.DeleteSourceReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the specified source reference from the current person.
            </summary>
            <param name="reference">The source reference to delete.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadArtifacts(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads artifacts from the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddArtifact(Gx.Rs.Api.Util.DataSource,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds an artifact to the current person.
            </summary>
            <param name="artifact">The artifact to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddArtifact(Gx.Source.SourceDescription,Gx.Rs.Api.Util.DataSource,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds an artifact to the current person with the specified source description.
            </summary>
            <param name="description">The source description for the artifact being added.</param>
            <param name="artifact">The artifact to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddMediaReference(Gx.Rs.Api.SourceDescriptionState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a media reference to the current person.
            </summary>
            <param name="description">The <see cref="T:Gx.Rs.Api.SourceDescriptionState"/> that represents the media reference to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddMediaReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a media reference to the current person.
            </summary>
            <param name="reference">The <see cref="T:Gx.Source.SourceReference"/> that is a media reference to be added.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddMediaReferences(Gx.Source.SourceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds media references to the current person.
            </summary>
            <param name="refs">The array of source references that are media references to be added.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateMediaReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the media reference for the current person.
            </summary>
            <param name="reference">The source reference to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateMediaReferences(Gx.Source.SourceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the media references for the current person.
            </summary>
            <param name="refs">The source references to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateMediaReferences(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the media references of the specified person.
            </summary>
            <param name="person">The person with media references that will be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.DeleteMediaReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the specified media reference from the current person.
            </summary>
            <param name="reference">The source reference to be deleted.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddEvidenceReference(Gx.Rs.Api.PersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds an evidence reference to the current person.
            </summary>
            <param name="evidence">The evidence reference to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddEvidenceReference(Gx.Common.EvidenceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds an evidence reference to the current person.
            </summary>
            <param name="reference">The evidence reference to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddEvidenceReferences(Gx.Common.EvidenceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the evidence references to the current person.
            </summary>
            <param name="refs">The evidence references to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateEvidenceReference(Gx.Common.EvidenceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Update the evidence reference for the current person.
            </summary>
            <param name="reference">The evidence reference to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateEvidenceReferences(Gx.Common.EvidenceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the evidence references for the current person.
            </summary>
            <param name="refs">The evidence references to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateEvidenceReferences(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the evidence references for the specified person.
            </summary>
            <param name="person">The person with evidence references to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.DeleteEvidenceReference(Gx.Common.EvidenceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the evidence reference from the current person.
            </summary>
            <param name="reference">The evidence reference to delete.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddPersonaReference(Gx.Rs.Api.PersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a persona reference to the current person.
            </summary>
            <param name="persona">The persona reference to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddPersonaReference(Gx.Common.EvidenceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a persona reference to the current person.
            </summary>
            <param name="reference">The persona reference to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddPersonaReferences(Gx.Common.EvidenceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the persona references to the current person.
            </summary>
            <param name="refs">The persona references to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdatePersonaReference(Gx.Common.EvidenceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the persona reference for the current person.
            </summary>
            <param name="reference">The persona reference to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdatePersonaReferences(Gx.Common.EvidenceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the persona references for the current person.
            </summary>
            <param name="refs">The persona references to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdatePersonaReferences(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the persona references for the specified person.
            </summary>
            <param name="person">The person with persona references to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.DeletePersonaReference(Gx.Common.EvidenceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the specified persona reference for the current person.
            </summary>
            <param name="reference">The reference.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadNote(Gx.Common.Note,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the specified note.
            </summary>
            <param name="note">The note to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddNote(Gx.Common.Note,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a note to the current person.
            </summary>
            <param name="note">The note to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddNotes(Gx.Common.Note[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Add the notes to the current person.
            </summary>
            <param name="notes">The notes to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateNote(Gx.Common.Note,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified note for the current person.
            </summary>
            <param name="note">The note to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateNotes(Gx.Common.Note[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Update the specified notes for the current person.
            </summary>
            <param name="notes">The notes to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.UpdateNotes(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Update the notes on the specified person.
            </summary>
            <param name="person">The person with the notes to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.DeleteNote(Gx.Common.Note,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Delete the specified note from the current person.
            </summary>
            <param name="note">The note to be deleted.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadRelationship(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the specified relationship.
            </summary>
            <param name="relationship">The relationship to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadRelative(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the relative in the specified relationship.
            </summary>
            <param name="relationship">The relationship to use reading the relative.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadFirstSpouse(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the first spouse of the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadSpouse(System.Int32,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the spouse at the specified index of the current person.
            </summary>
            <param name="index">The index of the spouse to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadSpouse(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the spouse from the specified relationship of the current person.
            </summary>
            <param name="relationship">The relationship to use for reading the spouse.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadSpouses(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the spouses of the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonSpousesState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddSpouse(Gx.Rs.Api.PersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the specified person as a spouse to the current person.
            </summary>
            <param name="person">The person to add as a spouse.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if the current person's collection could not be read or produced a client or server error.</exception>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadFirstChild(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the first child of the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadChild(System.Int32,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the child at the specified index of the current person.
            </summary>
            <param name="index">The index of the child to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadChild(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the child from the specified relationship of the current person.
            </summary>
            <param name="relationship">The relationship to use for reading the child.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadChildren(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the children of the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonChildrenState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddChild(Gx.Rs.Api.PersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the specified person as a child to the current person.
            </summary>
            <param name="person">The person to add as a child.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if the current person's collection could not be read or produced a client or server error.</exception>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadFirstParent(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the first parent of the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadParent(System.Int32,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the parent at the specified index of the current person.
            </summary>
            <param name="index">The index of the parent to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadParent(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the parent from the specified relationship of the current person.
            </summary>
            <param name="relationship">The relationship to use for reading the parent.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.ReadParents(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the parents of the current person.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonParentsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PersonState.AddParent(Gx.Rs.Api.PersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the specified person as a parent to the current person.
            </summary>
            <param name="person">The person to add as a parent.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if the current person's collection could not be read or produced a client or server error.</exception>
        </member>
        <member name="P:Gx.Rs.Api.PersonState.SelfRel">
            <summary>
            Gets the rel name for the currrent state instance. This is expected to be overridden.
            </summary>
            <value>
            The rel name for the currrent state instance
            </value>
        </member>
        <member name="P:Gx.Rs.Api.PersonState.MainDataElement">
            <summary>
            Gets the main data element represented by this state instance.
            </summary>
            <value>
            The main data element represented by this state instance.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.PersonState.Person">
            <summary>
            Gets the person from the main <see cref="T:Gx.Gedcomx"/> entity.
            </summary>
            <value>
            The person from the main <see cref="T:Gx.Gedcomx"/> entity.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.PersonState.LocalSelfId">
            <summary>
            Gets the current <see cref="P:Person.Id" />.
            </summary>
            <value>
            The current <see cref="P:Person.Id"/>
            </value>
        </member>
        <member name="T:Gx.Rs.Api.PlaceDescriptionsState">
            <summary>
            The PlaceDescriptionsState exposes management functions for place descriptions.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.PlaceDescriptionsState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.PlaceDescriptionsState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.PlaceDescriptionsState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PlaceDescriptionsState.AddPlaceDescription(Gx.Conclusion.PlaceDescription,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a place description to the current collection of place descriptions.
            </summary>
            <param name="place">The place description to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PlaceDescriptionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.PlaceDescriptionsState.ReadCollection(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the collection specified by this state instance.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="P:Gx.Rs.Api.PlaceDescriptionsState.PlaceDescriptions">
            <summary>
            Gets the place descriptions represented by the current state instance from <see cref="P:Gedcomx.Places"/>.
            </summary>
            <value>
            The place descriptions.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.PlaceDescriptionState">
            <summary>
            The PlaceDescriptionState exposes management functions for a place description.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.PlaceDescriptionState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.PlaceDescriptionState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.PlaceDescriptionState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PlaceDescriptionState.ReadChildren(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the children of the current place description.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PlaceDescriptionsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="P:Gx.Rs.Api.PlaceDescriptionState.SelfRel">
            <summary>
            Gets the rel name for the currrent state instance. This is expected to be overridden.
            </summary>
            <value>
            The rel name for the currrent state instance
            </value>
        </member>
        <member name="P:Gx.Rs.Api.PlaceDescriptionState.MainDataElement">
            <summary>
            Gets the main data element represented by this state instance.
            </summary>
            <value>
            The main data element represented by this state instance.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.PlaceDescriptionState.PlaceDescription">
            <summary>
            Gets the first place description represented by the current state instance from <see cref="P:Gedcomx.Places"/>.
            </summary>
            <value>
            The first place description represented by the current state instance from <see cref="P:Gedcomx.Places"/>.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.PlaceGroupState">
            <summary>
            The PlaceGroupState exposes management functions for a place group.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.PlaceGroupState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.PlaceGroupState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.PlaceGroupState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="P:Gx.Rs.Api.PlaceGroupState.SelfRel">
            <summary>
            Gets the rel name for the currrent state instance. This is expected to be overridden.
            </summary>
            <value>
            The rel name for the currrent state instance
            </value>
        </member>
        <member name="P:Gx.Rs.Api.PlaceGroupState.MainDataElement">
            <summary>
            Gets the main data element represented by this state instance.
            </summary>
            <value>
            The main data element represented by this state instance.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.PlaceGroupState.PlaceGroup">
            <summary>
            Gets a list of place descriptions represented by the current place group from <see cref="P:Gedcomx.Places"/>.
            </summary>
            <value>
            A list of place descriptions represented by the current place group from <see cref="P:Gedcomx.Places"/>.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.PlaceSearchResultsState">
            <summary>
            The PlaceSearchResultsState exposes management functions for place search results.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.PlaceSearchResultsState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.PlaceSearchResultsState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.PlaceSearchResultsState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.PlaceSearchResultsState.ReadPlaceDescription(Gx.Atom.Entry,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the place description described by a single entry from the results.
            </summary>
            <param name="place">A place description described by an entry from <see cref="P:Feed.Results"/>.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PlaceDescriptionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="P:Gx.Rs.Api.PlaceSearchResultsState.Results">
            <summary>
            Gets the results of the current search response.
            </summary>
            <value>
            The results of the current search response.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.RecordsState">
            <summary>
            The RecordsState exposes management functions for a collection of records.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.RecordsState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.RecordsState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.RecordsState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.RecordsState.ReadRecord(Gx.Atom.Entry,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the specified record.
            </summary>
            <param name="entry">The entry record to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RecordState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RecordsState.ReadRecord(Gx.Gedcomx,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the Gedcomx record.
            </summary>
            <param name="record">The Gedcomx record to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RecordState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="P:Gx.Rs.Api.RecordsState.Records">
            <summary>
            Gets the set of records represented by this state instance.
            </summary>
            <value>
            The set of records represented by this state instance.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.RecordState">
            <summary>
            The RecordState exposes management functions for a record.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.RecordState.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.RecordState"/> class.
            </summary>
            <param name="uri">The URI where the target resides.</param>
        </member>
        <member name="M:Gx.Rs.Api.RecordState.#ctor(System.Uri,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.RecordState"/> class.
            </summary>
            <param name="uri">The URI where the target resides.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.RecordState.#ctor(System.Uri,Gx.Rs.Api.Util.IFilterableRestClient,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.RecordState"/> class.
            </summary>
            <param name="uri">The URI where the target resides.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.RecordState.#ctor(RestSharp.IRestRequest,Gx.Rs.Api.Util.IFilterableRestClient,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.RecordState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.RecordState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.RecordState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.RecordState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="P:Gx.Rs.Api.RecordState.SelfRel">
            <summary>
            Gets the rel name for the currrent state instance. This is expected to be overridden.
            </summary>
            <value>
            The rel name for the currrent state instance
            </value>
        </member>
        <member name="T:Gx.Rs.Api.Rel">
            <summary>
            A collection of rel links to assist in looking up resource links. See remarks for additional information.
            </summary>
            <remarks>
            When a resource is consumed, it typcially returns a set of hypermedia links that enable additional actions on the resource. While
            resources typically provide links, not all links will be available on a given resource (such as paging links on a person resource).
            The links exposed in this class are a set of predefined constants, which can be used to determine if a link is available on a
            given resource.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Rel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Rel"/> class.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.SELF">
            <summary>
            The link that points to oneself.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.NEXT">
            <summary>
            A link that points to the next item, such as in a collection or result set.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PREV">
            <summary>
            A link that points to the previous item, such as in a collection or result set.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PREVIOUS">
            <summary>
            A link that points to the previous item, such as in a collection or result set.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.FIRST">
            <summary>
            A link that points to the first item, such as in a collection or result set.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.LAST">
            <summary>
            A link that points to the last item, such as in a collection or result set.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.AGENT">
            <summary>
            A link that points to the agent resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.ANCESTRY">
            <summary>
            A link that points to the ancestry resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.ARTIFACTS">
            <summary>
            A link that points to the artifacts resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.CHILDREN">
            <summary>
            A link that points to the children resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.CHILD_RELATIONSHIPS">
            <summary>
            A link that points to the child relationships resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.COLLECTION">
            <summary>
            A link that points to the collection resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.SUBCOLLECTIONS">
            <summary>
            A link that points to the subcollections resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.CONCLUSION">
            <summary>
            A link that points to the conclusion resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.CONCLUSIONS">
            <summary>
            A link that points to the conclusions resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.CURRENT_USER_PERSON">
            <summary>
            A link that points to the current user person resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.CURRENT_USER_RESOURCES">
            <summary>
            A link that points to the current user resources resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.DESCENDANCY">
            <summary>
            A link that points to the descendancy resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.DESCRIPTION">
            <summary>
            A link that points to the description resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.EVIDENCE_REFERENCE">
            <summary>
            A link that points to the evidence reference resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.EVIDENCE_REFERENCES">
            <summary>
            A link that points to the evidence references resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.MATCHES">
            <summary>
            A link that points to the matches resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.MEDIA_REFERENCE">
            <summary>
            A link that points to the media reference resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.MEDIA_REFERENCES">
            <summary>
            A link that points to the media references resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.NOTE">
            <summary>
            A link that points to the note resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.NOTES">
            <summary>
            A link that points to the notes resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.OAUTH2_AUTHORIZE">
            <summary>
            A link that points to the OAuth2 authorization resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.OAUTH2_TOKEN">
            <summary>
            A link that points to the OAuth2 token resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PARENT_RELATIONSHIPS">
            <summary>
            A link that points to the parent relationships resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PARENTS">
            <summary>
            A link that points to the parents resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PERSON1">
            <summary>
            A link that points to the person1 resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PERSON2">
            <summary>
            A link that points to the person2 resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PERSON">
            <summary>
            A link that points to the person resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PERSONS">
            <summary>
            A link that points to the persons resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PERSON_SEARCH">
            <summary>
            A link that points to the person search resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PLACE">
            <summary>
            A link that points to the place resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PLACE_SEARCH">
            <summary>
            A link that points to the place search resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PLACE_TYPE_GROUPS">
            <summary>
            The A link that points to the place type groups resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PLACE_TYPE_GROUP">
            <summary>
            A link that points to the place type group resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PLACE_TYPES">
            <summary>
            A link that points to the place types resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PLACE_TYPE">
            <summary>
            A link that points to the place type resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PLACE_GROUP">
            <summary>
            A link that points to the place group resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PLACE_DESCRIPTION">
            <summary>
            A link that points to the place description resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.PROFILE">
            <summary>
            A link that points to the profile resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.RECORD">
            <summary>
            A link that points to the record resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.RECORDS">
            <summary>
            A link that points to the records resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.RELATIONSHIP">
            <summary>
            A link that points to the relationship resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.RELATIONSHIPS">
            <summary>
            A link that points to the relationships resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.SOURCE_DESCRIPTIONS">
            <summary>
            A link that points to the source descriptions resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.SOURCE_REFERENCE">
            <summary>
            A link that points to the source reference resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.SOURCE_REFERENCES">
            <summary>
            A link that points to the source references resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.SOURCE_REFERENCES_QUERY">
            <summary>
            A link that points to the source references query resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.SPOUSES">
            <summary>
            A link that points to the spouses resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.SPOUSE_RELATIONSHIPS">
            <summary>
            A link that points to the spouse relationships resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.DISCUSSION_REFERENCE">
            <summary>
            A link that points to the discussion reference resource.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Rel.DISCUSSION_REFERENCES">
            <summary>
            A link that points to the discussion references resource.
            </summary>
        </member>
        <member name="T:Gx.Rs.Api.RelationshipsState">
            <summary>
            The RelationshipsState exposes management functions for a relationships collection.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipsState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.RelationshipsState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipsState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipsState.ReadCollection(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the collection specified by this state instance.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipsState.AddSpouseRelationship(Gx.Rs.Api.PersonState,Gx.Rs.Api.PersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Creates a spouse relationship between the two specified persons.
            </summary>
            <param name="person1">A person to be the husband. See remarks.</param>
            <param name="person2">A person to be the wife. See remarks.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <remarks>
            The person1 parameter does not have to be the husband, it could be the wife; however, person2 must be the opposite. So if you specify a hasband for person1
            then person2 must be the wife. Conversely, if you specify a wife for person1 then person2 must be the husband.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipsState.AddParentChildRelationship(Gx.Rs.Api.PersonState,Gx.Rs.Api.PersonState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Creates a parent child relationship for the specified persons.
            </summary>
            <param name="parent">The <see cref="T:Gx.Rs.Api.PersonState"/> representing the parent for the new relationship.</param>
            <param name="child">The <see cref="T:Gx.Rs.Api.PersonState"/> representing the child for the new relationship.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipsState.AddRelationship(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Creates a relationship between the persons specified in the relationship parameter.
            </summary>
            <param name="relationship">This specifies the persons and relationship type to create.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="P:Gx.Rs.Api.RelationshipsState.Relationships">
            <summary>
            Gets the relationships represented by the current collection from <see cref="P:Gedcomx.Relationships"/>.
            </summary>
            <value>
            The relationships represented by the current collection from <see cref="P:Gedcomx.Relationships"/>.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.RelationshipState">
            <summary>
            The RelationshipState exposes management functions for a relationship.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.RelationshipState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.ReadCollection(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the collection specified by this state instance.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.ReadPerson1(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the person1 specified by this relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.ReadPerson2(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the person2 specified by this relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.LoadEmbeddedResources(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads all embedded resources for which the current Gedcomx has links.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.LoadEmbeddedResources(System.String[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads the embedded resources for the specified links.
            </summary>
            <param name="rels">The array of link names for which the current Gedcomx will be queried, and loaded if the links are present.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.LoadConclusions(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads conclusions for the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.LoadSourceReferences(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads source references for the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.LoadMediaReferences(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads media references for the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.LoadEvidenceReferences(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads evidence references for the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.LoadNotes(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Loads notes for the current relationship.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.CreateEmptySelf">
            <summary>
            Instantiates a new <see cref="P:Gx.Rs.Api.RelationshipState.Relationship"/> and only sets the <see cref="P:Relationship.Id"/> to the current relationship's ID.
            </summary>
            <returns>A new <see cref="P:Gx.Rs.Api.RelationshipState.Relationship"/> with a matching relationship ID for the current relationship ID.</returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.AddFact(Gx.Conclusion.Fact,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a fact to the current relationship.
            </summary>
            <param name="fact">The fact to be added.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.AddFacts(Gx.Conclusion.Fact[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds facts to the current relationship.
            </summary>
            <param name="facts">The facts to be added.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.UpdateFact(Gx.Conclusion.Fact,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the fact of the current relationship.
            </summary>
            <param name="fact">The fact to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.UpdateFacts(Gx.Conclusion.Fact[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the facts of the current relationship.
            </summary>
            <param name="facts">The facts to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.UpdateConclusions(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the conclusions of the specified <see cref="P:Gx.Rs.Api.RelationshipState.Relationship"/>.
            </summary>
            <param name="relationship">The relationship with conclusions that will be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.DeleteFact(Gx.Conclusion.Fact,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the fact of the current relationship.
            </summary>
            <param name="fact">The fact to delete.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.AddSourceReference(Gx.Rs.Api.SourceDescriptionState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the specified source reference (in the <see cref="T:Gx.Rs.Api.SourceDescriptionState"/>) to the current relationship.
            </summary>
            <param name="source">The source reference to be added.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.AddSourceReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the specified source reference to the current relationship.
            </summary>
            <param name="reference">The source reference to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.AddSourceReferences(Gx.Source.SourceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the specified source references to the current relationship.
            </summary>
            <param name="refs">The source references to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.UpdateSourceReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified source reference for the current relationship.
            </summary>
            <param name="reference">The source reference to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.UpdateSourceReferences(Gx.Source.SourceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified source references for the current relationship.
            </summary>
            <param name="refs">The source references to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.UpdateSourceReferences(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the source references for the specified relationship.
            </summary>
            <param name="relationship">The relationship with source references to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.DeleteSourceReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the specified source reference from the current relationship.
            </summary>
            <param name="reference">The source reference to delete.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.AddMediaReference(Gx.Rs.Api.SourceDescriptionState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a media reference to the current relationship.
            </summary>
            <param name="description">The <see cref="T:Gx.Rs.Api.SourceDescriptionState"/> that represents the media reference to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.AddMediaReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a media reference to the current relationship.
            </summary>
            <param name="reference">The <see cref="P:Gx.Rs.Api.RelationshipState.SourceReference"/> that is a media reference to be added.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.AddMediaReferences(Gx.Source.SourceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds media references to the current relationship.
            </summary>
            <param name="refs">The array of source references that are media references to be added.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.UpdateMediaReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the media reference for the current relationship.
            </summary>
            <param name="reference">The source reference to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.UpdateMediaReferences(Gx.Source.SourceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the media references for the current relationship.
            </summary>
            <param name="refs">The source references to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.UpdateMediaReferences(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the media references of the specified relationship.
            </summary>
            <param name="relationship">The relationship with media references that will be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.DeleteMediaReference(Gx.Source.SourceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the specified media reference from the current relationship.
            </summary>
            <param name="reference">The source reference to be deleted.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.AddEvidenceReference(Gx.Rs.Api.RelationshipState,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds an evidence reference to the current relationship.
            </summary>
            <param name="evidence">The evidence reference to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.AddEvidenceReference(Gx.Common.EvidenceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds an evidence reference to the current relationship.
            </summary>
            <param name="reference">The evidence reference to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.AddEvidenceReferences(Gx.Common.EvidenceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds the evidence references to the current relationship.
            </summary>
            <param name="refs">The evidence references to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.UpdateEvidenceReference(Gx.Common.EvidenceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Update the evidence reference for the current relationship.
            </summary>
            <param name="reference">The evidence reference to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.UpdateEvidenceReferences(Gx.Common.EvidenceReference[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the evidence references for the current relationship.
            </summary>
            <param name="refs">The evidence references to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.UpdateEvidenceReferences(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the evidence references for the specified relationship.
            </summary>
            <param name="relationship">The relationship with evidence references to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.DeleteEvidenceReference(Gx.Common.EvidenceReference,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Deletes the evidence reference from the current relationship.
            </summary>
            <param name="reference">The evidence reference to delete.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.ReadNote(Gx.Common.Note,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the specified note.
            </summary>
            <param name="note">The note to read.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.AddNote(Gx.Common.Note,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a note to the current relationship.
            </summary>
            <param name="note">The note to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.AddNotes(Gx.Common.Note[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Add the notes to the current relationship.
            </summary>
            <param name="notes">The notes to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.UpdateNote(Gx.Common.Note,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified note for the current relationship.
            </summary>
            <param name="note">The note to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.UpdateNotes(Gx.Common.Note[],Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Update the specified notes for the current relationship.
            </summary>
            <param name="notes">The notes to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.UpdateNotes(Gx.Conclusion.Relationship,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Update the notes on the specified relationship.
            </summary>
            <param name="relationship">The relationship with the notes to be updated.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.RelationshipState.DeleteNote(Gx.Common.Note,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Delete the specified note from the current relationship.
            </summary>
            <param name="note">The note to be deleted.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
            <exception cref="T:Gx.Rs.Api.GedcomxApplicationException">Thrown if this collection does not have a link to the resource.</exception>
        </member>
        <member name="P:Gx.Rs.Api.RelationshipState.SelfRel">
            <summary>
            Gets the rel name for the currrent state instance. This is expected to be overridden.
            </summary>
            <value>
            The rel name for the currrent state instance
            </value>
        </member>
        <member name="P:Gx.Rs.Api.RelationshipState.MainDataElement">
            <summary>
            Gets the main data element represented by this state instance.
            </summary>
            <value>
            The main data element represented by this state instance.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.RelationshipState.Relationship">
            <summary>
            Gets the first <see cref="P:Gx.Rs.Api.RelationshipState.Relationship"/> of the current <see cref="P:Gedcomx.Reltionships"/>.
            </summary>
            <value>
            The first <see cref="P:Gx.Rs.Api.RelationshipState.Relationship"/> of the current <see cref="P:Gedcomx.Reltionships"/>.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.RelationshipState.Conclusion">
            <summary>
            Gets the <see cref="P:Gx.Rs.Api.RelationshipState.Fact"/>, which is a conclusion. This is simply another property for <see cref="P:Gx.Rs.Api.RelationshipState.Fact"/>.
            </summary>
            <value>
            The <see cref="P:Gx.Rs.Api.RelationshipState.Fact"/>, which is a conclusion.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.RelationshipState.Fact">
            <summary>
            Gets the first fact from <see cref="P:Relationship.Fact"/>.
            </summary>
            <value>
            The first fact from <see cref="P:Relationship.Fact"/>.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.RelationshipState.Note">
            <summary>
            Gets the first note from <see cref="P:Relationship.Notes"/>.
            </summary>
            <value>
            The first note from <see cref="P:Relationship.Notes"/>.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.RelationshipState.SourceReference">
            <summary>
            Gets the first source reference from <see cref="P:Relationship.Sources"/>.
            </summary>
            <value>
            The first source reference from <see cref="P:Relationship.Sources"/>.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.RelationshipState.EvidenceReference">
            <summary>
            Gets the first evidence reference from <see cref="P:Relationship.Evidence"/>.
            </summary>
            <value>
            The first evidence reference from <see cref="P:Relationship.Evidence"/>.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.RelationshipState.MediaReference">
            <summary>
            Gets the first media reference from <see cref="P:Relationship.Media"/>.
            </summary>
            <value>
            The first media reference from <see cref="P:Relationship.Media"/>.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.RelationshipState.LocalSelfId">
            <summary>
            Gets the current <see cref="P:Relationship.Id"/>.
            </summary>
            <value>
            The current <see cref="P:Relationship.Id"/>
            </value>
        </member>
        <member name="T:Gx.Rs.Api.SourceDescriptionsState">
            <summary>
            The SourceDescriptionsState exposes management functions for a collection of source descriptions.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.SourceDescriptionsState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.SourceDescriptionsState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.SourceDescriptionsState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.SourceDescriptionsState.AddSourceDescription(Gx.Source.SourceDescription,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a source description the current collection of source descriptions.
            </summary>
            <param name="source">The source description to add.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.SourceDescriptionsState.ReadCollection(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the collection specified by this state instance.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="P:Gx.Rs.Api.SourceDescriptionsState.SourceDescriptions">
            <summary>
            Gets the source descriptions represented by this current state instance.
            </summary>
            <value>
            The source descriptions represented by this current state instance.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.SourceDescriptionState">
            <summary>
            The SourceDescriptionState exposes management functions for a source description.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.SourceDescriptionState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.SourceDescriptionState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.SourceDescriptionState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.SourceDescriptionState.Update(Gx.Source.SourceDescription,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Updates the specified source description.
            </summary>
            <param name="description">The source description to update.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.SourceDescriptionState.ReadPersonas(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Read personas associated with the current source description.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.SourceDescriptionState.AddPersona(Gx.Conclusion.Person,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a persona to the current source description.
            </summary>
            <param name="person">The person to associate with the current source description.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.SourceDescriptionState.AddPersona(Gx.Gedcomx,Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Adds a persona to the current source description.
            </summary>
            <param name="entity">The Gedcomx entity with a person to associate with the current source description.</param>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.SourceDescriptionState.QueryAttachedReferences(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Queries for attached references to this source description.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.SourceDescriptionState.ReadCollection(Gx.Rs.Api.StateTransitionOption[])">
            <summary>
            Reads the collection specified by this state instance.
            </summary>
            <param name="options">The options to apply before executing the REST API call.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="P:Gx.Rs.Api.SourceDescriptionState.SelfRel">
            <summary>
            Gets the rel name for the currrent state instance. This is expected to be overridden.
            </summary>
            <value>
            The rel name for the currrent state instance
            </value>
        </member>
        <member name="P:Gx.Rs.Api.SourceDescriptionState.MainDataElement">
            <summary>
            Gets the main data element represented by this state instance.
            </summary>
            <value>
            The main data element represented by this state instance.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.SourceDescriptionState.SourceDescription">
            <summary>
            Gets the source description represented by this state instance.
            </summary>
            <value>
            The source description represented by this state instance.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.StateFactory">
            <summary>
            The state factory is responsible for instantiating state classes from REST API responses.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.StateFactory.ENABLE_LOG4NET_LOGGING_ENV_NAME">
            <summary>
            This the environment variable to use at runtime to determine if REST API request logging will occur.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewCollectionState(System.Uri)">
            <summary>
            Returns a new collection state by invoking the specified URI.
            </summary>
            <param name="discoveryUri">The URI where the target resides.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewCollectionState(System.Uri,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Returns a new collection state by invoking the specified URI using the specified client.
            </summary>
            <param name="discoveryUri">The URI where the target resides.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewCollectionState(System.Uri,Gx.Rs.Api.Util.IFilterableRestClient,RestSharp.Method)">
            <summary>
            Returns a new collection state by invoking the specified URI using the specified client and forcing the specific HTTP verb.
            </summary>
            <param name="discoveryUri">The URI where the target resides.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="method">The HTTP verb to use for invoking the discovery URI.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewPersonState(System.Uri)">
            <summary>
            Returns a new person state by invoking the specified URI.
            </summary>
            <param name="discoveryUri">The URI where the target resides.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewPersonState(System.Uri,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Returns a new person state by invoking the specified URI using the specified client.
            </summary>
            <param name="discoveryUri">The URI where the target resides.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewPersonState(System.Uri,Gx.Rs.Api.Util.IFilterableRestClient,RestSharp.Method)">
            <summary>
            Returns a new person state by invoking the specified URI using the specified client and forcing the specific HTTP verb.
            </summary>
            <param name="discoveryUri">The URI where the target resides.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="method">The HTTP verb to use for invoking the discovery URI.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewRecordState(System.Uri)">
            <summary>
            Returns a new record state by invoking the specified URI.
            </summary>
            <param name="discoveryUri">The URI where the target resides.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RecordState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewRecordState(System.Uri,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Returns a new record state by invoking the specified URI using the specified client.
            </summary>
            <param name="discoveryUri">The URI where the target resides.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RecordState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewRecordState(System.Uri,Gx.Rs.Api.Util.IFilterableRestClient,RestSharp.Method)">
            <summary>
            Returns a new record state by invoking the specified URI using the specified client and forcing the specific HTTP verb.
            </summary>
            <param name="discoveryUri">The URI where the target resides.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="method">The HTTP verb to use for invoking the discovery URI.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RecordState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.LoadDefaultClient(System.Uri)">
            <summary>
            Loads the default client for executing REST API requests.
            </summary>
            <param name="uri">The base URI for all future REST API requests to use with this client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.IFilterableRestClient"/> with the default configuration and filters.</returns>
            <remarks>REST API request logging is disabled by default. To enable logging of REST API requests, set the environment variable
            "enableLog4NetLogging" to "True" within the scope of the execution context (or a greater scope). The environment variable will
            be evaluated only once and only during this method. After the client has been created using this method, the environment variable
            will not enable or disable client request logging.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewAgentState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new agent state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.AgentState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewAncestryResultsState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new ancestry results state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.AncestryResultsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewCollectionsState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new collections state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewCollectionState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new collection state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.CollectionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewDescendancyResultsState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new descendancy state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.DescendancyResultsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewPersonChildrenState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new person children state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonChildrenState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewPersonParentsState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new person parents state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonParentsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewPersonSearchResultsState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new person search results state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonSearchResultsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewPlaceSearchResultsState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new place search results state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PlaceSearchResultsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewPlaceDescriptionState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new place description state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PlaceDescriptionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewPlaceDescriptionsState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new place descriptions state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PlaceDescriptionsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewPlaceGroupState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new place group state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PlaceGroupState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewVocabElementState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new vocab element state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.VocabElementState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewVocabElementListState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new vocab element list state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.VocabElementListState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewPersonSpousesState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new person spouses state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonSpousesState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewPersonsState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new persons state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewPersonState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new person state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.PersonState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewRecordsState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new records state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RecordsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewRecordState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new record state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RecordState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewRelationshipsState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new relationships state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewRelationshipState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new relationship state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.RelationshipState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewSourceDescriptionsState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new source descriptions state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionsState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.StateFactory.NewSourceDescriptionState(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Creates a new source description state from the specified parameters. Since a response is provided as a parameter, a REST API request will not be invoked.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.SourceDescriptionState"/> instance containing the REST API response.
            </returns>
        </member>
        <member name="T:Gx.Rs.Api.Util.AncestryTree">
            <summary>
            A model representation of ancestry.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.AncestryTree.#ctor(Gx.Gedcomx)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Util.AncestryTree"/> class.
            </summary>
            <param name="gx">The input model for which an ancestry model will be built.</param>
        </member>
        <member name="M:Gx.Rs.Api.Util.AncestryTree.BuildArray(Gx.Gedcomx)">
            <summary>
            Builds an array of persons to be placed in the ancestry tree.
            </summary>
            <param name="gx">The input model for which the array of persons will be parsed and analyzed.</param>
            <returns>An array of persons to be placed in the ancestry tree.</returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.AncestryTree.GetAncestor(System.Int32)">
            <summary>
            Gets an ancestor from the ancestry tree at the specified index.
            </summary>
            <param name="number">The parsed ahnen number of the person within the ancestry tree, which is used internally as a one-based index number. See remarks.</param>
            <returns>An ancestor node from the current tree, or null if the index is out of range.</returns>
            <remarks>
            Information on the ahnen number can be found here: http://en.wikipedia.org/wiki/Ahnentafel.
            </remarks>
        </member>
        <member name="P:Gx.Rs.Api.Util.AncestryTree.Root">
            <summary>
            Gets the root person of the ancestry tree.
            </summary>
            <value>
            The root person of the ancestry tree.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.Util.AncestryTree.AncestryNode">
            <summary>
            Represents an ancestor within an ancestry tree.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.AncestryTree.AncestryNode.#ctor(Gx.Rs.Api.Util.AncestryTree,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Util.AncestryTree.AncestryNode"/> class.
            </summary>
            <param name="tree">The ancestry tree in which this person belongs.</param>
            <param name="number">The one-based index number of where this person is in the specified tree. See remarks.</param>
            <remarks>
            When calling this constructor, the number parameter is one-based, but the tree indexing is zero-based, and the difference is adjusted automatically.
            </remarks>
        </member>
        <member name="P:Gx.Rs.Api.Util.AncestryTree.AncestryNode.Person">
            <summary>
            Gets the current person this node represents.
            </summary>
            <value>
            The current person this node represents.
            </value>
            <remarks>
            This is simply the person in the tree at the index specified in the constructor.
            </remarks>
        </member>
        <member name="P:Gx.Rs.Api.Util.AncestryTree.AncestryNode.Father">
            <summary>
            Gets the father of the person represented by this node.
            </summary>
            <value>
            The father of the person represented by this node.
            </value>
            <remarks>
            The actual index of the father will be the index of the current person multiplied by 2.
            </remarks>
        </member>
        <member name="P:Gx.Rs.Api.Util.AncestryTree.AncestryNode.Mother">
            <summary>
            Gets the mother of the person represented by this node.
            </summary>
            <value>
            The mother of the person represented by this node.
            </value>
            <remarks>
            The actual index of the mother will be the index of the current person multiplied by 2 plus 1.
            </remarks>
        </member>
        <member name="T:Gx.Rs.Api.Util.BasicDataSource">
            <summary>
            Provides a simple implementation of the <see cref="T:Gx.Rs.Api.Util.DataSource"/> interface.
            </summary>
        </member>
        <member name="T:Gx.Rs.Api.Util.DataSource">
            <summary>
            An interface for using various data sources with the artifacts and memories API.
            </summary>
        </member>
        <member name="P:Gx.Rs.Api.Util.DataSource.InputStream">
            <summary>
            When overridden this gets the input stream of the target data source.
            </summary>
            <value>
            When overridden this is the input stream of the target data source.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.DataSource.ContentType">
            <summary>
            When overridden this gets the content type of the target data source.
            </summary>
            <value>
            When overridden this is the content type of the target data source.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.DataSource.Name">
            <summary>
            When overridden this gets the name of the data source.
            </summary>
            <value>
            When overridden this is the name of the data source.
            </value>
        </member>
        <member name="M:Gx.Rs.Api.Util.BasicDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Util.BasicDataSource"/> class.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.BasicDataSource.#ctor(System.String,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Util.BasicDataSource"/> class.
            </summary>
            <param name="name">The name of the data source.</param>
            <param name="contentType">The content-type of the data source.</param>
            <param name="bytes">The byte array of data for this data source.</param>
        </member>
        <member name="M:Gx.Rs.Api.Util.BasicDataSource.#ctor(System.String,System.String,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Util.BasicDataSource"/> class.
            </summary>
            <param name="name">The name of the data source.</param>
            <param name="contentType">The content-type of the data source.</param>
            <param name="stream">The stream for this data source.</param>
        </member>
        <member name="M:Gx.Rs.Api.Util.BasicDataSource.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Gx.Rs.Api.Util.BasicDataSource.InputStream">
            <summary>
            Gets the input stream of the target data source.
            </summary>
            <value>
            The input stream of the target data source.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.BasicDataSource.ContentType">
            <summary>
            Gets the content type of the target data source.
            </summary>
            <value>
            The content type of the target data source.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.BasicDataSource.Name">
            <summary>
            Gets the name of the data source.
            </summary>
            <value>
            The name of the data source.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.Util.DescendancyTree">
            <summary>
            A model representation of descendancy.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.DescendancyTree.#ctor(Gx.Gedcomx)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Util.DescendancyTree"/> class.
            </summary>
            <param name="gx">The input model for which a descendancy model will be built.</param>
        </member>
        <member name="M:Gx.Rs.Api.Util.DescendancyTree.BuildTree(Gx.Gedcomx)">
            <summary>
            Builds an array of persons to be placed in the descendancy tree.
            </summary>
            <param name="gx">The input model for which the array of persons will be parsed and analyzed.</param>
            <returns>An array of persons to be placed in the descendancy tree.</returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.DescendancyTree.ParseCoordinates(System.String)">
            <summary>
            Parses the coordinates of the specified d'Aboville number. See remarks.
            </summary>
            <param name="number">The d'Aboville number number. See remarks.</param>
            <returns></returns>
            <remarks>
            More information on a d'Aboville number can be found here: http://en.wikipedia.org/wiki/Genealogical_numbering_system#d.27Aboville_System.
            </remarks>
        </member>
        <member name="P:Gx.Rs.Api.Util.DescendancyTree.Root">
            <summary>
            Gets the root person of the descendancy tree.
            </summary>
            <value>
            The root person of the descendancy tree.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.Util.DescendancyTree.DescendancyNode">
            <summary>
            Represents a person, spouse, and descendancy in a tree.
            </summary>
        </member>
        <member name="P:Gx.Rs.Api.Util.DescendancyTree.DescendancyNode.Person">
            <summary>
            Gets or sets the main person of a tree.
            </summary>
            <value>
            The main person of a tree.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.DescendancyTree.DescendancyNode.Spouse">
            <summary>
            Gets or sets the spouse of the main person.
            </summary>
            <value>
            The spouse of the main person.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.DescendancyTree.DescendancyNode.Children">
            <summary>
            Gets or sets the children of the main person
            </summary>
            <value>
            The children of the main person
            </value>
        </member>
        <member name="T:Gx.Rs.Api.Util.EmbeddedLinkLoader">
            <summary>
            This class extracts specific links from <see cref="P:Gedcomx.Persons"/> and <see cref="P:Gedcomx.Relationships"/>. Each of these are lists of instances
            that derive from <see cref="C:Gedcomx.Model.SupportsLinks"/>, thus the links are pulled directly from <see cref="P:SupportsLinks.Links"/>.
            </summary>
            <remarks>
            It is important to note that not all links will be extracted. Only the following will be extracted by default:
            <list type="ul">
                <item>CHILD_RELATIONSHIPS</item>
                <item>CONCLUSIONS</item>
                <item>EVIDENCE_REFERENCES</item>
                <item>MEDIA_REFERENCES</item>
                <item>NOTES</item>
                <item>PARENT_RELATIONSHIPS</item>
                <item>SOURCE_REFERENCES</item>
                <item>SPOUSE_RELATIONSHIPS</item>
            </list>
            </remarks>
        </member>
        <member name="F:Gx.Rs.Api.Util.EmbeddedLinkLoader.DEFAULT_EMBEDDED_LINK_RELS">
            <summary>
            The list of embedded links to extract by default. See remarks.
            </summary>
            <remarks>
            Only the following will be extracted by default:
            <list type="ul">
                <item>CHILD_RELATIONSHIPS</item>
                <item>CONCLUSIONS</item>
                <item>EVIDENCE_REFERENCES</item>
                <item>MEDIA_REFERENCES</item>
                <item>NOTES</item>
                <item>PARENT_RELATIONSHIPS</item>
                <item>SOURCE_REFERENCES</item>
                <item>SPOUSE_RELATIONSHIPS</item>
            </list>
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Util.EmbeddedLinkLoader.LoadEmbeddedLinks(Gx.Gedcomx)">
            <summary>
            Loads the list of links as specified in <see cref="P:Gx.Rs.Api.Util.EmbeddedLinkLoader.EmbeddedLinkRels"/> from the specified <see cref="T:Gx.Gedcomx"/>.
            </summary>
            <param name="entity">The <see cref="T:Gx.Gedcomx"/> entity from which links will be extracted. See remarks.</param>
            <returns></returns>
            <remarks>
            Not all objects with <see cref="C:Gedcomx.Model.SupportsLinks"/> will be evaluated. Only <see cref="P:Gedcomx.Perons"/> and
            <see cref="P:Gedcomx.Relationships"/> will be considered.
            </remarks>
        </member>
        <member name="P:Gx.Rs.Api.Util.EmbeddedLinkLoader.EmbeddedLinkRels">
            <summary>
            Gets the list of embedded links that will be extracted when <see cref="M:Gx.Rs.Api.Util.EmbeddedLinkLoader.LoadEmbeddedLinks(Gx.Gedcomx)"/> is called.
            </summary>
            <value>
            The list of embedded links that will be extracted when <see cref="M:Gx.Rs.Api.Util.EmbeddedLinkLoader.LoadEmbeddedLinks(Gx.Gedcomx)"/> is called.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.Util.FileDataSource">
            <summary>
            Provide a simple implementation of <see cref="T:Gx.Rs.Api.Util.DataSource"/> for files.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.FileDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Util.FileDataSource"/> class.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.FileDataSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Util.FileDataSource"/> class.
            </summary>
            <param name="file">The file to be represented by this instance.</param>
        </member>
        <member name="M:Gx.Rs.Api.Util.FileDataSource.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Gx.Rs.Api.Util.FileDataSource.InputStream">
            <summary>
            Gets the input stream of the file specified during instantiation.
            </summary>
            <value>
            The input stream of the file specified during instantiation.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.FileDataSource.ContentType">
            <summary>
            Content-type is not yet supported for the file data source.
            </summary>
            <value>
            Content-type is not yet supported for the file data source.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.FileDataSource.Name">
            <summary>
            Gets the name of the data source.
            </summary>
            <value>
            The name of the data source.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.Util.GedcomxBaseSearchQueryBuilder">
            <summary>
            This is the base search query builder class and provides helper functions for building syntactically correct search query strings.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxBaseSearchQueryBuilder.parameters">
            <summary>
            The list of search parameters this builder will use.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxBaseSearchQueryBuilder.Build">
            <summary>
            Builds the query string to use for searching.
            </summary>
            <returns>The query string to use for searching.</returns>
        </member>
        <member name="T:Gx.Rs.Api.Util.GedcomxBaseSearchQueryBuilder.SearchParameter">
            <summary>
            Represents a generic search parameter.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxBaseSearchQueryBuilder.SearchParameter.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Util.GedcomxBaseSearchQueryBuilder.SearchParameter"/> class.
            </summary>
            <param name="prefix">The prefix to apply to the search parameter. This is used for controlling whether a parameter is required or not. See remarks.</param>
            <param name="name">The name of the search parameter.</param>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <exception cref="T:System.NullReferenceException">Thrown if the <c>name</c> parameter is null.</exception>
            <remarks>
            The prefix parameter can take on three forms:
                "+": The parameter search value should be found in the search results
                null: The parameter search filter is optional
                "-": The parameter search value should not found in the search results (i.e., perform a NOT seaarch)
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxBaseSearchQueryBuilder.SearchParameter.ToString">
            <summary>
            Returns a string that is a syntactically conformant search query that can be used in REST API search requests.
            </summary>
            <returns>
            A string string that is a syntactically conformant search query that can be used in REST API search requests.
            </returns>
        </member>
        <member name="P:Gx.Rs.Api.Util.GedcomxBaseSearchQueryBuilder.SearchParameter.Prefix">
            <summary>
            Gets the prefix to apply to the search parameter. This is used for controlling whether a parameter is required or not. See remarks.
            </summary>
            <value>
            The prefix to apply to the search parameter. This is used for controlling whether a parameter is required or not. See remarks.
            </value>
            <remarks>
            The prefix can take on three forms:
                "+": The parameter search value should be found in the search results
                null: The parameter search filter is optional
                "-": The parameter search value should not found in the search results (i.e., perform a NOT seaarch)
            </remarks>
        </member>
        <member name="P:Gx.Rs.Api.Util.GedcomxBaseSearchQueryBuilder.SearchParameter.Name">
            <summary>
            Gets the name of the current search parameter..
            </summary>
            <value>
            The name of the current search parameter..
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.GedcomxBaseSearchQueryBuilder.SearchParameter.Value">
            <summary>
            Gets the value of the current search parameter..
            </summary>
            <value>
            The value of the current search parameter..
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.GedcomxBaseSearchQueryBuilder.SearchParameter.IsExact">
            <summary>
            Gets a value indicating whether the current search parameter requires exact value match results. See remarks.
            </summary>
            <value>
            A value indicating whether the current search parameter requires exact value match results. See remarks.
            </value>
            <remarks>
            If this value is <c>true</c>, search results will only return values that exactly match the search parameter value.
            </remarks>
        </member>
        <member name="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder">
            <summary>
            This is a helper utility for building syntactically correct person search query strings.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.NAME">
            <summary>
            The name parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.GIVEN_NAME">
            <summary>
            The given name parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SURNAME">
            <summary>
            The surname parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.GENDER">
            <summary>
            The gender parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.BIRTH_DATE">
            <summary>
            The birth date parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.BIRTH_PLACE">
            <summary>
            The birth place parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.DEATH_DATE">
            <summary>
            The death date parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.DEATH_PLACE">
            <summary>
            The death place parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MARRIAGE_DATE">
            <summary>
            The marriage date parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MARRIAGE_PLACE">
            <summary>
            The marriage place parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FATHER_NAME">
            <summary>
            The father name parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FATHER_GIVEN_NAME">
            <summary>
            The father given name parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FATHER_SURNAME">
            <summary>
            The father surname parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FATHER_GENDER">
            <summary>
            The father gender parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FATHER_BIRTH_DATE">
            <summary>
            The father birth date parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FATHER_BIRTH_PLACE">
            <summary>
            The father birth place parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FATHER_DEATH_DATE">
            <summary>
            The father death date parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FATHER_DEATH_PLACE">
            <summary>
            The father death place parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FATHER_MARRIAGE_DATE">
            <summary>
            The father marriage date parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FATHER_MARRIAGE_PLACE">
            <summary>
            The father marriage place parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MOTHER_NAME">
            <summary>
            The mother name parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MOTHER_GIVEN_NAME">
            <summary>
            The mother given name parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MOTHER_SURNAME">
            <summary>
            The mother surname parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MOTHER_GENDER">
            <summary>
            The mother gender parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MOTHER_BIRTH_DATE">
            <summary>
            The mother birth date parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MOTHER_BIRTH_PLACE">
            <summary>
            The mother birth place parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MOTHER_DEATH_DATE">
            <summary>
            The mother death date parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MOTHER_DEATH_PLACE">
            <summary>
            The mother death place parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MOTHER_MARRIAGE_DATE">
            <summary>
            The mother marriage date parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MOTHER_MARRIAGE_PLACE">
            <summary>
            The mother marriage place parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SPOUSE_NAME">
            <summary>
            The spouse name parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SPOUSE_GIVEN_NAME">
            <summary>
            The spouse given name parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SPOUSE_SURNAME">
            <summary>
            The spouse surname parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SPOUSE_GENDER">
            <summary>
            The spouse gender parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SPOUSE_BIRTH_DATE">
            <summary>
            The spouse birth date parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SPOUSE_BIRTH_PLACE">
            <summary>
            The spouse birth place parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SPOUSE_DEATH_DATE">
            <summary>
            The spouse death date parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SPOUSE_DEATH_PLACE">
            <summary>
            The spouse death place parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SPOUSE_MARRIAGE_DATE">
            <summary>
            The spouse marriage date parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SPOUSE_MARRIAGE_PLACE">
            <summary>
            The spouse marriage place parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.PARENT_NAME">
            <summary>
            The parent name parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.PARENT_GIVEN_NAME">
            <summary>
            The parent given name parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.PARENT_SURNAME">
            <summary>
            The parent surname parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.PARENT_GENDER">
            <summary>
            The parent gender parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.PARENT_BIRTH_DATE">
            <summary>
            The parent birth date parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.PARENT_BIRTH_PLACE">
            <summary>
            The parent birth place parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.PARENT_DEATH_DATE">
            <summary>
            The parent death date parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.PARENT_DEATH_PLACE">
            <summary>
            The parent death place parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.PARENT_MARRIAGE_DATE">
            <summary>
            The parent marriage date parameter in person search queries
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.PARENT_MARRIAGE_PLACE">
            <summary>
            The parent marriage place parameter in person search queries
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.Param(System.String,System.String)">
            <summary>
            Creates a generic search parameter with the specified name and value.
            </summary>
            <param name="name">The name of the search parameter.</param>
            <param name="value">The value of the search parameter.</param>
            <returns>A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.</returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.Param(System.String,System.String,System.Boolean)">
            <summary>
            Creates a generic search parameter with the specified name and value.
            </summary>
            <param name="name">The name of the search parameter.</param>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.Param(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a generic search parameter with the specified name and value.
            </summary>
            <param name="prefix">The prefix to apply to the search parameter. This is used for controlling whether a parameter is required or not. See remarks.</param>
            <param name="name">The name of the search parameter.</param>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
            <remarks>
            The prefix parameter can take on three forms:
                "+": The parameter search value should be found in the search results
                null: The parameter search filter is optional
                "-": The parameter search value should not found in the search results (i.e., perform a NOT seaarch)
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.Name(System.String)">
            <summary>
            Creates a name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.Name(System.String,System.Boolean)">
            <summary>
            Creates a name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.Name(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.GivenName(System.String)">
            <summary>
            Creates a given name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.GivenName(System.String,System.Boolean)">
            <summary>
            Creates a given name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.GivenName(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a given name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.Surname(System.String)">
            <summary>
            Creates a surname search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.Surname(System.String,System.Boolean)">
            <summary>
            Creates a surname search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.Surname(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a surname search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.Gender(System.String)">
            <summary>
            Creates a gender search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.Gender(System.String,System.Boolean)">
            <summary>
            Creates a gender search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.Gender(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a gender search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.BirthDate(System.String)">
            <summary>
            Creates a birth date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.BirthDate(System.String,System.Boolean)">
            <summary>
            Creates a birth date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.BirthDate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a birth date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.BirthPlace(System.String)">
            <summary>
            Creates a birth place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.BirthPlace(System.String,System.Boolean)">
            <summary>
            Creates a birth place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.BirthPlace(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a birth place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.DeathDate(System.String)">
            <summary>
            Creates a death date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.DeathDate(System.String,System.Boolean)">
            <summary>
            Creates a death date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.DeathDate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a death date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.DeathPlace(System.String)">
            <summary>
            Creates a death place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.DeathPlace(System.String,System.Boolean)">
            <summary>
            Creates a death place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.DeathPlace(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a death place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MarriageDate(System.String)">
            <summary>
            Creates a marriage date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MarriageDate(System.String,System.Boolean)">
            <summary>
            Creates a marriage date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MarriageDate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a marriage date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MarriagePlace(System.String)">
            <summary>
            Creates a marriage place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MarriagePlace(System.String,System.Boolean)">
            <summary>
            Creates a marriage place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MarriagePlace(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a marriage place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherName(System.String)">
            <summary>
            Creates a father name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherName(System.String,System.Boolean)">
            <summary>
            Creates a father name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherName(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a father name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherGivenName(System.String)">
            <summary>
            Creates a father given name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherGivenName(System.String,System.Boolean)">
            <summary>
            Creates a father given name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherGivenName(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a father given name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherSurname(System.String)">
            <summary>
            Creates a father surname search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherSurname(System.String,System.Boolean)">
            <summary>
            Creates a father surname search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherSurname(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a father surname search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherGender(System.String)">
            <summary>
            Creates a father gender search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherGender(System.String,System.Boolean)">
            <summary>
            Creates a father gender search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherGender(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a father gender search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherBirthDate(System.String)">
            <summary>
            Creates a father birth date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherBirthDate(System.String,System.Boolean)">
            <summary>
            Creates a father birth date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherBirthDate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a father birth date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherBirthPlace(System.String)">
            <summary>
            Creates a father birth place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherBirthPlace(System.String,System.Boolean)">
            <summary>
            Creates a father birth place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherBirthPlace(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a father birth place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherDeathDate(System.String)">
            <summary>
            Creates a father death date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherDeathDate(System.String,System.Boolean)">
            <summary>
            Creates a father death date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherDeathDate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a father death date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherDeathPlace(System.String)">
            <summary>
            Creates a father death place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherDeathPlace(System.String,System.Boolean)">
            <summary>
            Creates a father death place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherDeathPlace(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a father death place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherMarriageDate(System.String)">
            <summary>
            Creates a father marriage date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherMarriageDate(System.String,System.Boolean)">
            <summary>
            Creates a father marriage date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherMarriageDate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a father marriage date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherMarriagePlace(System.String)">
            <summary>
            Creates a father marriage place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherMarriagePlace(System.String,System.Boolean)">
            <summary>
            Creates a father marriage place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.FatherMarriagePlace(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a father marriage place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherName(System.String)">
            <summary>
            Creates a mother name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherName(System.String,System.Boolean)">
            <summary>
            Creates a mother name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherName(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a mother name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherGivenName(System.String)">
            <summary>
            Creates a mother given name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherGivenName(System.String,System.Boolean)">
            <summary>
            Creates a mother given name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherGivenName(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a mother given name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherSurname(System.String)">
            <summary>
            Creates a mother surname search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherSurname(System.String,System.Boolean)">
            <summary>
            Creates a mother surname search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherSurname(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a mother surname search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherGender(System.String)">
            <summary>
            Creates a mother gender search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherGender(System.String,System.Boolean)">
            <summary>
            Creates a mother gender search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherGender(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a mother gender search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherBirthDate(System.String)">
            <summary>
            Creates a mother birth date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherBirthDate(System.String,System.Boolean)">
            <summary>
            Creates a mother birth date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherBirthDate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a mother birth date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherBirthPlace(System.String)">
            <summary>
            Creates a mother birth place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherBirthPlace(System.String,System.Boolean)">
            <summary>
            Creates a mother birth place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherBirthPlace(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a mother birth place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherDeathDate(System.String)">
            <summary>
            Creates a mother death date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherDeathDate(System.String,System.Boolean)">
            <summary>
            Creates a mother death date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherDeathDate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a mother death date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherDeathPlace(System.String)">
            <summary>
            Creates a mother death place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherDeathPlace(System.String,System.Boolean)">
            <summary>
            Creates a mother death place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherDeathPlace(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a mother death place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherMarriageDate(System.String)">
            <summary>
            Creates a mother marriage date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherMarriageDate(System.String,System.Boolean)">
            <summary>
            Creates a mother marriage date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherMarriageDate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a mother marriage date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherMarriagePlace(System.String)">
            <summary>
            Creates a mother marriage place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherMarriagePlace(System.String,System.Boolean)">
            <summary>
            Creates a mother marriage place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.MotherMarriagePlace(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a mother marriage place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseName(System.String)">
            <summary>
            Creates a spouse name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseName(System.String,System.Boolean)">
            <summary>
            Creates a spouse name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseName(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a spouse name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseGivenName(System.String)">
            <summary>
            Creates a spouse given name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseGivenName(System.String,System.Boolean)">
            <summary>
            Creates a spouse given name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseGivenName(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a spouse given name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseSurname(System.String)">
            <summary>
            Creates a spouse surname search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseSurname(System.String,System.Boolean)">
            <summary>
            Creates a spouse surname search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseSurname(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a spouse surname search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseGender(System.String)">
            <summary>
            Creates a spouse gender search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseGender(System.String,System.Boolean)">
            <summary>
            Creates a spouse gender search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseGender(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a spouse gender search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseBirthDate(System.String)">
            <summary>
            Creates a spouse birth date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseBirthDate(System.String,System.Boolean)">
            <summary>
            Creates a spouse birth date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseBirthDate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a spouse birth date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseBirthPlace(System.String)">
            <summary>
            Creates a spouse birth place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseBirthPlace(System.String,System.Boolean)">
            <summary>
            Creates a spouse birth place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseBirthPlace(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a spouse birth place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseDeathDate(System.String)">
            <summary>
            Creates a spouse death date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseDeathDate(System.String,System.Boolean)">
            <summary>
            Creates a spouse death date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseDeathDate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a spouse death date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseDeathPlace(System.String)">
            <summary>
            Creates a spouse death place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseDeathPlace(System.String,System.Boolean)">
            <summary>
            Creates a spouse death place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseDeathPlace(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a spouse death place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseMarriageDate(System.String)">
            <summary>
            Creates a spouse marriage date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseMarriageDate(System.String,System.Boolean)">
            <summary>
            Creates a spouse marriage date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseMarriageDate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a spouse marriage date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseMarriagePlace(System.String)">
            <summary>
            Creates a spouse marriage place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseMarriagePlace(System.String,System.Boolean)">
            <summary>
            Creates a spouse marriage place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.SpouseMarriagePlace(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a spouse marriage place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentName(System.String)">
            <summary>
            Creates a parent name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentName(System.String,System.Boolean)">
            <summary>
            Creates a parent name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentName(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a parent name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentGivenName(System.String)">
            <summary>
            Creates a parent given name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentGivenName(System.String,System.Boolean)">
            <summary>
            Creates a parent given name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentGivenName(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a parent given name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentSurname(System.String)">
            <summary>
            Creates a parent surname search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentSurname(System.String,System.Boolean)">
            <summary>
            Creates a parent surname search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentSurname(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a parent surname search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentGender(System.String)">
            <summary>
            Creates a parent gender search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentGender(System.String,System.Boolean)">
            <summary>
            Creates a parent gender search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentGender(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a parent gender search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentBirthDate(System.String)">
            <summary>
            Creates a parent birth date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentBirthDate(System.String,System.Boolean)">
            <summary>
            Creates a parent birth date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentBirthDate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a parent birth date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentBirthPlace(System.String)">
            <summary>
            Creates a parent birth place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentBirthPlace(System.String,System.Boolean)">
            <summary>
            Creates a parent birth place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentBirthPlace(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a parent birth place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentDeathDate(System.String)">
            <summary>
            Creates a parent death date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentDeathDate(System.String,System.Boolean)">
            <summary>
            Creates a parent death date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentDeathDate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a parent death date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentDeathPlace(System.String)">
            <summary>
            Creates a parent death place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentDeathPlace(System.String,System.Boolean)">
            <summary>
            Creates a parent death place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentDeathPlace(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a parent death place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentMarriageDate(System.String)">
            <summary>
            Creates a parent marriage date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentMarriageDate(System.String,System.Boolean)">
            <summary>
            Creates a parent marriage date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentMarriageDate(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a parent marriage date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentMarriagePlace(System.String)">
            <summary>
            Creates a parent marriage place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentMarriagePlace(System.String,System.Boolean)">
            <summary>
            Creates a parent marriage place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder.ParentMarriagePlace(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a parent marriage place search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPersonSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder">
            <summary>
            This is a helper utility for building syntactically correct place search query strings.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.NAME">
            <summary>
            The name parameter in place search queries.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.DATE">
            <summary>
            The date parameter in place search queries.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.PARENT_ID">
            <summary>
            The parent parameter in place search queries.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.TYPE_ID">
            <summary>
            The type parameter in place search queries.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.TYPE_GROUP_ID">
            <summary>
            The type group parameter in place search queries.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.LATITUDE">
            <summary>
            The latitude parameter in place search queries.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.LONGITUDE">
            <summary>
            The longitude parameter in place search queries.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.DISTANCE">
            <summary>
            The distance parameter in place search queries.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Param(System.String,System.String)">
            <summary>
            Creates a generic search parameter with the specified name and value.
            </summary>
            <param name="name">The name of the search parameter.</param>
            <param name="value">The value of the search parameter.</param>
            <returns>A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.</returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Param(System.String,System.String,System.Boolean)">
            <summary>
            Creates a generic search parameter with the specified name and value.
            </summary>
            <param name="name">The name of the search parameter.</param>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Param(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a generic search parameter with the specified name and value.
            </summary>
            <param name="prefix">The prefix to apply to the search parameter. This is used for controlling whether a parameter is required or not. See remarks.</param>
            <param name="name">The name of the search parameter.</param>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
            <remarks>
            The prefix parameter can take on three forms:
                "+": The parameter search value should be found in the search results
                null: The parameter search filter is optional
                "-": The parameter search value should not found in the search results (i.e., perform a NOT seaarch)
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Name(System.String)">
            <summary>
            Creates a name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Name(System.String,System.Boolean)">
            <summary>
            Creates a name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Name(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a name search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.NameNot(System.String)">
            <summary>
            Creates a "not name" search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Date(System.String)">
            <summary>
            Creates a date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Date(System.String,System.Boolean)">
            <summary>
            Creates a date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Date(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a date search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.DateNot(System.String)">
            <summary>
            Creates a "not date" search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.ParentId(System.String)">
            <summary>
            Creates a parent ID search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.ParentId(System.String,System.Boolean)">
            <summary>
            Creates a parent ID search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.ParentId(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a parent ID search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.ParentIdNot(System.String)">
            <summary>
            Creates a "not parent ID" search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.TypeId(System.String)">
            <summary>
            Creates a type ID search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.TypeId(System.String,System.Boolean)">
            <summary>
            Creates a type ID search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.TypeId(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a type ID search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.TypeIdNot(System.String)">
            <summary>
            Creates a "not type ID" search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.TypeGroupId(System.String)">
            <summary>
            Creates a type group ID search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.TypeGroupId(System.String,System.Boolean)">
            <summary>
            Creates a type group ID search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.TypeGroupId(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a type group ID search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.TypeGroupIdNot(System.String)">
            <summary>
            Creates a "not type group ID" search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Latitude(System.String)">
            <summary>
            Creates a latitude search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Latitude(System.String,System.Boolean)">
            <summary>
            Creates a latitude search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Latitude(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a latitude search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.LatitudeNot(System.String)">
            <summary>
            Creates a "not latitude" search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Longitude(System.String)">
            <summary>
            Creates a longitude search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Longitude(System.String,System.Boolean)">
            <summary>
            Creates a longitude search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Longitude(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a longitude search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.LongitudeNot(System.String)">
            <summary>
            Creates a "not longitude" search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Distance(System.String)">
            <summary>
            Creates a distance search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Distance(System.String,System.Boolean)">
            <summary>
            Creates a distance search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.Distance(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a distance search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <param name="exact">If set to <c>true</c> search results will only return values that exactly match the search parameter value.</param>
            <param name="required">If set to <c>true</c> then search results must satisfy this search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder.DistanceNot(System.String)">
            <summary>
            Creates a "not distance" search parameter with the search value.
            </summary>
            <param name="value">The value of the search parameter.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.GedcomxPlaceSearchQueryBuilder"/> containing the new parameter.
            </returns>
        </member>
        <member name="T:Gx.Rs.Api.Util.HttpWarning">
            <summary>
            Represents a model for "Warning" headers from REST API responses.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.HttpWarning.Parse(RestSharp.Parameter)">
            <summary>
            Parses the specified header and returns a collection of warning headers discovered and parsed.
            </summary>
            <param name="header">The header to parse.</param>
            <returns>A collection of warning headers that were discovered in the header and parsed.</returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.HttpWarning.Parse(System.String)">
            <summary>
            Parses the specified header value and returns the parsed warning header.
            </summary>
            <param name="headerValue">The header value to parse.</param>
            <returns>A warning header that was parsed.</returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.HttpWarning.#ctor(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Util.HttpWarning"/> class.
            </summary>
            <param name="code">The code to use in the warning.</param>
            <param name="application">The application originating the warning.</param>
            <param name="message">The warning message.</param>
        </member>
        <member name="P:Gx.Rs.Api.Util.HttpWarning.Code">
            <summary>
            Gets the code for the warning.
            </summary>
            <value>
            The code for the warning.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.HttpWarning.Application">
            <summary>
            Gets the originating application for the warning.
            </summary>
            <value>
            The originating application for the warning.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.HttpWarning.Message">
            <summary>
            Gets the warning message.
            </summary>
            <value>
            The warning message.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.Util.HypermediaEnabledDataExtensions">
            <summary>
            An extension helper for looking up links by rels.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.HypermediaEnabledDataExtensions.GetLink(Gx.Links.HypermediaEnabledData,System.String)">
            <summary>
            Gets the link from the <see cref="T:Gx.Links.HypermediaEnabledData"/> instance specified by the rel.
            </summary>
            <param name="this">The <see cref="T:Gx.Links.HypermediaEnabledData"/> instance from which the links will be filtered.</param>
            <param name="rel">The rel the link is known by.</param>
            <returns>The link with a matching rel as specified by the rel parameter.</returns>
        </member>
        <member name="T:Gx.Rs.Api.Util.IFilter">
            <summary>
            An interface for manipulating or reporting on a REST API client and request just before the specified client executes the specified request.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.IFilter.Handle(RestSharp.IRestClient,RestSharp.IRestRequest)">
            <summary>
            When overridden in a class this method is used to manipulate or report on the specified REST API client and request just before the specified client executes the specified request.
            </summary>
            <param name="client">The REST API client that will execute the specified request.</param>
            <param name="request">The REST API request that will be executed by the specified client.</param>
        </member>
        <member name="T:Gx.Rs.Api.Util.IFilterableRestClient">
            <summary>
            Defines a REST API client that can apply filters before handling requests.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.IFilterableRestClient.AddFilter(Gx.Rs.Api.Util.IFilter)">
            <summary>
            When implemented in a class this method adds a filter to apply to the REST API client before handling a request.
            </summary>
            <param name="filter">The <see cref="T:Gx.Rs.Api.Util.IFilter"/> to apply before handling a REST API request.</param>
        </member>
        <member name="M:Gx.Rs.Api.Util.IFilterableRestClient.Handle(RestSharp.IRestRequest)">
            <summary>
            Handles the specified request by applying the current <see cref="T:Gx.Rs.Api.Util.IFilter"/>s then calling <see cref="O:IRestClient.Handle"/>.
            </summary>
            <param name="request">The REST API request that will be filtered then executed.</param>
            <returns>A REST API response after the filters have been applied and the request executed.</returns>
        </member>
        <member name="P:Gx.Rs.Api.Util.IFilterableRestClient.FollowRedirects">
            <summary>
            Gets or sets a value indicating whether the REST API client should automatically follow redirect responses.
            </summary>
            <value>
              <c>true</c> if the REST API client should automatically follow redirect responses; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Gx.Rs.Api.Util.LinkParserExtensions">
            <summary>
            An extensions helper class for managing RFC 5988 compliant links.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.LinkParserExtensions.GetLinkExtensionSafe(Tavis.Link,System.String)">
            <summary>
            Gets the link value of the specified extension property without throwing an exception with the specified extension is not present.
            </summary>
            <param name="this">The RFC 5988 compliant link.</param>
            <param name="key">The name of the extension property.</param>
            <remarks>
            Properties that are not defined by RFC 5988 are stuffed into an extension list. This method only examines those links. All other standard RFC 5988
            properties can be managed safely through the RFC 5988 link class <see cref="T:Tavis.Link"/>.
            </remarks>
            <returns></returns>
        </member>
        <member name="T:Gx.Rs.Api.Util.Log4NetLoggingFilter">
            <summary>
            Enables log4net logging of REST API requests before the requests are executed. See remarks.
            </summary>
            <remarks>
            Log4net is used to log information about requests. The information is output as a DEBUG string and the logger is of
            type <c>Gx.Rs.Api.Util.Log4NetLoggingFilter</c>.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Util.Log4NetLoggingFilter.Handle(RestSharp.IRestClient,RestSharp.IRestRequest)">
            <summary>
            This method uses log4net to output a DEBUG string containing the HTTP method and fully qualified URI that will be executed.
            </summary>
            <param name="client">The REST API client that will execute the specified request.</param>
            <param name="request">The REST API request that will be executed by the specified client.</param>
        </member>
        <member name="T:Gx.Rs.Api.Util.PagedFeedEnumerator">
            <summary>
            A paged <see cref="T:Gx.Atom.Feed"/> enumerator. See remarks.
            </summary>
            <remarks>
            The HTTP GET requests can be customized by using a custom <see cref="T:Gx.Rs.Api.Util.PagedFeedEnumerator.IWebResourceProvider"/> and/or adding
            <see cref="T:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceBuilderExtension"/>s.
            
            @see <a href="http://tools.ietf.org/search/rfc5005#section-3">Paged Feeds</a>
            </remarks>
        </member>
        <member name="F:Gx.Rs.Api.Util.PagedFeedEnumerator.DEFAULT_WEB_RESOURCE_PROVIDER">
            <summary>
            The default <see cref="P:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceProvider"/> which simply sets the base URI on the REST API client
            and sets the resource on the REST API request.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Util.PagedFeedEnumerator"/> class.
            </summary>
            <param name="uri">The URI to use to get the paged feed.</param>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.FromUri(System.String)">
             
            
             @param uri 
             @return a 
            <summary>
            Creates a new paged feed iterator using the specified URI.
            </summary>
            <param name="uri">The URI to use to get the initial (next) paged feed document and from which future values of first, last, previous,
            and next hypertext references will be acquired.</param>
            <returns>A new <see cref="T:Gx.Rs.Api.Util.PagedFeedEnumerator"/>.</returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.FromFeed(Gx.Atom.Feed)">
            <summary>
            Creates a new paged feed iterator using the specified <see cref="T:Gx.Atom.Feed"/>.
            </summary>
            <param name="feed">The feed document from which the initial first, last, previous, and next hypertext references will be acquired.</param>
            <returns>A new <see cref="T:Gx.Rs.Api.Util.PagedFeedEnumerator"/>.</returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.GetLinkRelHref(Gx.Atom.Feed,System.String)">
            <summary>
            Gets the hypertext reference from the specified <see cref="T:Gx.Atom.Feed"/> for the specified rel link.
            </summary>
            <param name="feed">The source feed document.</param>
            <param name="rel">The desired rel link in the specified feed.</param>
            <returns>The hypertext reference, if it exists; otherwise <c>null</c>.</returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.AddWebResourceBuilderExtension(Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceBuilderExtension)">
            <summary>
            Adds a <see cref="T:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceBuilderExtension"/> in order to add cookies, header values, etc. to the paged feed document GET request.
            </summary>
            <param name="extension">The extension to add.</param>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.RemoveWebResourceBuilderExtension(Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceBuilderExtension)">
            <summary>
            Removes the specified <see cref="T:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceBuilderExtension"/>.
            </summary>
            <param name="extension">The extension to remove.</param>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.ClearWebResourceBuilderExtensions">
            <summary>
            Removes all <see cref="T:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceBuilderExtension"/>s.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.WithWebResourceBuilderExtension(Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceBuilderExtension)">
            <summary>
            Adds a <see cref="T:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceBuilderExtension"/> in order to add cookies, header values, etc. to the paged feed document GET request.
            </summary>
            <param name="extension">The extension to add.</param>
            <returns>A reference to this <see cref="T:Gx.Rs.Api.Util.PagedFeedEnumerator"/> for fluent configuration chaining.</returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.WithClient(Gx.Rs.Api.Util.IFilterableRestClient)">
             
            
             @param client t
             @return a 
            <summary>
            Sets the <see cref="T:Gx.Rs.Api.Util.IFilterableRestClient"/> to use to get paged feed documents.
            </summary>
            <param name="client">The <see cref="T:Gx.Rs.Api.Util.IFilterableRestClient"/> to use to get paged feed documents.</param>
            <returns>A reference to this <see cref="T:Gx.Rs.Api.Util.PagedFeedEnumerator"/> for fluent configuration chaining.</returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.WithWebResourceProvider(Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceProviderImpl)">
            <summary>
            Sets the <see cref="P:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceProvider"/> .
            </summary>
            <param name="webResourceProvider">The desired <see cref="P:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceProvider"/>.</param>
            <returns>A reference to this <see cref="T:Gx.Rs.Api.Util.PagedFeedEnumerator"/> for fluent configuration chaining.</returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.First">
            <summary>
            Gets the FIRST paged results, if available.
            </summary>
            <returns>The FIRST paged results, if available</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if a FIRST link is available. Check <see cref="P:Gx.Rs.Api.Util.PagedFeedEnumerator.HasFirst"/> to prevent undesired behavior.</exception>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.Last">
            <summary>
            Gets the LAST paged results, if available.
            </summary>
            <returns>The LAST paged results, if available</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if a LAST link is available. Check <see cref="P:Gx.Rs.Api.Util.PagedFeedEnumerator.HasLast"/> to prevent undesired behavior.</exception>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.Previous">
            <summary>
            Gets the PREVIOUS paged results, if available.
            </summary>
            <returns>The PREVIOUS paged results, if available</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if a PREVIOUS link is available. Check <see cref="P:Gx.Rs.Api.Util.PagedFeedEnumerator.HasPrevious"/> to prevent undesired behavior.</exception>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.Next">
            <summary>
            Gets the NEXT paged results, if available.
            </summary>
            <returns>The NEXT paged results, if available</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if a NEXT link is available. Check <see cref="P:Gx.Rs.Api.Util.PagedFeedEnumerator.HasNext"/> to prevent undesired behavior.</exception>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.LoadHRefsFromFeed(Gx.Atom.Feed)">
            <summary>
            Loads available links into this instance.
            </summary>
            <param name="feed">The feed from which links will be extracted.</param>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            <c>true</c> if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="P:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceBuilderExtensions">
            <summary>
            Gets the web resource builder extensions that will be used to modify REST API requests just before retrieving the feed.
            </summary>
            <value>
            The web resource builder extensions that will be used to modify REST API requests just before retrieving the feed.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.PagedFeedEnumerator.Client">
            <summary>
            Gets the <see cref="T:Gx.Rs.Api.Util.IFilterableRestClient"/> being used to get paged feed documents.
            </summary>
            <value>
            The <see cref="T:Gx.Rs.Api.Util.IFilterableRestClient"/> being used to get paged feed documents..
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceProvider">
            <summary>
            Gets or sets the web resource provider.
            </summary>
            <value>
            The web resource provider.
            </value>
            <remarks>
            Upon instantiation, this defaults to <see cref="F:Gx.Rs.Api.Util.PagedFeedEnumerator.DEFAULT_WEB_RESOURCE_PROVIDER"/>.
            </remarks>
        </member>
        <member name="P:Gx.Rs.Api.Util.PagedFeedEnumerator.HasFirst">
            <summary>
            Gets a value indicating whether this instance has a FIRST link.
            </summary>
            <value>
              <c>true</c> if this instance has a FIRST link; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.PagedFeedEnumerator.FirstHRef">
            <summary>
            Gets the FIRST link.
            </summary>
            <value>
            The FIRST link.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.PagedFeedEnumerator.LastHRef">
            <summary>
            Gets the LAST link
            </summary>
            <value>
            The LAST link.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.PagedFeedEnumerator.HasLast">
            <summary>
            Gets a value indicating whether this instance has a LAST link.
            </summary>
            <value>
              <c>true</c> if this instance has a LAST link; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.PagedFeedEnumerator.PreviousHRef">
            <summary>
            Gets the PREVIOUS link.
            </summary>
            <value>
            The PREVIOUS link.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.PagedFeedEnumerator.HasPrevious">
            <summary>
            Gets a value indicating whether this instance has a PREVIOUS link.
            </summary>
            <value>
            <c>true</c> if this instance has a PREVIOUS link; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.PagedFeedEnumerator.NextHRef">
            <summary>
            Gets the NEXT link.
            </summary>
            <value>
            The NEXT link.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.PagedFeedEnumerator.HasNext">
            <summary>
            Gets a value indicating whether this instance has a NEXT link.
            </summary>
            <value>
              <c>true</c> if this instance has a NEXT link; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gx.Rs.Api.Util.PagedFeedEnumerator.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
        </member>
        <member name="P:Gx.Rs.Api.Util.PagedFeedEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
        </member>
        <member name="T:Gx.Rs.Api.Util.PagedFeedEnumerator.IWebResourceProvider">
            <summary>
            Interface for providing <see cref="T:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceProviderImpl"/>s to use for fetching paged feed documents.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.IWebResourceProvider.Provide(Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Provide the WebResourceProviderImpl to use for fetching a paged feed document.
            </summary>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="uri">The specified URI for the first, last, previous, and/or next paged feed document.</param>
            <returns>A <see cref="T:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceProviderImpl"/> for acquiring the desired paged feed document.</returns>
        </member>
        <member name="T:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceProviderImpl">
            <summary>
            A basic implementation of the <see cref="T:Gx.Rs.Api.Util.PagedFeedEnumerator.IWebResourceProvider"/> interface, which simply sets the base URI on the REST API client
            and sets the resource on the REST API request.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceProviderImpl.Provide(Gx.Rs.Api.Util.IFilterableRestClient,System.String)">
            <summary>
            Provide the WebResourceProviderImpl to use for fetching a paged feed document.
            </summary>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="uri">The specified URI for the first, last, previous, and/or next paged feed document.</param>
            <returns>
            A <see cref="T:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceProviderImpl"/> for acquiring the desired paged feed document.
            </returns>
        </member>
        <member name="T:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceBuilderExtension">
            <summary>
            Interface for extending HTTP GET requests (e.g. add cookies, header values, etc.).
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.PagedFeedEnumerator.WebResourceBuilderExtension.Extend(RestSharp.IRestRequest)">
            <summary>
            Extends a REST API request.
            </summary>
            <param name="requeset">The requeset to extend.</param>
            <returns>The extended REST API request.</returns>
        </member>
        <member name="T:Gx.Rs.Api.Util.FilterableRestClient">
            <summary>
            Represents a REST API client that can have <see cref="T:Gx.Rs.Api.Util.IFilter"/>s applied just before executing requests. See remarks.
            </summary>
            <remarks>
            It is important to note, however, that in order for the <see cref="T:Gx.Rs.Api.Util.IFilter"/>s to be applied, the <see cref="M:Gx.Rs.Api.Util.FilterableRestClient.Handle(RestSharp.IRestRequest)"/> method must be called.
            Calling <see cref="O:IRestClient.Execute"/> directly will not result in these filters being applied.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Util.FilterableRestClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Util.FilterableRestClient"/> class.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.FilterableRestClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.Util.FilterableRestClient"/> class.
            </summary>
            <param name="baseUrl">The base URI for the REST API client.</param>
        </member>
        <member name="M:Gx.Rs.Api.Util.FilterableRestClient.AddFilter(Gx.Rs.Api.Util.IFilter)">
            <summary>
            Adds a filter to the current REST API client.
            </summary>
            <param name="filter">The filter to apply to the REST API client. See remarks.</param>
            <remarks>
            The filter added here will be applied for all subsequent calls to <see cref="M:Gx.Rs.Api.Util.FilterableRestClient.Handle(RestSharp.IRestRequest)"/>. It is important to note, however, that in order for any
            <see cref="T:Gx.Rs.Api.Util.IFilter"/> to be applied, the <see cref="M:Gx.Rs.Api.Util.FilterableRestClient.Handle(RestSharp.IRestRequest)"/> method must be called. Calling <see cref="O:IRestClient.Execute"/> directly will not
            result in these filters being applied.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Util.FilterableRestClient.Handle(RestSharp.IRestRequest)">
            <summary>
            Handles the specified request by applying all current filters.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <returns></returns>
        </member>
        <member name="T:Gx.Rs.Api.Util.RdfExtensions">
            <summary>
            This is an extension helper class to simplify working with the RDF data model.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.RdfExtensions.GetPredicateQuad(System.Collections.Generic.IEnumerable{JsonLD.Core.RDFDataset.Quad},System.String)">
            <summary>
            Gets the predicate quad with the specified value.
            </summary>
            <param name="this">The collection of all RDF quads to be searched.</param>
            <param name="value">The value to search for among all predicates from the specified collection.</param>
            <returns>The first <see cref="T:JsonLD.Core.RDFDataset.Quad"/> with a matching predicate value to that of the one specified.</returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.RdfExtensions.GetPredicateQuads(System.Collections.Generic.IEnumerable{JsonLD.Core.RDFDataset.Quad},System.String)">
            <summary>
            Gets all predicate quads with the specified value.
            </summary>
            <param name="this">The collection of all RDF quads to be searched.</param>
            <param name="value">The value to search for among all predicates from the specified collection.</param>
            <returns>The list of all <see cref="T:JsonLD.Core.RDFDataset.Quad"/>s with matching predicate values to that of the one specified.</returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.RdfExtensions.HasPredicateQuad(System.Collections.Generic.IEnumerable{JsonLD.Core.RDFDataset.Quad},System.String)">
            <summary>
            Determines whether the specified collection has any predicates with the specified values.
            </summary>
            <param name="this">The collection of all RDF quads to be searched.</param>
            <param name="value">The value to search for among all predicates from the specified collection.</param>
            <returns>
            <c>true</c> if the collection has any predicates with a matching predicate value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.RdfExtensions.GetSubjectQuads(System.Collections.Generic.IEnumerable{JsonLD.Core.RDFDataset.Quad},System.String)">
            <summary>
            Gets all subject quad with the specified value.
            </summary>
            <param name="this">The collection of all RDF quads to be searched.</param>
            <param name="value">The value to search for among all subjects from the specified collection.</param>
            <returns>The list of all <see cref="T:JsonLD.Core.RDFDataset.Quad"/>s with matching subject values to that of the one specified.</returns>
        </member>
        <member name="T:Gx.Rs.Api.Util.RestClientExtensions">
            <summary>
            An extension helper class for RestSharp classes, primarily <see cref="T:RestSharp.IRestClient"/>, <see cref="T:RestSharp.IRestRequest"/>, and <see cref="T:RestSharp.IRestResponse"/>.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.RestClientExtensions.Accept(RestSharp.IRestRequest,System.Object)">
            <summary>
            Adds an accept haeder to the specified REST API request.
            </summary>
            <param name="this">The REST API request to have the header applied.</param>
            <param name="value">The value of the header to be applied.</param>
            <returns>The REST API request with the specified accept header applied.</returns>
            <remarks>
            The accept header will be updated if it already exists; otherwise, it will be added.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Util.RestClientExtensions.ContentType(RestSharp.IRestRequest,System.Object)">
            <summary>
            Adds a content type header to the specified REST API request.
            </summary>
            <param name="this">The REST API request to have the header applied.</param>
            <param name="value">The value of the header to be applied.</param>
            <returns>The REST API request with the specified content type header applied.</returns>
            <remarks>
            The content type header will be updated if it already exists; otherwise, it will be added.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Util.RestClientExtensions.Build(RestSharp.IRestRequest,System.String,RestSharp.Method)">
            <summary>
            Builds the specified REST API request by setting the request format, method, and resource.
            </summary>
            <param name="this">The REST API request to build.</param>
            <param name="href">The URI the REST API request should use. At a minimum, it needs the <see cref="P:Uri.PathAndQuery"/>.</param>
            <param name="method">The method the specified REST API request should use.</param>
            <returns>
            A REST API request with the request format, method, and resource initialized. After this method has been called, the returned result is
            now ready to be executed by <see cref="O:IRestClient.Execute"/>.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.RestClientExtensions.Build(RestSharp.IRestRequest,System.Uri,RestSharp.Method)">
            <summary>
            Builds the specified REST API request by setting the request format, method, and resource.
            </summary>
            <param name="this">The REST API request to build.</param>
            <param name="uri">The URI the REST API request should use. At a minimum, it needs the <see cref="P:Uri.PathAndQuery" />.</param>
            <param name="method">The method the specified REST API request should use.</param>
            <returns>
            A REST API request with the request format, method, and resource initialized. After this method has been called, the returned result is
            now ready to be executed by <see cref="O:IRestClient.Execute" />.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.RestClientExtensions.SetEntity``1(RestSharp.IRestRequest,``0)">
            <summary>
            Sets the specified entity as a parameter on the <see cref="T:RestSharp.IRestRequest"/>. See remarks.
            </summary>
            <typeparam name="T">The type of entity to be set.</typeparam>
            <param name="this">The <see cref="T:RestSharp.IRestRequest"/> to have the entity embedded in the request.</param>
            <param name="entity">The entity to embed in the <see cref="T:RestSharp.IRestRequest"/>.</param>
            <returns>A <see cref="T:RestSharp.IRestRequest"/> with the specified entity embedded.</returns>
            <remarks>
            This method typically adds the specified entity as a body parameter; however, in the case of <see cref="T:IDictionary"/> objects,
            and derivatives, it is broken into key value pairs, and each key value pair is added as a regular parameter via the
            <see cref="M:IRestRequest(String, Object)"/> method.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Util.RestClientExtensions.HasClientError(RestSharp.IRestResponse)">
            <summary>
            Determines whether the server response status code indicates a client side error (status code &gt;= 400 and &lt; 500).
            </summary>
            <param name="this">The <see cref="T:RestSharp.IRestResponse"/> to evaluate.</param>
            <returns>
            <c>true</c> if the response status code is &gt;= 400 and &lt; 500; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.RestClientExtensions.HasServerError(RestSharp.IRestResponse)">
            <summary>
            Determines whether the server response status code indicates a server side error (status code &gt;= 500 and &lt; 600).
            </summary>
            <param name="this">The <see cref="T:RestSharp.IRestResponse"/> to evaluate.</param>
            <returns>
            <c>true</c> if the response status code is &gt;= 500 and &lt; 600; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.RestClientExtensions.ToIRestResponse``1(RestSharp.IRestResponse)">
            <summary>
            Converts the specified <see cref="T:RestSharp.IRestResponse"/> into a strongly typed REST API response.
            </summary>
            <typeparam name="T">The type to cast the response to. See remarks.</typeparam>
            <param name="this">The <see cref="T:RestSharp.IRestResponse"/> which will be strongly typed.</param>
            <returns>
            A strongly typed REST API response.
            </returns>
            <remarks>
            This method will attempt to deserialize the response data using either <see cref="T:Gedcomx.File.DefaultXmlSerialization"/>
            or <see cref="T:Gedcomx.File.DefaultJsonSerialization"/>. The type used is determined by <see cref="M:Gx.Rs.Api.Util.RestClientExtensions.GetDataFormat(RestSharp.IRestResponse)"/>.
            </remarks>
        </member>
        <member name="M:Gx.Rs.Api.Util.RestClientExtensions.Get(System.Collections.Generic.IEnumerable{RestSharp.Parameter},System.String)">
            <summary>
            Gets the parameters from the specified collection with the specified name.
            </summary>
            <param name="this">The collection of parameters to be evaluated.</param>
            <param name="name">The name of the parameter being sought.</param>
            <returns>The collection of parameters that satisfy the search condition.</returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.RestClientExtensions.GetHeaders(RestSharp.IRestRequest)">
            <summary>
            Gets the collection of REST API request headers.
            </summary>
            <param name="this">The REST API request from which the headers will be retrieved.</param>
            <returns>The collection of REST API request headers.</returns>
        </member>
        <member name="M:Gx.Rs.Api.Util.RestClientExtensions.AcceptLanguage(RestSharp.IRestRequest,System.String)">
            <summary>
            Adds an accept language to the specified REST API request.
            </summary>
            <param name="this">The REST API request to have the header applied.</param>
            <param name="value">The value of the header to be applied.</param>
            <returns>The REST API request with the specified accept language header applied.</returns>
            <remarks>
            The accept language header will be updated if it already exists; otherwise, it will be added.
            </remarks>
        </member>
        <member name="T:Gx.Rs.Api.Util.ServiceHelper">
            <summary>
            A helper utility in working specifically with the FamilySearch web API endpoints.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.ServiceHelper.DATE_FORMAT">
            <summary>
            The date format expected by FamilySearch web API endpoints.
            </summary>
        </member>
        <member name="T:Gx.Rs.Api.Util.UriExtensions">
            <summary>
            A URI extensions helper class.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.UriExtensions.GetBaseUrl(System.Uri)">
            <summary>
            Gets the base URL of the specified URI.
            </summary>
            <param name="this">The URI from which the base URL is determined. See remarks.</param>
            <returns>The base URL from the specified URI.</returns>
            <remarks>
            The specified URI should be an absolute URI. The base URL is determined by extracting the authority from the specified URI, which will fail
            for relative URIs.
            </remarks>
        </member>
        <member name="T:Gx.Rs.Api.Util.UriTemplateExtensions">
            <summary>
            A <see cref="T:Tavis.UriTemplates.UriTemplate"/> extensions helper.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.Util.UriTemplateExtensions.AddParameter(Tavis.UriTemplates.UriTemplate,System.String,System.Object)">
            <summary>
            Adds a parameter name value pair to the specified URI template.
            </summary>
            <param name="this">The <see cref="T:Tavis.UriTemplates.UriTemplate"/> to modify.</param>
            <param name="name">The name of the parameter to add.</param>
            <param name="value">The value of the parameter to add.</param>
            <returns>The specified <see cref="T:Tavis.UriTemplates.UriTemplate"/> with the newly added parameter.</returns>
        </member>
        <member name="T:Gx.Rs.Api.Util.VocabConstants">
            <summary>
            This is a collection of constants used with RDF processing.
            </summary>
            <remarks>
            At this time, only namespaces are defined here.
            </remarks>
        </member>
        <member name="F:Gx.Rs.Api.Util.VocabConstants.RDF_NAMESPACE">
            <summary>
            The RDF namespace, <a href="http://www.w3.org/1999/02/22-rdf-syntax-ns#">http://www.w3.org/1999/02/22-rdf-syntax-ns#</a>.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.VocabConstants.RDFS_NAMESPACE">
            <summary>
            The RDFS namespace, <a href="http://www.w3.org/2000/01/rdf-schema#">http://www.w3.org/2000/01/rdf-schema#</a>.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.VocabConstants.DC_NAMESPACE">
            <summary>
            The DC namespace, <a href="http://purl.org/dc/terms/">http://purl.org/dc/terms/</a>.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.VocabConstants.XML_NAMESPACE">
            <summary>
            The XML namespace, <a href="http://www.w3.org/XML/1998/namespace">http://www.w3.org/XML/1998/namespace</a>.
            </summary>
        </member>
        <member name="F:Gx.Rs.Api.Util.VocabConstants.RDF_SEQUENCE_TYPE">
            <summary>
            The RDF Sequence namespace, <a href="http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq">http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq</a>.
            </summary>
        </member>
        <member name="T:Gx.Rs.Api.VocabElementListState">
            <summary>
            The VocabElementListState exposes management functions for a vocab element list.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.VocabElementListState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.VocabElementListState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.VocabElementListState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.VocabElementListState.GetVocabElementList">
            <summary>
            Gets the vocab element list associated with this state instance.
            </summary>
            <returns>The vocab element list associated with this state instance</returns>
        </member>
        <member name="M:Gx.Rs.Api.VocabElementListState.LoadEntity(RestSharp.IRestResponse)">
            <summary>
            Returns the <see cref="T:JsonLD.Core.RDFDataset"/> from the REST API response.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>The <see cref="T:JsonLD.Core.RDFDataset"/> from the REST API response.</returns>
        </member>
        <member name="M:Gx.Rs.Api.VocabElementListState.MapToVocabElement(System.Collections.Generic.IEnumerable{JsonLD.Core.RDFDataset.Quad})">
            <summary>
            Map a RDF resource that represents a vocabulary element to a GedcomX vocabulary element.
            </summary>
            <param name="quads">The list of RDF Quads that represents a vocabulary element.</param>
            <returns>A GedcomX vocabulary element that corresponds to the given RDF Quads.</returns>
        </member>
        <member name="P:Gx.Rs.Api.VocabElementListState.SelfRel">
            <summary>
            Gets the rel name for the currrent state instance. This is expected to be overridden.
            </summary>
            <value>
            The rel name for the currrent state instance
            </value>
        </member>
        <member name="P:Gx.Rs.Api.VocabElementListState.MainDataElement">
            <summary>
            Gets the main data element represented by this state instance.
            </summary>
            <value>
            The main data element represented by this state instance.
            </value>
            <remarks>
            This class does not have a <see cref="T:Gedcomx.Model.SupportsLinks"/> entity; therefore, this
            always returns null.
            </remarks>
        </member>
        <member name="T:Gx.Rs.Api.VocabElementState">
            <summary>
            The VocabElementState exposes management functions for a vocab element.
            </summary>
        </member>
        <member name="M:Gx.Rs.Api.VocabElementState.#ctor(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient,System.String,Gx.Rs.Api.StateFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Gx.Rs.Api.VocabElementState"/> class.
            </summary>
            <param name="request">The REST API request that will be used to instantiate this state instance.</param>
            <param name="response">The REST API response that was produced from the REST API request.</param>
            <param name="client">The REST API client to use for API calls.</param>
            <param name="accessToken">The access token to use for subsequent invocations of the REST API client.</param>
            <param name="stateFactory">The state factory to use for state instantiation.</param>
        </member>
        <member name="M:Gx.Rs.Api.VocabElementState.Clone(RestSharp.IRestRequest,RestSharp.IRestResponse,Gx.Rs.Api.Util.IFilterableRestClient)">
            <summary>
            Clones the current state instance.
            </summary>
            <param name="request">The REST API request used to create this state instance.</param>
            <param name="response">The REST API response used to create this state instance.</param>
            <param name="client">The REST API client used to create this state instance.</param>
            <returns>A cloned instance of the current state instance.</returns>
        </member>
        <member name="M:Gx.Rs.Api.VocabElementState.LoadEntity(RestSharp.IRestResponse)">
            <summary>
            Returns the <see cref="T:JsonLD.Core.RDFDataset"/> from the REST API response.
            </summary>
            <param name="response">The REST API response.</param>
            <returns>The <see cref="T:JsonLD.Core.RDFDataset"/> from the REST API response.</returns>
        </member>
        <member name="M:Gx.Rs.Api.VocabElementState.GetVocabElement">
            <summary>
            Gets the vocab element represented by this state instance.
            </summary>
            <returns>The vocab element represented by this state instance.</returns>
        </member>
        <member name="P:Gx.Rs.Api.VocabElementState.SelfRel">
            <summary>
            Gets the rel name for the currrent state instance. This is expected to be overridden.
            </summary>
            <value>
            The rel name for the currrent state instance
            </value>
        </member>
        <member name="P:Gx.Rs.Api.VocabElementState.MainDataElement">
            <summary>
            Gets the main data element represented by this state instance.
            </summary>
            <value>
            The main data element represented by this state instance.
            </value>
            <remarks>
            This class does not have a <see cref="T:Gedcomx.Model.SupportsLinks"/> entity; therefore, this
            always returns null.
            </remarks>
        </member>
        <member name="P:Gx.Rs.Api.VocabElementState.Model">
            <summary>
            Gets the <see cref="T:JsonLD.Core.RDFDataset"/> represented by this state instance.
            </summary>
            <value>
            The <see cref="T:JsonLD.Core.RDFDataset"/> represented by this state instance.
            </value>
        </member>
    </members>
</doc>
